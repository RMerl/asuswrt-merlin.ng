.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "EAPOL_TEST" "8" "21 April 2019" "" ""

.SH NAME
eapol_test \- EAP peer and RADIUS client testing
.SH SYNOPSIS

\fBeapol_test\fR [ \fB-nWS\fR ] [ \fB-c\fIconfig file\fB\fR ] [ \fB-a\fIserver IP address\fB\fR ] [ \fB-A\fIclient IP address\fB\fR ] [ \fB-p\fIUDP port\fB\fR ] [ \fB-s\fIshared secret\fB\fR ] [ \fB-r\fIre-authentications\fB\fR ] [ \fB-t\fItimeout\fB\fR ] [ \fB-C\fIConnect-Info\fB\fR ] [ \fB-M\fIMAC address\fB\fR ] [ \fB-o\fIfile\fB\fR ] [ \fB-N\fIattr spec\fB\fR ]


\fBeapol_test scard\fR


\fBeapol_test sim\fR [ \fBPIN\fR ] [ \fBnum triplets\fR ]

.SH "OVERVIEW"
.PP
eapol_test is a program that links together the same EAP
peer implementation that wpa_supplicant is using and the RADIUS
authentication client code from hostapd. In addition, it has
minimal glue code to combine these two components in similar
ways to IEEE 802.1X/EAPOL Authenticator state machines. In other
words, it integrates IEEE 802.1X Authenticator (normally, an
access point) and IEEE 802.1X Supplicant (normally, a wireless
client) together to generate a single program that can be used to
test EAP methods without having to setup an access point and a
wireless client.
.PP
The main uses for eapol_test are in interoperability testing
of EAP methods against RADIUS servers and in development testing
for new EAP methods. It can be easily used to automate EAP testing
for interoperability and regression since the program can be run
from shell scripts without require additional test components apart
from a RADIUS server. For example, the automated EAP tests described
in eap_testing.txt are implemented with eapol_test. Similarly,
eapol_test could be used to implement an automated regression
test suite for a RADIUS authentication server.
.PP
As an example:
.sp
.RS

.nf
eapol_test -ctest.conf -a127.0.0.1 -p1812 -ssecret -r1
.fi
.RE
.PP
tries to complete EAP authentication based on the network
configuration from test.conf against the RADIUS server running
on the local host. A re-authentication is triggered to test fast
re-authentication. The configuration file uses the same format for
network blocks as wpa_supplicant.
.SH "COMMAND ARGUMENTS"
.TP
\fB-c configuration file path\fR
A configuration to use.  The configuration should
use the same format for network blocks as wpa_supplicant.
.TP
\fB-a AS address\fR
IP address of the authentication server.  The
default is '127.0.0.1'.
.TP
\fB-A client address\fR
IP address of the client.  The default is to
select an address automatically.
.TP
\fB-p AS port\fR
UDP port of the authentication server. The
default is '1812'.
.TP
\fB-s AS secret\fR
Shared secret with the authentication server.
The default is 'radius'.
.TP
\fB-r count\fR
Number of reauthentications.
.TP
\fB-t timeout\fR
Timeout in seconds. The default is 30.
.TP
\fB-C info\fR
RADIUS Connect-Info.  The default is
\&'CONNECT 11Mbps 802.11b'.
.TP
\fB-M mac address\fR
Client MAC address (Calling-Station-Id).  The
default is '02:00:00:00:00:01'.
.TP
\fB-o file\fR
Location to write out server certificate.
.TP
\fB-N attr spec\fR
Send arbitrary attribute specific by
attr_id:syntax:value, or attr_id alone.  attr_id should be the numeric
ID of the attribute, and syntax should be one of 's' (string),
\&'d' (integer), or 'x' (octet string). The value is the attribute value
to send.  When attr_id is given alone, NULL is used as the attribute
value.  Multiple attributes can be specified by using the option
several times.
.TP
\fB-n\fR
Indicates that no MPPE keys are expected.
.TP
\fB-W\fR
Wait for a control interface monitor before starting.
.TP
\fB-S\fR
Save configuration after authentication.
.SH "SEE ALSO"
.PP
\fBwpa_supplicant\fR(8)
.SH "LEGAL"
.PP
wpa_supplicant is copyright (c) 2003-2019,
Jouni Malinen <j@w1.fi> and
contributors.
All Rights Reserved.
.PP
This program is licensed under the BSD license (the one with
advertisement clause removed).
