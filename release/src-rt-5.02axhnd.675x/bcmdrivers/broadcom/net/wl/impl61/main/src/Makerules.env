#*******************************************************************************
#
# Copyright 2019 Broadcom
#
# This program is the proprietary software of Broadcom and/or
# its licensors, and may only be used, duplicated, modified or distributed
# pursuant to the terms and conditions of a separate, written license
# agreement executed between you and Broadcom (an "Authorized License").
# Except as set forth in an Authorized License, Broadcom grants no license
# (express or implied), right to use, or waiver of any kind with respect to
# the Software, and Broadcom expressly reserves all rights in and to the
# Software and all intellectual property rights therein.  IF YOU HAVE NO
# AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY
# WAY, AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF
# THE SOFTWARE.
#
# Except as expressly set forth in the Authorized License,
#
# 1. This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use
# all reasonable efforts to protect the confidentiality thereof, and to
# use this information only in connection with your use of Broadcom
# integrated circuit products.
#
# 2. TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
# "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES,
# REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR
# OTHERWISE, WITH RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY
# DISCLAIMS ANY AND ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
# NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES,
# ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR
# CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING
# OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
#
# 3. TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
# BROADCOM OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL,
# SPECIAL, INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR
# IN ANY WAY RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN
# IF BROADCOM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii)
# ANY AMOUNT IN EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF
# OR U.S. $1, WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY
# NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
#
#
# <<Broadcom-WL-IPTag/Proprietary:>>
#
# $Id: Makerules.env 771269 2019-01-21 07:25:16Z $
# Top-level Makerules for defining environment variables
# can be included by anyone doing software at Epigram
#*******************************************************************************

# Defines and exports these variables:
# HOSTENV, HOSTOS, TARGETENV, TARGETOS, TARGETARCH, TARGETCPU

# HOSTOS is either unix or Windows_NT.
# HOSTENV differentiates HOSTOS and is either sun4, or Windows_NT.
# This refers to the *BUILD* environment. All environments use "GNU C"
# except Windows_NT which may use "GNU C" or "Microsoft C".

ifndef HOSTENV
    # Figure what type of host we are in.
    _uname_ := $(shell uname)
    ifeq ($(_uname_), Linux)
	HOSTENV := linux
	HOSTOS := unix
    else
	ifneq ($(findstring CYGWIN,$(_uname_)),)
	    HOSTENV := Windows_NT
	    HOSTOS := Windows_NT
	else
	    ifeq ($(_uname_), Darwin)
		HOSTENV := macos
		HOSTOS := unix
	    else
		HOSTENV := unknown
		HOSTOS := unknown
	    endif
	endif
    endif
endif
# In case we just defined them, make sure they are known
export HOSTENV
export HOSTOS

# TARGETENV is one of linux, linuxarm, android, android_ndk_r6b, linuxmips, linuxmips_be, cygwin32, win32, or macos
# TARGETENV defaults to HOSTENV unless HOSTENV is Windows_NT, in
# which case it defaults to win32.

ifndef TARGETENV
    ifeq ($(HOSTENV), Windows_NT)
	TARGETENV := win32
    else
        TARGETENV := $(HOSTENV)
    endif
endif
export TARGETENV

# TARGETOS defaults to HOSTOS in most cases
ifneq ($(findstring "$(TARGETENV)", "linux" "linuxarm" "linuxarm64" "linuxarm_le" "android" "android_ndk_r6b" "linuxmips" "linuxmips_be" "cygwin32" "win32" "macos"), )
    TARGETOS := $(HOSTOS)
endif
ifeq ($(TARGETENV), bcmmips)
    TARGETOS := bcmmips
endif
ifeq ($(TARGETENV), nucleusarm)
    TARGETOS := nucleus
endif
ifndef TARGETOS
    TARGETOS := unknown
endif
export TARGETOS

# TARGETARCH is the target processor architecture
# Currently valid values are: x86, x86_mmx, unknown, or a list of any
# of the valid values.
# For the x86* family, a generic x86 is assumed if not otherwise specified
# Order is important since "linux" matches both linuxmips and linux.
ifndef TARGETARCH
    ifneq ($(findstring "$(TARGETENV)", "android"), )
	TARGETARCH := arm_android
    endif

    ifneq ($(findstring "$(TARGETENV)", "android_ndk_r6b"), )
	TARGETARCH := arm_android_ndk_r6b
    endif

    ifneq ($(findstring "$(TARGETENV)", "linuxarm_le"), )
	TARGETARCH := arm_le
    endif
    ifneq ($(findstring "$(TARGETENV)", "linuxarm nucleusarm"), )
	TARGETARCH := arm
    endif
    ifneq ($(findstring "$(TARGETENV)", "bcmmips" "linuxmips" "linuxmips_be"), )
	TARGETARCH := mips
    endif
    ifneq ($(findstring "$(TARGETENV)", "linux" "cygwin32" "win32"), )
	TARGETCPU := $(shell uname -m)
	TARGETARCH := x86_mmx
    endif
    ifeq ($(TARGETENV), macos)
	TARGETCPU := $(shell uname -p)
	TARGETARCH := x86
    endif
    ifndef TARGETARCH
	TARGETARCH := unknown
    endif
endif
export TARGETARCH
