<?xml version="1.0"?>
<xmlMandatorySingleRootNode copyright="Broadcom Corporation, 2012" >




<object name="InternetGatewayDevice." shortObjectName="FakeParentObject" specSource="Broadcom" profile="Unspecified" requirements="P" supportLevel="Present" />
  <description source="BROADCOM">This is a fake object node for the DataModelDesigner to draw the object hierarchy properly.  It will not be inserted into the data model.   The Short Object Name must be FakeParentObject. </description>




<object name="InternetGatewayDevice.Device." shortObjectName="FakeParentObject" specSource="Broadcom" profile="Unspecified" requirements="P" supportLevel="Present" />
  <description source="BROADCOM">This is a fake object node for the DataModelDesigner to draw the object hierarchy properly.  It will not be inserted into the data model.   The Short Object Name must be FakeParentObject. </description>




<object name="InternetGatewayDevice.Device.IP." shortObjectName="Dev2IpObject" specSource="TR181" profile="Device2_IPInterface:1" requirements="P" supportLevel="Present" oid="1400" />
  <description source="TRx">IP object that contains the Interface, ActivePort, and Diagnostics objects.</description>

  <parameter name="IPv4Capable" type="boolean" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">Indicates whether the device is IPv4 capable.</description>

  <parameter name="IPv4Enable" type="boolean" specSource="TR181" profile="Device2_IPInterface:2" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the IPv4 stack, and so the use of IPv4 on the device. This affects only layer 3 and above.&#10;&#10;When false, IP interfaces that had been operationally up and passing IPv4 packets will now no longer be able to do so, and will be operationally down (unless also attached to an enabled IPv6 stack).</description>

  <parameter name="IPv4Status" type="string" specSource="TR181" profile="Device2_IPInterface:2" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">Indicates the status of the IPv4 stack. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="IPv6Capable" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">Indicates whether the device is IPv6 capable.&#10;&#10;Note: If false, it is expected that IPv6-related parameters, enumeration values, etc will not be implemented by the device.</description>

  <parameter name="IPv6Enable" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Enables or disables the IPv6 stack, and so the use of IPv6 on the device. This affects only layer 3 and above.&#10;&#10;When false, IP interfaces that had been operationally up and passing IPv6 packets will now no longer be able to do so, and will be operationally down (unless also attached to an enabled IPv4 stack).</description>

  <parameter name="IPv6Status" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">Indicates the status of the IPv6 stack. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="ULAPrefix" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">[IPv6Prefix] The ULA /48 prefix [Section 3/RFC4193].</description>

  <parameter name="InterfaceNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Interface table.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="ActivePortNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" neverWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the ActivePort table.</description>




<object name="InternetGatewayDevice.Device.IP.Interface.{i}." shortObjectName="Dev2IpInterfaceObject" specSource="TR181" profile="Device2_IPInterface:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">IP interface table (a stackable interface object as described in [Section 4.2/TR-181i2]). This table models the layer 3 IP interface.&#10;&#10;Each IP interface can be attached to the IPv4 and/or IPv6 stack. The interface's IP addresses and prefixes are listed in the IPv4Address, IPv6Address and IPv6Prefix tables.&#10;&#10;Note that support for manipulating Loopback interfaces is OPTIONAL, so the implementation MAY choose not to create (or allow the ACS to create) Interface instances of type Loopback.&#10;&#10;When the ACS administratively disables the interface, i.e. sets Enable to false, the interface's automatically-assigned IP addresses and prefixes MAY be retained. When the ACS administratively enables the interface, i.e. sets Enable to true, these IP addresses and prefixes MUST be refreshed. It's up to the implementation to decide exactly what this means: it SHOULD take all reasonable steps to refresh everything but if it is unable, for example, to refresh a prefix that still has a significant lifetime, it might well choose to retain rather than discard it.&#10;&#10;Any Tunneled IP interface instances instantiated by the CPE MUST NOT have any statistics, writable parameters, IP addresses or IPv6 prefixes. Any read-only parameters, e.g. Status, MUST return the same information as for the corresponding Tunnel interface. The reason for these rules is that Tunneled IP interfaces exist only in order to be the targets of references (within the data model) and do not model any concepts over and above those already modeled by the Tunnel IP interfaces.&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias, or with a given value for Name. On creation of a new table entry, the CPE MUST choose initial values for Alias and Name such that the new entry does not conflict with any existing entries.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the interface (regardless of IPv4Enable and IPv6Enable).&#10;&#10;This parameter is based on ifAdminStatus from [RFC2863].</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="IPv4Enable" type="boolean" specSource="TR181" profile="Device2_IPInterface:2" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">if set to true, attaches this interface to the IPv4 stack. If set to false, detaches this interface from the IPv4 stack.&#10;&#10;Once detached from the IPv4 stack, the interface will now no longer be able to pass IPv4 packets, and will be operationally down (unless also attached to an enabled IPv6 stack).&#10;&#10;For an IPv4 capable device, if IPv4Enable is not present this interface SHOULD be permanently attached to the IPv4 stack.&#10;&#10;Note that IPv4Enable is independent of Enable, and that to administratively enable an interface for IPv4 it is necessary for both Enable and IPv4Enable to be true.&#10;&#10;This parameter is based on ifAdminStatus from [RFC2863].</description>

  <parameter name="IPv6Enable" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">If set to true, attaches this interface to the IPv6 stack. If set to false, detaches this interface from the IPv6 stack.&#10;&#10;Once detached from the IPv6 stack, the interface will now no longer be able to pass IPv6 packets, and will be operationally down (unless also attached to an enabled IPv4 stack).&#10;&#10;For an IPv6 capable device, if IPv6Enable is not present this interface SHOULD be permanently attached to the IPv6 stack.&#10;&#10;Note that IPv6Enable is independent of Enable, and that to administratively enable an interface for IPv6 it is necessary for both Enable and IPv6Enable to be true.</description>

  <parameter name="ULAEnable" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Controls whether or not ULAs [RFC4193] are generated and used on this interface.</description>

  <parameter name="X_BROADCOM_COM_ULARandom" type="boolean" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">This flag indicates whether ULA prefix is randomly generated or not.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Down" validValuesArray="ifOperStatusValues" />
    <description source="TRx">The current operational state of the interface (see [Section 4.2.2/TR-181i2]). Enumeration of:&#10;&#10;    * Up&#10;    * Down&#10;    * Unknown&#10;    * Dormant&#10;    * NotPresent&#10;    * LowerLayerDown&#10;    * Error (OPTIONAL) &#10;&#10;When Enable is false then Status SHOULD normally be Down (or NotPresent or Error if there is a fault condition on the interface).&#10;&#10;When Enable is changed to true then Status SHOULD change to Up if and only if the interface is able to transmit and receive network traffic; it SHOULD change to Dormant if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to Up if still operable when the expected actions have completed); it SHOULD change to LowerLayerDown if and only if the interface is prevented from entering the Up state because one or more of the interfaces beneath it is down; it SHOULD remain in the Error state if there is an error or other fault condition detected on the interface; it SHOULD remain in the NotPresent state if the interface has missing (typically hardware) components; it SHOULD change to Unknown if the state of the interface can not be determined for some reason.&#10;&#10;This parameter is based on ifOperStatus from [RFC2863].</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-ipintf" maxLength="64" autoGenerateAlias="true" notifySskAliasChanged="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" maxLength="64" alwaysWriteToConfigFile="true" />
    <description source="TRx">The textual name of the interface as assigned by the CPE.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="LastChange" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The accumulated time in seconds since the interface entered its current operational state.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="X_BROADCOM_COM_LastChange" type="unsignedInt" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="0" hideParameterFromAcs="true" neverWriteToConfigFile="true" />
    <description source="BROADCOM">A timestamp, in seconds, of the last status change.  Used to calculate the TR181 LastChange value.</description>

  <parameter name="LowerLayers" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="1024" notifySskLowerLayersChanged="true" />
    <description source="TRx">Comma-separated list (maximum length 1024) of strings. Each list item MUST be the path name of an interface object that is stacked immediately below this interface object. If the referenced object is deleted, the corresponding item MUST be removed from the list. See [Section 4.2.1/TR-181i2].&#10;&#10;LowerLayers MUST be an empty string and read-only when Type is Loopback, Tunnel, or Tunneled.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="Router" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the Routing.Router table. If the referenced object is deleted, the parameter value MUST be set to an empty string. The Router instance that is associated with this IP Interface entry.</description>

  <parameter name="Reset" type="boolean" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" neverWriteToConfigFile="true" />
    <description source="TRx">When set to true, the device MUST tear down the existing IP connection represented by this object and establish a new one.&#10;&#10;The device MUST initiate the reset after completion of the current CWMP session. The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.&#10;&#10;Reset on a disabled interface is a no-op (not an error).&#10;&#10;The value of this parameter is not part of the device configuration and is always false when read.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="MaxMTUSize" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="1500" minValue="64" maxValue="65535" />
    <description source="TRx">The maximum transmission unit (MTU); the largest allowed size of an IP packet (including IP headers, but excluding lower layer headers such as Ethernet, PPP, or PPPoE headers) that is allowed to be transmitted by or through this device.</description>

  <parameter name="Type" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Normal" validValuesArray="ipInterfaceTypeValues" />
    <description source="TRx">IP interface type. Enumeration of:&#10;&#10;    * Normal&#10;    * Loopback&#10;    * Tunnel&#10;    * Tunneled &#10;&#10;For Loopback, Tunnel, and Tunneled IP interface objects, the LowerLayers parameter MUST be an empty string.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="Loopback" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">When set to true, the IP interface becomes a loopback interface and the CPE MUST set Type to Loopback. In this case, the CPE MUST also set LowerLayers to an empty string and fail subsequent attempts at setting LowerLayers until the interface is no longer a loopback.&#10;&#10;Support for manipulating loopback interfaces is OPTIONAL.</description>

  <parameter name="IPv4AddressNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the IPv4Address table.</description>

  <parameter name="IPv6AddressNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the IPv6Address table.</description>

  <parameter name="IPv6PrefixNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">If true, enables auto-IP on the interface [RFC3927]. This mechanism is only used with IPv4.&#10;&#10;When auto-IP is enabled on an interface, an IPv4Address object will dynamically be created and configured with auto-IP parameter values. The exact conditions under which an auto-IP address is created (e.g. always when enabled or only in absence of dynamic IP addressing) is implementation specific.</description>

  <parameter name="AutoIPEnable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">If true, enables auto-IP on the interface [RFC3927]. This mechanism is only used with IPv4.&#10;&#10;When auto-IP is enabled on an interface, an IPv4Address object will dynamically be created and configured with auto-IP parameter values. The exact conditions under which an auto-IP address is created (e.g. always when enabled or only in absence of dynamic IP addressing) is implementation specific.</description>

  <parameter name="X_BROADCOM_COM_IPv4ServiceStatus" type="string" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="ServiceDown" validValuesArray="ipv4ServiceStatusValues" />
    <description source="BROADCOM">Broadcom internal state machine needed to manage the starting of various services before and after the IP.Interface gets its IPv4 address.</description>

  <parameter name="X_BROADCOM_COM_IPv6ServiceStatus" type="string" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="ServiceDown" validValuesArray="ipv6ServiceStatusValues" />
    <description source="BROADCOM">Broadcom internal state machine needed to manage the starting of various services before and after the IP.Interface gets its IPv4 address.</description>

  <parameter name="X_BROADCOM_COM_Upstream" type="boolean" specSource="Broadcom" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="false" />
    <description source="BROADCOM">Upstream TRUE means WAN interface.  This param mirrors the upstream param in the lowest layer of the interface stack.</description>

  <parameter name="X_BROADCOM_COM_GroupName" type="string" specSource="Broadcom" profile="Unspecified" requirements="W" supportLevel="ReadWrite" maxLength="64" />
    <description source="BROADCOM">The textual group name of the interface as assigned by the user from WEB UI.</description>

  <parameter name="X_BROADCOM_COM_BridgeService" type="boolean" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates if this IP Interface is a Bridged WAN service, so not really IP.  But it is more convenient for CMS code to have an IP interface even for bridged service.</description>

  <parameter name="X_BROADCOM_COM_BridgeName" type="string" specSource="Broadcom" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" />
    <description source="BROADCOM">The Linux interface name which this bridge service is attached to, e.g. &quot;br0&quot;</description>

  <parameter name="X_BROADCOM_COM_BridgeNeedsIpAddr" type="boolean" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates that this Bridge WAN service requires an IP addr before it is considered UP.</description>

  <parameter name="X_BROADCOM_COM_FirewallEnabled" type="boolean" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates if a stateful firewall is enabled for all traffic from this IP interface to the modem.  If TRUE, all inbound local traffic that is not responding to an outbound packet or listed in the firewall exception table will be blocked.</description>

  <parameter name="X_BROADCOM_COM_IGMPEnabled" type="boolean" specSource="Broadcom" profile="X_BROADCOM_COM_IGMP:1" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates whether IGMP proxy is enabled on this WAN interface (only applies if this is a WAN/Upstream interface) </description>

  <parameter name="X_BROADCOM_COM_IGMP_SOURCEEnabled" type="boolean" specSource="Broadcom" profile="X_BROADCOM_COM_IGMP:1" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates whether this WAN interface is allowed to forward IPv4 multicast packets (only applies if this is a WAN/Upstream interface) </description>

  <parameter name="X_BROADCOM_COM_MLDEnabled" type="boolean" specSource="Broadcom" profile="X_BROADCOM_COM_MLD:1" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates whether MLD proxy is enabled on this WAN interface (only applies if this is a WAN/Upstream interface) </description>

  <parameter name="X_BROADCOM_COM_MLD_SOURCEEnabled" type="boolean" specSource="Broadcom" profile="X_BROADCOM_COM_MLD:1" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Indicates whether this WAN interface is allowed to forward IPv6 multicast packets (only applies if this is a WAN/Upstream interface) </description>

  <parameter name="X_BROADCOM_COM_NoMcastVlanFilter" type="boolean" specSource="Broadcom" profile="X_BROADCOM_COM_GponWAN:1" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Enable or disable VLAN filitering on mulitcast GEM.  This might need to be moved to a VLAN object </description>

  <parameter name="X_BROADCOM_COM_Mflag_Upstream" type="boolean" specSource="Broadcom" profile="Unspecified" supportLevel="ReadOnly" defaultValue="false" />
    <description source="BROADCOM">Mflag received from RouterAdvertisement at upstream interface</description>

  <parameter name="X_BROADCOM_COM_PCPMode" type="unsignedInt" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="0" />
    <description source="BROADCOM">PCP mode: 0(Disable), 1(DSLITE), 2(NAT444).</description>

  <parameter name="X_BROADCOM_COM_PCPServer" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This is the IP address of PCP Server.</description>




<object name="InternetGatewayDevice.Device.IP.Interface.{i}.IPv4Address.{i}." shortObjectName="Dev2Ipv4AddressObject" specSource="TR181" profile="Device2_IPInterface:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">IPv4 address table. Entries are auto-created and auto-deleted as IP addresses are added and deleted via DHCP, auto-IP, or IPCP. Static entries are created and configured by the ACS.&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.&#10;&#10;At most one enabled entry in this table can exist with the same values for IPAddress and SubnetMask.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this IPv4 address.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_IPInterface:2" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this IPv4Address table entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error_Misconfigured&#10;    * Error (OPTIONAL) &#10;&#10;The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid.&#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-ipintfv4addr" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. &#10;&#10;This parameter can only be modified if AddressingType is Static.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" maxLength="15" />
    <description source="TRx">[IPv4Address] IPv4 address.&#10;&#10;This parameter can only be modified if the AddressingType is Static.</description>

  <parameter name="SubnetMask" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="15" />
    <description source="TRx">[IPv4Address] Subnet mask.&#10;&#10;This parameter can only be modified if the AddressingType is Static.</description>

  <parameter name="AddressingType" type="string" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="ipv4AddressOriginValues" />
    <description source="TRx"> 	Addressing method used to assign the IP address. Enumeration of:&#10;&#10;    * DHCP&#10;    * IKEv2 (Assigned by IKEv2 [RFC5996])&#10;    * AutoIP&#10;    * IPCP&#10;    * Static </description>




<object name="InternetGatewayDevice.Device.IP.Interface.{i}.IPv6Address.{i}." shortObjectName="Dev2Ipv6AddressObject" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">This table contains the IP interface's IPv6 unicast addresses. There MUST be an entry for each such address, including anycast addresses.&#10;&#10;There are several ways in which entries can be added to and deleted from this table, including:&#10;&#10;    * Automatically via SLAAC [RFC4862], which covers generation of link-local addresses (for all types of device) and global addresses (for non-router devices).&#10;    * Automatically via DHCPv6 [RFC3315], which covers generation of any type of address (subject to the configured DHCP server policy).&#10;    * Manually via a GUI or some other local management interface.&#10;    * Manually via factory default configuration.&#10;    * By the ACS. &#10;&#10;This table MUST NOT include entries for the Subnet-Router anycast address [Section 2.6.1/RFC4291]. Such entries would be identical to others but with a zero interface identifier, and would add no value.&#10;&#10;A loopback interface will always have address ::1 [Section 2.5.3/RFC4291] and MAY also have link-local address fe80::1.&#10;&#10;This object is based on ipAddressTable from [RFC4293].&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.&#10;&#10;At most one enabled entry in this table can exist with a given value for IPAddress.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this IPv6 entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this IPv6Address table entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error_Misconfigured&#10;    * Error (OPTIONAL) &#10;&#10;The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid.&#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="IPAddressStatus" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Invalid" validValuesArray="ipv6AddrStatusValues" />
    <description source="TRx">The status of IPAddress, indicating whether it can be used for communication. See also PreferredLifetime and ValidLifetime. Enumeration of:&#10;&#10;    * Preferred (Valid address that can appear as the destination or source address of a packet)&#10;    * Deprecated (Valid but deprecated address that is not intended to be used as a source address)&#10;    * Invalid (Invalid address that is not intended to appear as the destination or source address of a packet)&#10;    * Inaccessible (Valid address that is not accessible because the interface to which it is assigned is not operational)&#10;    * Unknown (Address status cannot be determined for some reason)&#10;    * Tentative (The uniqueness of the address on the link is being verified)&#10;    * Duplicate (Invalid address that has been determined to be non-unique on the link)&#10;    * Optimistic (Valid address that is available for use, subject to restrictions, while its uniqueness on a link is being verified) &#10;&#10;This parameter is based on ipAddressStatus and ipAddressStatusTC from [RFC4293].</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-ipintfv6addr" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. &#10;&#10;This parameter can only be modified if Origin is Static.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx"> 	[IPv6Address] IPv6 address.&#10;&#10;This parameter can only be modified if the Origin is Static.&#10;&#10;This parameter is based on ipAddressAddr from [RFC4293].</description>

  <parameter name="Origin" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="ipv6OriginValues" />
    <description source="TRx">Mechanism via which the IP address was assigned. Enumeration of:&#10;&#10;    * AutoConfigured (Automatically generated. For example, a link-local address as specified by SLAAC [Section 5.3/RFC4862], a global address as specified by SLAAC [Section 5.5/RFC4862], or generated via CPE logic (e.g. from delegated prefix as specified by [RFC3633]), or from ULA /48 prefix as specified by [RFC4193])&#10;    * DHCPv6 (Assigned by DHCPv6 [RFC3315])&#10;    * IKEv2 (Assigned by IKEv2 [RFC5996])&#10;    * WellKnown (Specified by a standards organization, e.g. the ::1 loopback address, which is defined in [RFC4291])&#10;    * Static (For example, present in the factory default configuration (but not WellKnown), created by the ACS, or created by some other management entity (e.g. via a GUI)) &#10;&#10;This parameter is based on ipOrigin from [RFC4293].</description>

  <parameter name="Prefix" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">The value MUST be the path name of a row in the IPv6Prefix table. If the referenced object is deleted, the parameter value MUST be set to an empty string. IPv6 address prefix.&#10;&#10;Some addresses, e.g. addresses assigned via the DHCPv6 IA_NA option, are not associated with a prefix, and some WellKnown prefixes might not be modeled. In both of these cases Prefix will be an empty string.&#10;&#10;This parameter can only be modified if the Origin is Static.&#10;&#10;This parameter is based on ipAddressPrefix from [RFC4293].</description>

  <parameter name="PreferredLifetime" type="dateTime" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="9999-12-31T23:59:59Z" />
    <description source="TRx">The time at which this address will cease to be preferred (i.e. will become deprecated), or 0001-01-01T00:00:00Z if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.&#10;&#10;This parameter can only be modified if the Origin is Static.</description>

  <parameter name="ValidLifetime" type="dateTime" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="9999-12-31T23:59:59Z" />
    <description source="TRx">The time at which this address will cease to be valid (i.e. will become invalid), or 0001-01-01T00:00:00Z if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.&#10;&#10;This parameter can only be modified if the Origin is Static.</description>

  <parameter name="X_BROADCOM_COM_Plt" type="int" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="2147483647" />
    <description source="BROADCOM">preferred lifetime interval (ex: 86400 second)&#10;A value of -1 indicates infinity. </description>

  <parameter name="X_BROADCOM_COM_Vlt" type="int" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="2147483647" />
    <description source="BROADCOM">valid lifetime interval (ex: 86400 second)&#10;A value of -1 indicates infinity. </description>

  <parameter name="Anycast" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Indicates whether this is an anycast address [Section 2.6/RFC4291]. Anycast addresses are syntactically identical to unicast addresses and so need to be configured explicitly.&#10;&#10;This parameter can only be modified if the Origin is Static.&#10;&#10;This parameter is based on ipAddressType from [RFC4293].</description>




<object name="InternetGatewayDevice.Device.IP.Interface.{i}.IPv6Prefix.{i}." shortObjectName="Dev2Ipv6PrefixObject" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">This table contains the interface's IPv6 prefixes. There MUST be an entry for each such prefix, not only for prefixes learned from router advertisements.&#10;&#10;There are several ways in which entries can be added to and deleted from this table, including:&#10;&#10;    * Automatically via [RFC4861] Router Advertisements. See also RouterAdvertisement.&#10;    * Automatically via DHCPv6 [RFC3315] prefix delegation [RFC3633]. See also DHCPv6.Client.&#10;    * Automatically via internal CPE logic, e.g. creation of child prefixes derived from a parent prefix.&#10;    * Manually via a GUI or some other local management interface.&#10;    * Manually via factory default configuration.&#10;    * By the ACS. &#10;&#10;The CPE MAY choose not to create IPv6Prefix entries for WellKnown prefixes or for the ULA /48 prefix [RFC4193]. If an IPv6Prefix entry exists for the ULA /48 prefix, it MUST be on a downstream interface (i.e. an interface for which the physical layer interface object has Upstream = false).&#10;&#10;This object is based on ipAddressPrefixTable from [RFC4293].&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.&#10;&#10;At most one enabled entry in this table can exist with a given value for Prefix.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this IPv6Prefix entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">The status of this IPv6Prefix table entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="PrefixStatus" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Invalid" validValuesArray="ipv6PrefixStatusValues" />
    <description source="TRx">The status of Prefix, indicating whether it can be used for communication. See also PreferredLifetime and ValidLifetime. Enumeration of:&#10;&#10;    * Preferred (Valid prefix)&#10;    * Deprecated (Valid but deprecated prefix)&#10;    * Invalid (Invalid prefix)&#10;    * Inaccessible (Valid prefix that is not accessible because the interface to which it is assigned is not operational)&#10;    * Unknown (Prefix status cannot be determined for some reason) &#10;&#10;This parameter is based on ipAddressStatus and ipAddressStatusTC from [RFC4293].</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="cpe-ipintfv6prefix" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. &#10;&#10;This parameter can only be modified if Origin is Static.</description>

  <parameter name="Prefix" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">[IPv6Prefix] IPv6 address prefix.&#10;&#10;This parameter can only be modified if the Origin is Static.&#10;&#10;This parameter is based on ipAddressPrefixPrefix from [RFC4293].</description>

  <parameter name="Origin" type="string" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="ipv6PrefixOriginValues" />
    <description source="TRx">Mechanism via which the prefix was assigned or most recently updated. Enumeration of:&#10;&#10;    * AutoConfigured (Generated via internal CPE logic (e.g. the ULA /48 prefix) or derived from an internal prefix that is not modeled in any IPv6Prefix table)&#10;    * PrefixDelegation (Delegated via DHCPv6 [RFC3633] or some other protocol, e.g. IPv6rd [RFC5969]. Also see StaticType)&#10;    * RouterAdvertisement (Discovered via router advertisement [RFC4861] Prefix Information Option)&#10;    * WellKnown (Specified by a standards organization, e.g. fe80::/10 for link-local addresses, or ::1/128 for the loopback address, both of which are defined in [RFC4291])&#10;    * Static (Created by the ACS, by some other management entity (e.g. via a GUI), or present in the factory default configuration (but not WellKnown). Unrelated to any shorter length prefix that might exist on the CPE. Also see StaticType. Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD))&#10;    * Child (Derived from an associated AutoConfigured or PrefixDelegation parent prefix. Also see StaticType, ParentPrefix and ChildPrefixBits. Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD)) &#10;&#10;Note that:&#10;&#10;    * PrefixDelegation and RouterAdvertisement prefixes can exist only on upstream interfaces (i.e. interfaces for which the physical layer interface object has Upstream = true),&#10;    * AutoConfigured and WellKnown prefixes can exist on any interface, and&#10;    * Static and Child prefixes can exist only on downstream interfaces (i.e. interfaces for which the physical layer interface object has Upstream = false). &#10;&#10;Also note that a Child prefix's ParentPrefix will always be an AutoConfigured, PrefixDelegation, or RouterAdvertisement prefix.&#10;&#10;This parameter is based on ipAddressOrigin from [RFC4293].</description>

  <parameter name="StaticType" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="Static" validValuesArray="ipv6PrefixStaticValues" />
    <description source="TRx">Static prefix sub-type. For a Static prefix, this can be set to PrefixDelegation or Child, thereby creating an unconfigured prefix of the specified type that will be populated in preference to creating a new instance. This allows the ACS to pre-create &quot;prefix slots&quot; with known path names that can be referenced from elsewhere in the data model before they have been populated. Enumeration of:&#10;&#10;    * Static (Prefix is a &quot;normal&quot; Static prefix)&#10;    * Inapplicable (Prefix is not Static, so this parameter does not apply)&#10;    * PrefixDelegation (Prefix will be populated when a PrefixDelegation prefix needs to be created)&#10;    * Child (Prefix will be populated when a Child prefix needs to be created. In this case, the ACS needs also to set ParentPrefix and might want to set ChildPrefixBits (if parent prefix is not set, or goes away, then the child prefix will become operationally disabled)) &#10;&#10;This mechanism works as follows:&#10;&#10;    * When this parameter is set to PrefixDelegation or Child, the instance becomes a &quot;prefix slot&quot; of the specified type.&#10;    * Such an instance can be administratively enabled (Enable = true) but will remain operationally disabled (Status = Disabled) until it has been populated.&#10;    * When a new prefix of of type T is needed, the CPE will look for a matching unpopulated instance, i.e. an instance with (Origin,StaticType,Prefix) = (Static,T,&quot;&quot;). If the CPE finds at least one such instance it will choose one and populate it. If already administratively enabled it will immediately become operationally enabled. If the CPE finds no such instances, it will create and populate a new instance with (Origin,StaticType) = (T,T). If the CPE finds more than one such instance, the algorithm via which it chooses which instance to populate is implementation-specific.&#10;    * When a prefix that was populated via this mechanism becomes invalid, the CPE will reset Prefix to an empty string. This does not affect the value of the Enable parameter. &#10;&#10;The prefix StaticType can only be modified if Origin is Static.</description>

  <parameter name="ParentPrefix" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface.{i}.IPv6Prefix table. If the referenced object is deleted, the parameter value MUST be set to an empty string. Indicates the parent prefix from which this prefix was derived. The parent prefix is relevant only for Child prefixes and for Static Child prefixes (both of which will always be on downstream interfaces), i.e. for Origin=Child and for (Origin,StaticType) = (Static,Child) prefixes.&#10;&#10;This parameter can only be modified if Origin is Static (which makes sense only for a prefix whose StaticType is already or will be changed to Child).</description>

  <parameter name="ChildPrefixBits" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">[IPv6Prefix] A prefix that specifies the length of Static Child prefixes and how they are derived from their ParentPrefix. It will be used if and only if it is not an empty string and is longer than the parent prefix (if it is not used, derivation of such prefixes is implementation-specific). Any bits to the right of the parent prefix are set to the bits in this prefix.&#10;&#10;For example, for a parent prefix of fedc::/56, if this parameter had the value 123:4567:89ab:cdef::/64, the child /64 would be fedc:0:0:ef::/64. For a parent prefix of fedc::/60, the child /64 would be fedc:0:0:f::/64.&#10;&#10;This parameter can only be modified if Origin is Static.</description>

  <parameter name="OnLink" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx"> 	On-link flag [Section 4.6.2/RFC4861] as received (in the RA) for RouterAdvertisement. Indicates whether this prefix can be used for on-link determination.&#10;&#10;This parameter can only be modified if Origin is Static.&#10;&#10;This parameter is based on ipAddressPrefixOnLinkFlag from [RFC4293].</description>

  <parameter name="Autonomous" type="boolean" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx"> 	Autonomous address configuration flag [Section 4.6.2/RFC4861] as received (in the RA) for RouterAdvertisement. Indicates whether this prefix can be used for generating global addresses as specified by SLAAC [RFC4862].&#10;&#10;This parameter can only be modified if Origin is Static.&#10;&#10;This parameter is based on ipAddressPrefixAutonomousFlag from [RFC4293].</description>

  <parameter name="PreferredLifetime" type="dateTime" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="9999-12-31T23:59:59Z" />
    <description source="TRx">This parameter is based on ipAddressPrefixAdvPreferredLifetime from [RFC4293]. The time at which this prefix will cease to be preferred (i.e. will become deprecated), or 0001-01-01T00:00:00Z if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.&#10;&#10;This parameter can only be modified if Origin is Static.</description>

  <parameter name="ValidLifetime" type="dateTime" specSource="TR181" profile="Device2_IPv6Interface:1" requirements="W" supportLevel="ReadWrite" defaultValue="9999-12-31T23:59:59Z" />
    <description source="TRx">This parameter is based on ipAddressPrefixAdvValidLifetime from [RFC4293]. The time at which this prefix will cease to be valid (i.e. will become invalid), or 0001-01-01T00:00:00Z if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.&#10;&#10;This parameter can only be modified if Origin is Static.</description>

  <parameter name="X_BROADCOM_COM_Plt" type="int" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="2147483647" />
    <description source="BROADCOM">preferred lifetime interval (ex: 86400 second)&#10;A value of -1 indicates infinity. </description>

  <parameter name="X_BROADCOM_COM_Vlt" type="int" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="2147483647" />
    <description source="BROADCOM">valid lifetime interval (ex: 86400 second)&#10;A value of -1 indicates infinity. </description>

  <parameter name="X_BROADCOM_COM_UniqueLocalFlag" type="boolean" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="false" />

  <parameter name="X_BROADCOM_COM_Prefix_Old" type="string" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="" />

  <parameter name="X_BROADCOM_COM_Vlt_Old" type="int" specSource="Broadcom" profile="Device2_IPv6Interface:1" supportLevel="ReadWrite" defaultValue="0" minValue="-1" maxValue="2147483647" />




<object name="InternetGatewayDevice.Device.IP.Interface.{i}.Stats." shortObjectName="Dev2IpStatsObject" specSource="TR181" profile="Device2_IPInterface:1" requirements="P" supportLevel="Present" />
  <description source="TRx">Throughput statistics for this interface.&#10;&#10;The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's Status parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's Enable parameter transitions from false to true). Administrative and operational interface status is discussed in [Section 4.2.2/TR-181i2].</description>

  <parameter name="BytesSent" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of bytes transmitted out of the interface, including framing characters. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="BytesReceived" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of bytes received on the interface, including framing characters. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="PacketsSent" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of packets transmitted out of the interface. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="PacketsReceived" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of packets received on the interface. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="ErrorsSent" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of outbound packets that could not be transmitted because of errors. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="ErrorsReceived" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="UnicastPacketsSent" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="UnicastPacketsReceived" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="DiscardPacketsSent" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="DiscardPacketsReceived" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="X_BROADCOM_COM_MulticastBytesSent" type="unsignedLong" specSource="Broadcom" profile="Unspecified" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of bytes that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.</description>

  <parameter name="X_BROADCOM_COM_MulticastBytesReceived" type="unsignedLong" specSource="Broadcom" profile="Unspecified" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of received bytes, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.</description>

  <parameter name="MulticastPacketsSent" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="MulticastPacketsReceived" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>

  <parameter name="BroadcastPacketsSent" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent. Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment. </description>

  <parameter name="BroadcastPacketsReceived" type="unsignedLong" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer. Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment. </description>

  <parameter name="UnknownProtoPacketsReceived" type="unsignedInt" specSource="TR181" profile="Device2_IPInterface:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_IPInterface:1, Device2_IPv6Interface:1 </description>




<object name="InternetGatewayDevice.Device.IP.ActivePort.{i}." shortObjectName="Dev2ActivePortObject" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" pruneWriteToConfigFile="true" />
  <description source="TRx">This table lists the ports on which TCP connections are listening or established. </description>
  <description source="BROADCOM">This table contains dynamic data so it should never be written to config file (prune the whole table). </description>

  <parameter name="LocalIPAddress" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="45" />
    <description source="TRx">Connection local IP address. </description>

  <parameter name="LocalPort" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" minValue="0" maxValue="65535" />
    <description source="TRx">Connection local port. </description>

  <parameter name="RemoteIPAddress" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" maxLength="45" />
    <description source="TRx">The remote IP address of the source of inbound packets.  This will be {{null}} for listening connections (only connections in {{enum|ESTABLISHED|Status}} state have remote addresses). </description>

  <parameter name="RemotePort" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" minValue="0" maxValue="65535" />
    <description source="TRx">The remote port of the source of inbound packets.  This will be {{null}} for listening connections (only connections in {{enum|ESTABLISHED|Status}} state have remote addresses). </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" validValuesArray="tcpConnStatusValues" />
    <description source="TRx">Current operational status of the connection. Enumeration of: * Listen * Established </description>




<object name="InternetGatewayDevice.Device.Routing." shortObjectName="Dev2RoutingObject" specSource="TR181" profile="Device2_Routing:1" requirements="P" supportLevel="Present" oid="1460" />
  <description source="TRx">Routing object that contains the Router table and RIP protocol object.</description>

  <parameter name="RouterNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Router table.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>




<object name="InternetGatewayDevice.Device.Routing.Router.{i}." shortObjectName="Dev2RouterObject" specSource="TR181" profile="Device2_Routing:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">This object allows the handling of the routing and forwarding configuration of the device.&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this Router entry.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">The status of this Router entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-router" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. </description>

  <parameter name="IPv4ForwardingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the IPv4Forwarding table.</description>

  <parameter name="IPv6ForwardingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the IPv6Forwarding table.</description>

  <parameter name="X_BROADCOM_COM_DefaultConnectionServices" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This string variable can contain multiple layer 3 interface name (linux based short interface names, such as ppp0, atm0_1) separated by comma.&#10;The first entry  in the list has the highest priority, meaning that if the list is&#10;&quot;ppp0, atm0&quot;, and both ppp0 and atm0 are connected, ppp0 will be used as&#10;the default IPv4 gateway.</description>

  <parameter name="X_BROADCOM_COM_ActiveDefaultGateway" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadOnly" defaultValue="" />
    <description source="BROADCOM">This string variable holds the layer 3 WAN interface name currently served as the system default IPv4 gateway.</description>

  <parameter name="X_BROADCOM_COM_DefaultIpv6ConnectionServices" type="string" specSource="Broadcom" profile="X_BROADCOM_COM_DEV2_IPv6:1" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This string variable can contain multiple layer 3 interface name (linux based short interface names, such as ppp0, atm0_1) separated by comma.&#10;The first entry  in the list has the highest priority, meaning that if the list is&#10;&quot;ppp0, atm0&quot;, and both ppp0 and atm0 are connected, ppp0 will be used as&#10;the default IPv6 gateway.</description>

  <parameter name="X_BROADCOM_COM_ActiveIpv6DefaultGateway" type="string" specSource="Broadcom" profile="X_BROADCOM_COM_DEV2_IPv6:1" supportLevel="ReadOnly" defaultValue="" />
    <description source="BROADCOM">This string variable holds the layer 3 WAN interface name currently served as the system default IPv6 gateway.</description>




<object name="InternetGatewayDevice.Device.Routing.Router.{i}.IPv4Forwarding.{i}." shortObjectName="Dev2Ipv4ForwardingObject" specSource="TR181" profile="Device2_Routing:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">Layer 3 IPv4 forwarding table.&#10;&#10;In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIP (i.e. RIP version 2), OSPF, DHCPv4, and IPCP. The CPE MAY reject attempts to delete or modify a dynamic route entry.&#10;&#10;For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:&#10;&#10;    * Only enabled table entries with a matching ForwardingPolicy are considered, i.e. those that either do not specify a ForwardingPolicy, or else specify a ForwardingPolicy that matches that of the incoming packet.&#10;    * Next, table entries that also have a matching destination prefix are considered, and the matching entry with the longest prefix length is applied to the packet (i.e. the entry with the most specific network). An unspecified destination address is a wild-card and always matches, but with a prefix length of zero. &#10;&#10;For enabled table entries, if Interface is not a valid reference to an IPv4-capable interface (that is attached to the IPv4 stack), then the table entry is inoperable and the CPE MUST set Status to Error_Misconfigured.&#10;&#10;Note: The IPv4Forwarding table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to an empty string. However, doing so under these circumstances might cause the updated IPv4Forwarding row to then violate the table's unique key constraint; if this occurs, the CPE MUST disable the offending IPv4Forwarding row.&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.&#10;&#10;&#10;At most one enabled entry in this table can exist with all the same values for DestIPPrefix, ForwardingPolicy, NextHop, Interface and ForwardingMetric.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this Forwarding entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">Indicates the status of the forwarding entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error_Misconfigured&#10;    * Error (OPTIONAL) &#10;&#10;The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid.&#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-routerv4forwarding" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. </description>

  <parameter name="StaticRoute" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="true" />
    <description source="TRx">If true, this route is a Static route.</description>

  <parameter name="DestIPAddress" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="15" />
    <description source="TRx">Destination IPv4 address. An empty string indicates no destination address is specified.&#10;&#10;A Forwarding table entry for which DestIPAddress and DestSubnetMask are both an empty string is a default route.&#10;</description>

  <parameter name="DestSubnetMask" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="15" />
    <description source="TRx">Destination subnet mask. An empty string indicates no destination subnet mask is specified.&#10;&#10;If a destination subnet mask is specified, the DestSubnetMask is ANDed with the destination address before comparing with the DestIPAddress. Otherwise, the full destination address is used as is.&#10;&#10;A Forwarding table entry for which DestIPAddress and DestSubnetMask are both an empty string is a default route.&#10;</description>

  <parameter name="ForwardingPolicy" type="int" specSource="TR181" profile="Device2_QoS:1" requirements="W" supportLevel="NotSupported" defaultValue="-1" minValue="-1" />
    <description source="TRx">Identifier of a set of classes or flows that have the corresponding ForwardingPolicy value as defined in the QoS object.&#10;&#10;A value of -1 indicates no ForwardingPolicy is specified.&#10;&#10;If specified, this forwarding entry is to apply only to traffic associated with the specified classes and flows.</description>

  <parameter name="GatewayIPAddress" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="15" />
    <description source="TRx">IPv4 address of the gateway.&#10;&#10;Only one of GatewayIPAddress and Interface SHOULD be configured for a route.&#10;&#10;If both are configured, GatewayIPAddress and Interface MUST be consistent with each other.&#10;</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. Specifies the egress layer 3 interface associated with this entry. Example: Device.IP.Interface.1.&#10;&#10;Only one of NextHop and Interface SHOULD be configured for a route. An empty string indicates no Interface is specified.&#10;&#10;If both are configured, NextHop and Interface MUST be consistent with each other.&#10;&#10;For a route that was configured by setting NextHop but not Interface, read access to Interface MUST return the full hierarchical parameter name for the route's egress interface.</description>

  <parameter name="Origin" type="string" specSource="TR181" profile="Device2_Routing:2" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="ipv4ForwardOriginValues" />
    <description source="TRx"> Protocol via which the IPv4 forwarding rule was learned. Enumeration of:&#10;&#10;DHCPv4 &#10;OSPF &#10;IPCP &#10;RIP &#10;Static (For example, present in the factory default configuration, created by the ACS, or created by some other management entity (e.g. via a GUI)) &#10;</description>

  <parameter name="ForwardingMetric" type="int" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="-1" minValue="-1" />
    <description source="TRx">Forwarding metric. A value of -1 indicates this metric is not used.</description>

  <parameter name="X_BROADCOM_COM_PolicyRoutingName" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">Policy routing name is used to create the table name for &quot;ip rule&quot; command</description>

  <parameter name="X_BROADCOM_COM_SourceIfName" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This object indicates the source interface for policy routing feature.</description>

  <parameter name="X_BROADCOM_COM_SourceIPAddress" type="string" specSource="Broadcom" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">Source address for policy routing feature. An empty string or a value of &#10;&quot;0.0.0.0&quot; indicates no source address is specified. </description>




<object name="InternetGatewayDevice.Device.Routing.Router.{i}.IPv6Forwarding.{i}." shortObjectName="Dev2Ipv6ForwardingObject" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">Layer 3 IPv6 forwarding table.&#10;&#10;In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIPng, OSPF, DHCPv6, and RA. The CPE MAY reject attempts to delete or modify a dynamic route entry.&#10;&#10;For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:&#10;&#10;    * Only enabled table entries with a matching ForwardingPolicy are considered, i.e. those that either do not specify a ForwardingPolicy, or else specify a ForwardingPolicy that matches that of the incoming packet.&#10;    * Next, table entries that also have a matching destination prefix are considered, and the matching entry with the longest prefix length is applied to the packet (i.e. the entry with the most specific network). An unspecified destination address is a wild-card and always matches, but with a prefix length of zero. &#10;&#10;For enabled table entries, if Interface is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set Status to Error_Misconfigured.&#10;&#10;This object is based on inetCidrRouteTable from [RFC4292].&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.&#10;&#10;At most one enabled entry in this table can exist with all the same values for DestIPPrefix, ForwardingPolicy, NextHop, Interface and ForwardingMetric.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this IPv6Forwarding entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">Indicates the status of the forwarding entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error_Misconfigured&#10;    * Error (OPTIONAL) &#10;&#10;The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid.&#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-routerv6forwarding" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. </description>

  <parameter name="DestIPPrefix" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">[IPv6Prefix] Destination IPv6 prefix. An empty string indicates that it matches all destination prefixes (i.e. equivalent to &quot;::/0&quot;). All bits to the right of the prefix MUST be zero, e.g. 2001:edff:fe6a:f76::/64.&#10;&#10;Routes with a 128-bit prefix length (/128) are host routes for a specific IPv6 destination, e.g. 2001:db8:28:2:713e:a426:d167:37ab/128.</description>

  <parameter name="ForwardingPolicy" type="int" specSource="TR181" profile="Device2_QoS:2" requirements="W" supportLevel="NotSupported" defaultValue="-1" minValue="-1" maxValue="2147483647" />
    <description source="TRx">Identifier of a set of classes or flows that have the corresponding ForwardingPolicy value as defined in the QoS object.&#10;&#10;A value of -1 indicates no ForwardingPolicy is specified.&#10;&#10;If specified, this forwarding entry is to apply only to traffic associated with the specified classes and flows.</description>

  <parameter name="NextHop" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">[IPv6Address] IPv6 address of the next hop.&#10;&#10;Only one of NextHop and Interface SHOULD be configured for a route. An empty string indicates no NextHop is specified.&#10;&#10;If both are configured, NextHop and Interface MUST be consistent with each other.</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. Specifies the egress layer 3 interface associated with this entry. Example: Device.IP.Interface.1.&#10;&#10;Only one of NextHop and Interface SHOULD be configured for a route. An empty string indicates no Interface is specified.&#10;&#10;If both are configured, NextHop and Interface MUST be consistent with each other.&#10;&#10;For a route that was configured by setting NextHop but not Interface, read access to Interface MUST return the full hierarchical parameter name for the route's egress interface.</description>

  <parameter name="Origin" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="ipv6ForwardOriginValues" />
    <description source="TRx"> 	Protocol via which the IPv6 forwarding rule was learned. Enumeration of:&#10;&#10;    * DHCPv6&#10;    * OSPF&#10;    * RA (Router Advertisement Route Information Option [RFC4191])&#10;    * RIPng (RIPng for IPv6 [RFC2080])&#10;    * Static (For example, present in the factory default configuration, created by the ACS, or created by some other management entity (e.g. via a GUI)) </description>

  <parameter name="ForwardingMetric" type="int" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="-1" minValue="-1" maxValue="2147483647" />
    <description source="TRx">Forwarding metric. A value of -1 indicates this metric is not used.</description>

  <parameter name="ExpirationTime" type="dateTime" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" defaultValue="9999-12-31T23:59:59Z" />
    <description source="TRx"> 	The time at which the route will expire, or 0001-01-01T00:00:00Z if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.&#10;&#10;ExpirationTime is provided by an underlying dynamic routing protocol, e.g. by an [RFC4191] route information option.</description>




<object name="InternetGatewayDevice.Device.Routing.RIP." shortObjectName="Dev2RipObject" specSource="TR181" profile="Device2_Routing:1" requirements="P" supportLevel="Present" />
  <description source="TRx">Routing Information Protocol (RIP) object. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Enables or disables RIP on the device. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="SupportedModes" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Both" validValuesArray="ripSupportedModesValues" />
    <description source="TRx">The supported RIP protocol modes. Enumeration of:&#10;  * Send&#10;  * Receive&#10;  * Both&#10; </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="InterfaceSettingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the InterfaceSetting table. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>




<object name="InternetGatewayDevice.Device.Routing.RIP.InterfaceSetting.{i}." shortObjectName="Dev2RipIntfSettingObject" specSource="TR181" profile="Device2_Routing:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">IP Interface RIP configuration table. For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.Note: This object only applies to RIP2; i.e. version 2 of the RIP protocol is used to accept or send over the specified {{param|Interface}}. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this entry. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this entry.  {{enum}} The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-routingripintf" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value.</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. This is the IP interface associated with this InterfaceSetting entry. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="X_BROADCOM_COM_Version" type="unsignedInt" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="2" minValue="1" maxValue="3" />
    <description source="TRx">Defines the RIP protocol version used to accept or send over {{param|Interface}}. 1:version 1, 2: version 2, 3:both </description>
    <description source="BROADCOM">Is this param deprecated?  Do not see this param in the HTML version of TR181 2.6&#10;REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1</description>

  <parameter name="AcceptRA" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">When set to {{true}}, RIP route advertisements received over {{param|Interface}} are accepted. When set to {{false}}, RIP route advertisements received over {{param|Interface}} are rejected. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>

  <parameter name="SendRA" type="boolean" specSource="TR181" profile="Device2_Routing:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">When set to {{true}}, RIP route advertisements are to be sent over {{param|Interface}}. When set to {{false}}, no RIP route advertisements will be sent over {{param|Interface}}. </description>
    <description source="BROADCOM">REPORT_PROFILE: Device2_Routing:1, Device2_IPv6Routing:1 </description>




<object name="InternetGatewayDevice.Device.Routing.RouteInformation." shortObjectName="Dev2RouteInfoObject" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="P" supportLevel="Present" />
  <description source="TRx">Received Router Advertisement (RA) route information [RFC4191].</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="W" supportLevel="ReadWrite" defaultValue="true" />
    <description source="TRx">Enables or disables receiving route information from the RA.</description>

  <parameter name="InterfaceSettingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" neverWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the InterfaceSetting table.</description>




<object name="InternetGatewayDevice.Device.Routing.RouteInformation.InterfaceSetting.{i}." shortObjectName="Dev2RouteInfoIntfSettingObject" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="MultipleInstances" pruneWriteToConfigFile="true" />
  <description source="TRx">P Interface RA route information table. Contains received RA route information [RFC4191]. As such, the data in this table cannot be modified.&#10;&#10;At most one entry in this table can exist with a given value for Interface.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="NoForwardingEntry" validValuesArray="routeInfoIntfStatusValues" />
    <description source="TRx"> 	The status of this entry. Enumeration of:&#10;&#10;    * ForwardingEntryCreated&#10;    * NoForwardingEntry&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. This is the IP interface associated with this InterfaceSetting entry.</description>

  <parameter name="SourceRouter" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">[IPv6Address] IPv6 Address of the router that sent the RA that included this route info.</description>

  <parameter name="PreferredRouteFlag" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" defaultValue="Low" validValuesArray="raPriorityValues" />
    <description source="TRx">Flag included in a specific Route Information Option within an RA message (Prf flag), as defined in [Section 2.3/RFC4191]. Enumeration of:&#10;&#10;    * High&#10;    * Medium&#10;    * Low &#10;&#10;Note that this is not the Prf flag included in the base RA message. Also see [Section 2.1/RFC4191] which discusses how this flag is encoded on the wire.</description>

  <parameter name="Prefix" type="string" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">[IPv6Prefix] IPv6 address prefix, as received in an instance of the Route Information Option of a RA message.</description>

  <parameter name="RouteLifetime" type="dateTime" specSource="TR181" profile="Device2_IPv6Routing:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx"> 	The time at which Prefix will cease to be usable for use as a forwarding entry, or 0001-01-01T00:00:00Z if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.&#10;&#10;RouteLifetime is received in an instance of the Route Information Option of a RA message.</description>




<object name="InternetGatewayDevice.Device.LANConfigSecurity." shortObjectName="Dev2LanConfigSecurityObject" specSource="TR181" profile="Device2_Baseline:1" requirements="P" supportLevel="NotSupported" oid="1510" />
  <description source="TRx">This object contains generic device configuration &#10;information. </description>

  <parameter name="ConfigPassword" type="string" specSource="TR181" profile="Device2_Baseline:1" requirements="W" supportLevel="ReadWrite" maxLength="64" isTr69Password="true" />
    <description source="TRx">A password to allow LAN access to protected &#10;auto-configuration services. &#10;When read, this parameter returns an empty &#10;string, regardless of the actual value. </description>




<object name="InternetGatewayDevice.Device.Hosts." shortObjectName="Dev2HostsObject" specSource="TR181" profile="Device2_Hosts:1" requirements="P" supportLevel="Present" oid="1520" />
  <description source="TRx">This object provides information about each of the hosts on the LAN, including those whose IP address was allocated by the CPE using DHCP as well as hosts with statically allocated IP addresses. It can also include non-IP hosts.</description>

  <parameter name="HostNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" neverWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Host table. </description>




<object name="InternetGatewayDevice.Device.Hosts.Host.{i}." shortObjectName="Dev2HostObject" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="MultipleInstances" pruneWriteToConfigFile="true" />
  <description source="TRx">Host table. At most one entry in this table can exist with a given value for Alias, or with a give value for PhysAddress.</description>
  <description source="BROADCOM"> This table contains dynamically generated information, so should never be written to config file (pruneWriteToConfigFile).</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="cpe-host" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. {{param}} provides a mechanism for an ACS to label this instance for future reference. An initial unique value MUST be assigned when the CPE creates an instance of this object. This parameter is DEPRECATED because Host is a transient object. </description>

  <parameter name="PhysAddress" type="string" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" maxLength="64" />
    <description source="TRx">Unique physical identifier of the host. For many layer 2 technologies this is typically a MAC address.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" maxLength="45" />
    <description source="TRx">[IP Address] Current IP Address of the host. {{empty}} if no address is available. If more than one IP address for this host is known, the CPE will choose a ''primary'' address. All known IP addresses can be listed in the {{object|IPv4Address}} and {{object|IPv6Address}} tables.</description>

  <parameter name="AddressSource" type="string" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="NotSupported" />
    <description source="TRx">Indicates whether the IP address of the host was allocated by the CPE using DHCP, was assigned to the host statically, or was assigned using automatic IP address allocation.  {{enum}} This parameter is DEPRECATED because only {{enum|None}} and {{enum|DHCP}} made sense (the CPE doesn't know whether the address is {{enum|Static}} or {{enum|AutoIP}}).  The {{enum|DHCP}} case is now handled via the {{param|DHCPClient}} reference. </description>

  <parameter name="DHCPClient" type="string" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">Comma-separated list (up to 2 items) of strings. Each list item MUST be the path name of a row in the DHCPv4.Server.Pool.{i}.Client or DHCPv6.Server.Pool.{i}.Client tables. If the referenced object is deleted, the corresponding item MUST be removed from the list. Each list item is the DHCPv4 or DHCPv6 server's client entry that corresponds to the host.  </description>

  <parameter name="LeaseTimeRemaining" type="int" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" minValue="-1" maxValue="2147483647" />
    <description source="TRx">DHCP lease time remaining in seconds. A value of -1 indicates an infinite lease. The value MUST be 0 (zero) if the {{param|AddressSource}} is not {{enum|DHCP|AddressSource}}. This parameter is DEPRECATED because DHCP lease/lifetime information can be accessed via the {{param|DHCPClient}} reference.</description>

  <parameter name="AssociatedDevice" type="string" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">{{noreference}}The value MUST the path name of the ''AssociatedDevice'' (or equivalent) table row that models the host, or {{null}} if there is no such table. For example: ''Device.WiFi.AccessPoint.1.AssociatedDevice.2''</description>

  <parameter name="Layer1Interface" type="string" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">{{noreference}}The value MUST be the path name of a row in a layer 1 interface table. For example: ''Device.Ethernet.Interface.2''</description>

  <parameter name="Layer3Interface" type="string" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">{{reference}} If the entry represents a non-IP device, then {{param}} will be {{empty}}.</description>

  <parameter name="VendorClassID" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" maxLength="255" />
    <description source="TRx">Vendor Class Identifier DHCP option (Option 60) of the host. This is a normal string, e.g. &quot;abc&quot; is represented as &quot;abc&quot; and not say &quot;616263&quot; hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used. Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference. </description>

  <parameter name="ClientID" type="hexBinary" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" maxLength="65535" />
    <description source="TRx">A hexbinary string, Client Identifier DHCP option (Option 61) for the specific IP connection of the client.  The option value is binary, so an exact match is REQUIRED. It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535. This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference. </description>

  <parameter name="UserClassID" type="hexBinary" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" maxLength="65535" />
    <description source="TRx">A hexbinary string, User Class Identifier DHCP option (Option 77) of the host. It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference. </description>

  <parameter name="HostName" type="string" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" maxLength="64" />
    <description source="TRx">The device's host name or {{empty}} if unknown.</description>

  <parameter name="Active" type="boolean" specSource="TR181" profile="Device2_Hosts:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">Whether or not the host is currently present on the LAN. The method of presence detection is a local matter to the CPE. The ability to list inactive hosts is OPTIONAL. If the CPE includes inactive hosts in this table, {{param}} MUST be set to {{false}} for each inactive host. The length of time an inactive host remains listed in this table is a local matter to the CPE.</description>

  <parameter name="IPv4AddressNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The number of entries in the IPv4Address table. </description>

  <parameter name="IPv6AddressNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The number of entries in the IPv6Address table. </description>




<object name="InternetGatewayDevice.Device.Hosts.Host.{i}.IPv4Address.{i}." shortObjectName="Dev2HostIpv4AddressObject" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="MultipleInstances" />
  <description source="TRx">The host's known IPv4 addresses. This includes any addresses assigned via DHCP, which can also be accessed via the DHCPClient reference.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="ReadOnly" maxLength="15" />
    <description source="TRx">IPv4 address.</description>




<object name="InternetGatewayDevice.Device.Hosts.Host.{i}.IPv6Address.{i}." shortObjectName="Dev2HostIpv6AddressObject" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="MultipleInstances" />
  <description source="TRx">The host's known IPv6 addresses. This includes any addresses assigned via DHCP, which can also be accessed via the DHCPClient reference.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_Hosts:2" requirements="R" supportLevel="ReadOnly" maxLength="45" />
    <description source="TRx">IPv6 address.</description>




<object name="InternetGatewayDevice.Device.DNS." shortObjectName="Dev2DnsObject" specSource="TR181" profile="Device2_Baseline:1" requirements="P" supportLevel="Present" oid="1530" />
  <description source="TRx">Properties for Domain Name Service (DNS).</description>

  <parameter name="SupportedRecordTypes" type="string" specSource="TR181" profile="Device2_Baseline:2" requirements="R" supportLevel="NotSupported" />
    <description source="TRx">Comma-separated list of strings. The DNS record types that are supported by the device. Each list item is an enumeration of:&#10;&#10;    * A ([RFC1035])&#10;    * AAAA ([RFC3596])&#10;    * SRV ([RFC2782])&#10;    * PTR ([RFC1035]</description>




<object name="InternetGatewayDevice.Device.DNS.Client." shortObjectName="Dev2DnsClientObject" specSource="TR181" profile="Device2_Baseline:1" requirements="P" supportLevel="Present" />
  <description source="TRx">Client properties for Domain Name Service (DNS). The DNS client resolves FQDN on behalf of device internal (client) applications.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Baseline:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Enables or disables the DNS client.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_Baseline:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">The status of the DNS client. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="ServerNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_Baseline:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the Server table.</description>

  <parameter name="X_BROADCOM_COM_DnsIfNames" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This string variable may contain multiple layer 3 linux interface names separated by comma.  The first interface name has the highest priority for use as the default system DNS and the last one has the lowest priority.</description>

  <parameter name="X_BROADCOM_COM_ActiveDnsIfName" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This string variable contains the layer 3 linux interface name currently used as the default system DNS.  An empty string means no active dns in the system.</description>

  <parameter name="X_BROADCOM_COM_ActiveDnsServers" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="0.0.0.0,0.0.0.0" />
    <description source="BROADCOM">This string variable holds a list of dns ip addresses currently used in the system. The default value &quot;0.0.0.0,0.0.0.0&quot; means no active dns in the system.</description>

  <parameter name="X_BROADCOM_COM_Ipv6_DnsIfNames" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This string variable may contain multiple layer 3 (IPv6) linux interface names separated by comma.  The first interface name has the highest priority for use as the default system DNS and the last one has the lowest priority.</description>

  <parameter name="X_BROADCOM_COM_Ipv6_ActiveDnsIfName" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" />
    <description source="BROADCOM">This string variable contains the layer 3 (IPv6) linux interface name currently used as the default system DNS.  An empty string means no active dns in the system.</description>

  <parameter name="X_BROADCOM_COM_Ipv6_ActiveDnsServers" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="::,::" />
    <description source="BROADCOM">This string variable holds a list of dns ipv6 addresses currently used in the system. The default value &quot;::/128,::/128&quot; means no active dns in the system.</description>




<object name="InternetGatewayDevice.Device.DNS.Client.Server.{i}." shortObjectName="Dev2DnsServerObject" specSource="TR181" profile="Device2_Baseline:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">This table contains the DNS Server IP address to be used by the DHCP Client (it does not model a DNS Server). Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS.&#10;&#10;At most one entry in this table (regardless of whether or not it is enabled) can exist with a given value for Alias. On creation of a new table entry, the CPE MUST choose an initial value for Alias such that the new entry does not conflict with any existing entries.&#10;&#10;At most one enabled entry in this table can exist with a given value for DNSServer.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_Baseline:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_Baseline:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">TThe status of this entry. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dnsserver" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;    * Its value MUST NOT be empty.&#10;    * Its value MUST start with a letter.&#10;    * If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;    * The CPE MUST NOT change the parameter value. </description>

  <parameter name="DNSServer" type="string" specSource="TR181" profile="Device2_Baseline:1" requirements="W" supportLevel="ReadWrite" maxLength="45" />
    <description source="TRx">[IPAddress] DNS server IP addresses.&#10;&#10;Note: DNSServer is only writable when Type is Static; otherwise, DNSServer is automatically configured as result of DHCP, IPCP, or RA received DNS server information.</description>
    <description source="BROADCOM">Our TR98 based code puts 2 DNS servers separated by comma in a single DNSServers parameter.  However, this parameter appears to be designed to hold only 1 DNS address.  For now, we will still cram two addresses in this parameter.  However, if we try to put 2 long IPv6 adddresses in here, that will probably violate the 45 character limit.  Eventually, we should fix our code to read/write only 1 address per DNSServer parameter.</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_Baseline:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. This parameter specifies the IP interface over which the DNS query is sent.&#10;&#10;If an empty string is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface.&#10;&#10;Note: Interface is only writable when Type is Static; otherwise, Interface is automatically configured as result of DHCP, IPCP, or RA received DNS server information</description>
    <description source="BROADCOM">If Interface is empty string, then this system wide default static DNS.  It will not check for WAN connection up since it is not associated with any particular WAN connection.</description>

  <parameter name="Type" type="string" specSource="TR181" profile="Device2_Baseline:1" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="dnsServerOriginValues" />
    <description source="TRx">Method used to assign the DNSServer address. Enumeration of:&#10;&#10;    * DHCP (Replaced by DHCPv4, DEPRECATED)&#10;    * DHCPv4&#10;    * DHCPv6&#10;    * RouterAdvertisement&#10;    * IPCP&#10;    * Static &#10;&#10;Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have Type set to DHCPv4, DHCPv6, IPCP, or RouterAdvertisement, as the case may be. Manually created table entires will have their Type set to Static.</description>




<object name="InternetGatewayDevice.Device.DNS.Relay." shortObjectName="Dev2DnsRelayObject" specSource="TR181" profile="Device2_DNSRelay:1" requirements="P" supportLevel="NotSupported" />
  <description source="TRx">DNS Relay object. The DNS proxy (or relay) function allows the forwarding of local network DNS queries to local or external DNS server(s) [RFC5625].</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DNSRelay:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Enables or disables the DNS Relay function.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_DNSRelay:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">The status of the DNS relay. Enumeration of:&#10;&#10;    * Disabled&#10;    * Enabled&#10;    * Error (OPTIONAL) &#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="ForwardNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DNSRelay:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the Forwarding table.</description>




<object name="InternetGatewayDevice.Device.DNS.Relay.Forwarding.{i}." shortObjectName="Dev2DnsRelayForwardingObject" specSource="TR181" profile="Device2_DNSRelay:1" requirements="PC" supportLevel="NotSupported" />
  <description source="TRx">DNS Server forwarding policy to be used by the DNS Relay.  Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS. Note: Management of re-directing queries to the device embedded DNS server is not defined in this version of the specification. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DNSRelay:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this entry. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_DNSRelay:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">The status of this entry. {{enum}} The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition. </description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dnsrelayforwarding" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">{{datatype|expand}} </description>

  <parameter name="DNSServer" type="string" specSource="TR181" profile="Device2_DNSRelay:1" requirements="W" supportLevel="ReadWrite" maxLength="45" />
    <description source="TRx">DNS server IP addresses. Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information. </description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_DNSRelay:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">{{reference}} Specifies the IP interface over which the DNS query is sent. If {{empty}} is specified, the CPE MUST use its routing policy (IP Forwarding table entries), if necessary, to determine the appropriate interface.Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information. </description>

  <parameter name="Type" type="string" specSource="TR181" profile="Device2_DNSRelay:1" requirements="R" supportLevel="ReadOnly" defaultValue="Static" validValuesArray="dnsServerOriginValues" />
    <description source="TRx">Method used to assign the {{param|DNSServer}} address.  {{enum}} Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have {{param}} set to {{enum|DHCPv4}}, {{enum|DHCPv6}}, {{enum|IPCP}}, or {{enum|RouterAdvertisement}}, as the case may be. Manually created table entires will have their {{param}} set to {{enum|Static}}. </description>




<object name="InternetGatewayDevice.Device.DNS.Diagnostics." shortObjectName="Dev2DnsDiagnosticsObject" specSource="TR181" profile="Unspecified" requirements="P" supportLevel="NotSupported" pruneWriteToConfigFile="true" />
  <description source="TRx">The DNS Diagnostics object containing the {{object|NSLookupDiagnostics}} test. </description>




<object name="InternetGatewayDevice.Device.DNS.Diagnostics.NSLookupDiagnostics." shortObjectName="Dev2NsLookupDiagObject" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="P" supportLevel="NotSupported" pruneWriteToConfigFile="true" />
  <description source="TRx">This object defines access to an IP-layer NS Lookup test for the specified IP interface. When initiated, the NS Lookup test will contact {{param|DNSServer}} and look up {{param|HostName}} {{param|NumberOfRepetitions}} times.There will be a {{object|Result}} instance for each time the device performs a DNS lookup, which is determined by the value of {{param|NumberOfRepetitions}}. Any previous {{object|Result}} instances are removed when a new test is initiated. </description>

  <parameter name="DiagnosticsState" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="None" validValuesArray="nslookupDiagStateValues" />
    <description source="TRx">Indicates availability of diagnostic data. {{enum}} If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the DiagnosticsState to {{enum|Requested}}.When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic. When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the Error values listed above.If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate. When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code &quot;8 DIAGNOSTICS COMPLETE&quot; in the Inform message. After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}. While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters. </description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="W" supportLevel="ReadWrite" maxLength="256" />
    <description source="TRx">{{reference}} This parameter specifies the IP-layer interface over which the test is to be performed (i.e. the source IP address to use when performing the test).  If {{empty}} is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface. </description>

  <parameter name="HostName" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="W" supportLevel="ReadWrite" maxLength="256" />
    <description source="TRx">Specifies the Host Name that NS Lookup is to look for. The current domain name MUST be used unless the name is a fully qualified name. </description>

  <parameter name="DNSServer" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="W" supportLevel="ReadWrite" maxLength="256" />
    <description source="TRx">Specifies the DNS Server name or IP address that NS Lookup is to use for the lookup. The name of this server will be resolved using the default DNS server unless an IP address is provided. If {{empty}} is specified, the device's default DNS server will be used. </description>

  <parameter name="Timeout" type="unsignedInt" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Timeout in {{units}} that indicates that a request has failed. </description>

  <parameter name="NumberOfRepetitions" type="unsignedInt" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">The number of times the device SHOULD repeat the execution of the NSLookup using the same input parameters.  If the diagnostics test fails the CPE MAY terminate the test without completing the full number of repetitions.  Each repetition will use a Result instance to hold the NSLookup result data. </description>

  <parameter name="SuccessCount" type="unsignedInt" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">Number of successfully executed repetitions. </description>

  <parameter name="ResultNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">{{numentries}} Total number of Result entries from the most recent invocation of the test. </description>




<object name="InternetGatewayDevice.Device.DNS.Diagnostics.NSLookupDiagnostics.Result.{i}." shortObjectName="Dev2NsLookupDiagResultObject" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" supportLevel="NotSupported" />
  <description source="TRx">Results from the most recent invocation of the test, one instance per repetition. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" defaultValue="Success" validValuesArray="nslookupDiagResultValues" />
    <description source="TRx">Result Parameter to represent whether the NS Lookup was successful or not.   Errors for individual Result instances do not get bubbled up to {{param|#.DiagnosticsState}}.A failure on a specific attempt does not mean that the overall test failed, but a failure on all attempts means that {{param|#.DiagnosticsState}} SHOULD be {{enum|Error_Other|#.DiagnosticsState}}. </description>

  <parameter name="AnswerType" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" defaultValue="None" validValuesArray="dnsAnswerTypeValues" />
    <description source="TRx">Result parameter to represent whether the answer is Authoritative or not. </description>

  <parameter name="HostNameReturned" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">Result parameter to represent the fully qualified name for the Host Name in the calling parameter (e.g. HostName.DomainName); if no response was provided, then this parameter is {{empty}}. </description>

  <parameter name="IPAddresses" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" maxLength="45" />
    <description source="TRx">{{list}} Indicates the IP Address results returned by the NS Lookup; if no response was provided, then this parameter is {{empty}}. </description>

  <parameter name="DNSServerIP" type="string" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" maxLength="45" />
    <description source="TRx">Result parameter to represent the actual DNS Server IP address that the NS Lookup used. </description>

  <parameter name="ResponseTime" type="unsignedInt" specSource="TR181" profile="Device2_NSLookupDiag:1" requirements="R" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadOnly" />
    <description source="TRx">Response time (for the first response packet) in {{units}}, or 0 if no response was received. </description>




<object name="InternetGatewayDevice.Device.DNS.SD." shortObjectName="Dev2DnsServiceDiscoveryObject" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="P" supportLevel="NotSupported" />
  <description source="TRx">This object contains the DNS Service Discovery {{bibref|DNS-SD}} object and parameters necessary to discover services and their associated devices. Upon reboot the the contents of the service table are repopulated. When the DNS.SD service is disabled, the contents of the service table is implementation specific. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">The parameter, when {{true}}, enables the discovery of DNS-SD services hosted by other devices. </description>

  <parameter name="ServiceNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" neverWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Service table.</description>




<object name="InternetGatewayDevice.Device.DNS.SD.Service.{i}." shortObjectName="Dev2DnsServiceDiscoveryServiceObject" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="NotSupported" pruneWriteToConfigFile="true" />
  <description source="TRx">The {{object}} table contains discovered DNS-SD services. DNS.SD service information is provided in DNS RR SRV records {{bibref|RFC2782}}. The Service Instance Name {{bibref|DNS-SD|Section 4.1 Structured Instance Names}} further specifies information about the service name (RFC2782 Service field) and domain name (RFC2782 Name field) in the form: Service Instance Name =&lt;InstanceName&gt;.&lt;Service&gt;.&lt;Domain&gt;&lt;Service&gt;= _&lt;ApplicationProtocol&gt;. _&lt;TransportProtocol&gt;RFC2782 Service field will always be equal to&lt;InstanceName&gt;.&lt;Service&gt;RFC2782 Name field will always be equal to&lt;Domain&gt;For example, an SSH service might have:*{{param|InstanceName}} = &quot;Secure Shell (SSH))&quot; *{{param|ApplicationProtocol}} = &quot;ssh&quot;*{{param|TransportProtocol}} = &quot;TCP&quot; *{{param|Domain}} = &quot;example.com&quot;*{{param|Port}} = 22 *{{param|Target}} = &quot;ssh.example.com.&quot; </description>

  <parameter name="InstanceName" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="63" />
    <description source="TRx">Human-readable instance name {{bibref|DNS-SD|Section 4.1.1 Instance Names}} (i.e. The &quot;&lt;{{param}}&gt;&quot; portion of the '&quot;Service Instance Name'&quot;). </description>

  <parameter name="ApplicationProtocol" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="15" />
    <description source="TRx">The Application Protocol, without the leading underscore, associated with the service (e.g., daap) as defined by the DNS-SD service {{bibref|DNS-SD|Section 7 Application Protocol Names}}. </description>

  <parameter name="TransportProtocol" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" defaultValue="TCP" validValuesArray="transportProtocolValues" />
    <description source="TRx">The Transport Protocol associated with the service as defined by the DNS-SD service {{bibref|DNS-SD|Section 4.1.2 Service Names}}. </description>

  <parameter name="Domain" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">The value extracted from the Name field of the DNS SRV record {{bibref|RFC2782}} which represents the fully qualified domain name (FQDN) associated with the service as defined by the DNS-SD service {{bibref|DNS-SD|Section 4.1.3 Domain Names}}. </description>

  <parameter name="Port" type="unsignedInt" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxValue="65535" />
    <description source="TRx">The value extracted from the Port field of the DNS SRV record {{bibref|RFC2782}} that is used to contact the service. </description>

  <parameter name="Target" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="256" />
    <description source="TRx">The fully qualified domain name (FQDN) with the trailing dot &quot;.&quot; of the target host implementing the service as in the DNS SRV record {{bibref|RFC2782}}. </description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" defaultValue="LeaseExpired" validValuesArray="dnsServiceDiscoveryStatusValues" />
    <description source="TRx">The status of the discovered {{object}} at {{param|LastUpdate}} time. {{enum}} The ability to instantiate an inactive {{object}} is OPTIONAL.The time an inactive {{object}} remains listed in this table is a local matter to the device. </description>

  <parameter name="LastUpdate" type="dateTime" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The date and time at which the last advertisement for this {{object}} was received. </description>

  <parameter name="Host" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="1024" />
    <description source="TRx">{{list}} {{reference|all Host table entries, active or inactive, that correspond to this discovered DNS.SD service. As such, when entries are added or removed from the Host tables the value of this parameter MUST be updated accordingly|ignore}} </description>

  <parameter name="TimeToLive" type="unsignedInt" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxValue="2147483647" />
    <description source="TRx">The value extracted from the TTL field of the DNS SRV record {{bibref|RFC2782}}. </description>

  <parameter name="Priority" type="unsignedInt" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxValue="65535" />
    <description source="TRx">The value extracted from the Priority field of the DNS SRV record {{bibref|RFC2782}}. </description>

  <parameter name="Weight" type="unsignedInt" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxValue="65535" />
    <description source="TRx">A server selection mechanism. The value extracted from the Weight field of the DNS SRV record {{bibref|RFC2782}} that specifies the relative weight for entries with the same {{param|Priority}}. </description>

  <parameter name="TextRecordNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The number of entries in the TextRecord table. </description>




<object name="InternetGatewayDevice.Device.DNS.SD.Service.{i}.TextRecord.{i}." shortObjectName="Dev2DnsServiceDiscvoeryTextRecordObject" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="NotSupported" />
  <description source="TRx">This object maintains an instance of a (key/value pairs) of the service. The information is extracted from DNS TXT records {{bibref|RFC1035}} of the discovered service. When multiple instances of the{{object}} table have the same value for the {{param|Key}} parameter, the implementation is CPE specific. </description>

  <parameter name="Key" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="255" />
    <description source="TRx">The key that identifies the text record </description>

  <parameter name="Value" type="string" specSource="TR181" profile="Device2_DNSServiceDiscovery:1" requirements="R" supportLevel="ReadOnly" maxLength="255" />
    <description source="TRx">The value of the text record. </description>




<object name="InternetGatewayDevice.Device.NAT." shortObjectName="Dev2NatObject" specSource="TR181" profile="Device2_NAT:1" requirements="P" supportLevel="Present" oid="1550" />
  <description source="TRx">Properties for Network Address Translation (NAT). The entire {{object}} object only applies to IPv4.</description>

  <parameter name="InterfaceSettingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_NAT:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the InterfaceSetting table.</description>

  <parameter name="PortMappingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_NAT:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" countPersistentForConfigFile="true" />
    <description source="TRx">The number of entries in the PortMapping table.</description>
    <description source="BROADCOM">This table contains a mix of statically configured portmappings and dynamically created portmappings from UPnP.  Hence countPersistentForConfigFile. </description>




<object name="InternetGatewayDevice.Device.NAT.InterfaceSetting.{i}." shortObjectName="Dev2NatIntfSettingObject" specSource="TR181" profile="Device2_NAT:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">NAT settings for an associated IP Interface on which NAT is enabled. For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}. Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the {{object}} entry, indicating if NAT is enabled for the referenced IP Interface instance. On creation, an {{object}} entry is disabled by default.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="NatStatusValues" />
    <description source="TRx">The status of this entry. {{enum}} The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid. The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-natintfsetting" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced: *Its value MUST NOT be empty. *Its value MUST start with a letter. *If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix. *The CPE MUST NOT change the parameter value. </description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. The associated IP interface on which NAT is to be enabled.</description>

  <parameter name="X_BROADCOM_COM_FullconeNATEnabled" type="boolean" specSource="Broadcom" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />




<object name="InternetGatewayDevice.Device.NAT.InterfaceSetting.{i}.X_BROADCOM_COM_PortTriggering.{i}." shortObjectName="Dev2NatPortTriggeringObject" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="DynamicInstances" oid="3592" />
  <description source="BROADCOM">Port Triggering Configuration.</description>

  <parameter name="Enable" type="boolean" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="false" />
    <description source="BROADCOM">Enable/Disable this entry of port triggering configuration.</description>

  <parameter name="Name" type="string" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="NA" />
    <description source="BROADCOM">Name of this port triggering configuration.</description>

  <parameter name="TriggerProtocol" type="string" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="TCP" validValuesArray="transportProtocolValues" />
    <description source="BROADCOM">TCP, UDP or Both.</description>

  <parameter name="OpenProtocol" type="string" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="TCP" validValuesArray="transportProtocolValues" />
    <description source="BROADCOM">TCP, UDP or Both.</description>

  <parameter name="TriggerPortStart" type="unsignedInt" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="NA" />
    <description source="BROADCOM">Trigger port start.</description>

  <parameter name="TriggerPortEnd" type="unsignedInt" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="NA" />
    <description source="BROADCOM">Trigger port end.</description>

  <parameter name="OpenPortStart" type="unsignedInt" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="NA" />
    <description source="BROADCOM">Open port start.</description>

  <parameter name="OpenPortEnd" type="unsignedInt" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="NA" />
    <description source="BROADCOM">Open port end.</description>




<object name="InternetGatewayDevice.Device.NAT.PortMapping.{i}." shortObjectName="Dev2NatPortMappingObject" specSource="TR181" profile="Device2_NAT:1" requirements="PC" supportLevel="DynamicInstances" minEntries="0" />
  <description source="TRx">Port mapping table. This table MUST contain all NAT port mappings associated with this connection, including static and dynamic port mappings programmatically created via local control protocol, such as UPnP. This table MUST NOT contain dynamic NAT binding entries associated with the normal operation of NAT. If the CPE hosts a firewall, it is assumed that it will appropriately configure the firewall for the port mapping. For enabled table entries, if {{param|InternalClient}} is {{empty}}, or if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the port mapping instance. On creation, an entry is disabled by default.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this entry. {{enum}} The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid. The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-natportmapping" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced: *Its value MUST NOT be empty. *Its value MUST start with a letter. *If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix. *The CPE MUST NOT change the parameter value. </description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. Specifies the IP interface to which this port mapping applies.</description>

  <parameter name="AllInterfaces" type="boolean" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">{{reference}} The associated IP interface on which NAT is to be enabled.</description>

  <parameter name="LeaseDuration" type="unsignedInt" specSource="TR181" profile="Device2_NAT:1" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" neverWriteToConfigFile="true" />
    <description source="TRx">Determines the time to live, in seconds, of a port mapping lease, where &quot;time to live&quot; means the number of seconds before the port mapping expires. A value of 0 means the port mapping is static. Support for dynamic (non-static) port mappings is OPTIONAL. That is, the only value for {{param}} that MUST be supported is 0. For a dynamic (non-static) port mapping, when this parameter is read, the value represents the time remaining on the port mapping lease. That is, for a dynamic port mapping, the value counts down toward 0. When a dynamic port mapping lease expires, the CPE MUST automatically terminate that port mapping, and MUST automatically delete the corresponding {{object}} table entry.</description>
    <description source="BROADCOM">This is a useful param but will be hard to implement.  We do not want to save these dynamic entries across reboots.  But we also do not want to constantly write to the config file with new values of the LeaseDuration.</description>

  <parameter name="RemoteHost" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">This parameter is the IP address of the source of inbound packets. {{empty}} indicates a &quot;wildcard&quot;, i.e. any IP address (this will be {{empty}} in most cases). CPE are REQUIRED only to support {{empty}}. When {{param}} is {{empty}}, all traffic sent to the {{param|ExternalPort}} on the WAN interface of the gateway is forwarded to the {{object|.IP.Interface}} associated with the {{param|InternalClient}} on the {{param|InternalPort}}. When {{param}} is specified as one external IP address, the NAT will only forward inbound packets from this {{param}} to the {{param|InternalClient}}, all other packets will be dropped. If a CPE supports non-empty values for {{param}}, it MAY additionally support the ability to have more than one port mapping with the same {{param|ExternalPort}} and {{param|Protocol}}, but with differing values of {{param}}. When wildcard values are used for {{param}} and/or {{param|ExternalPort}}, the following precedence order applies (with the highest precedence listed first): # Explicit {{param}}, explicit {{param|ExternalPort}} # Explicit {{param}}, zero {{param|ExternalPort}} # Empty {{param}}, explicit {{param|ExternalPort}} # Empty {{param}}, zero {{param|ExternalPort}} If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.</description>

  <parameter name="ExternalPort" type="unsignedInt" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="0" minValue="0" maxValue="65535" />
    <description source="TRx">The external port (or the first port of a range of external ports) that the NAT gateway would listen on for connection requests to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the WAN interface SHOULD be forwarded to the {{object|.IP.Interface}} associated with the {{param|InternalClient}} on the {{param|InternalPort}}. A value of zero ({{null}}) represents a &quot;wildcard&quot;, i.e. any port number. If this value is {{null}}, connection requests on all external ports (that are not otherwise mapped) will be forwarded to {{param|InternalClient}}, and the value(s) of {{param|InternalPort}} on {{param|InternalClient}} are ignored. When wildcard values are used for {{param|RemoteHost}} and/or {{param}}, the following precedence order applies (with the highest precedence listed first): # Explicit {{param|RemoteHost}}, explicit {{param}} # Explicit {{param|RemoteHost}}, zero {{param}} # Empty {{param|RemoteHost}}, explicit {{param}} # Empty {{param|RemoteHost}}, zero {{param}} If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.</description>

  <parameter name="ExternalPortEndRange" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="0" minValue="0" maxValue="65535" />
    <description source="TRx">Indicates the last port of the external port range that starts with {{param|ExternalPort}}. If an external port range is specified, then the behavior described for {{param|ExternalPort}} applies to all ports within the range. A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|ExternalPort}}. If {{param|ExternalPort}} is zero (wildcard), the value of this parameter MUST be ignored. If specified, the value of this parameter MUST be greater than or equal to the value of {{param|ExternalPort}}.</description>

  <parameter name="InternalPort" type="unsignedInt" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" minValue="0" maxValue="65535" />
    <description source="TRx">The port on {{param|InternalClient}} that the gateway SHOULD forward connection requests to.</description>

  <parameter name="X_BROADCOM_COM_InternalPortEndRange" type="unsignedInt" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="0" minValue="0" maxValue="65535" />

  <parameter name="Protocol" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="TCP" validValuesArray="transportProtocolValues" />
    <description source="TRx">The protocol of the port mapping. {{enum}}</description>

  <parameter name="InternalClient" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The IP address or DNS host name of an internal client (on the LAN). Support for an IP address is mandatory. If {{param}} is specified as an IP address and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with the original IP address. Support for DNS host names is OPTIONAL. If {{param}} is specified as a DNS host name and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with this LAN device. In this case, it is the responsibility of the CPE to maintain the name-to-address mapping in the event of IP address changes. This can be accomplished, for example, by assigning the DNS host name via use of DHCP option 12 (Host Name) or option 81 (FQDN). Note that the ACS can learn the host name associated with a given LAN device via the {{object|.Hosts.Host.}} table. Read access to this parameter MUST always return the exact value that was last set by the ACS. For example, if the internal client is set to a DNS host name, it MUST read back as a DNS host name and not as an IP address. It MUST be possible to set the {{param}} to the broadcast IP address 255.255.255.255 for UDP mappings. This is to enable multiple NAT clients to use the same well-known port simultaneously.</description>

  <parameter name="Description" type="string" specSource="TR181" profile="Device2_NAT:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">User-readable description of this port mapping.</description>

  <parameter name="X_BROADCOM_COM_AppName" type="string" specSource="Broadcom" profile="Device2_NAT:1" supportLevel="ReadWrite" defaultValue="" maxLength="32" />




<object name="InternetGatewayDevice.Device.DHCPv4." shortObjectName="Dev2Dhcpv4Object" specSource="TR181" profile="Device2_Baseline:1" requirements="P" supportLevel="Present" oid="1560" />
  <description source="TRx">The Dynamic Host Configuration Protocol (DHCP) IPv4 object {{bibref|RFC2131}}. This entire object applies to IPv4 only. It contains the {{object|Client}}, {{object|Server}}, and {{object|Relay}} objects.</description>
  <description source="BROADCOM">This object is in both the DHCPv4Client and DHCPv4Server profiles.  Our profile mechanism does not have a concept of &quot;DHCPv4Client or DHCPv4Server&quot;, so we put it in the Device2_Baseline profile so that it will always be included.</description>

  <parameter name="ClientNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Client table.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Client.{i}." shortObjectName="Dev2Dhcpv4ClientObject" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">This object contains DHCP client settings for an associated ''IP Interface'' indicated by {{param|Interface}}. For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}. Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this Client entry.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4client" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. The IP Interface associated with the Client entry. This will reference an IPv4-capable interface (that is attached to the IPv4 stack), otherwise the table entry will be inoperable.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this table entry. Enumeration of:&#10;&#10;&#10;&#10;    Disabled&#10;&#10;    Enabled&#10;&#10;    Error_Misconfigured&#10;&#10;    Error (OPTIONAL) &#10;&#10;&#10;&#10;The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid.&#10;&#10;&#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="DHCPStatus" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="Init" validValuesArray="DhcpStatusValues" />
    <description source="TRx">The DHCP Client status as defined in {{bibref|RFC2131}}. {{enum}} Note: This value is only relevant when the DHCP Client is operationally enabled (i.e. when {{param|Status}} is {{enum|Enabled|Status}}). </description>

  <parameter name="Renew" type="boolean" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">When set to {{true}}, the DHCP client will renew its DHCP lease.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="15" />
    <description source="TRx">IPv4 Address option received from the DHCP Server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}.</description>

  <parameter name="SubnetMask" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="15" />
    <description source="TRx">Subnet mask option received from the DHCP Server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}. Value is information received via DHCP Option 1.</description>

  <parameter name="IPRouters" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="256" />
    <description source="TRx">{{list}} Items represent IP Router IPv4 Address(es) received from the DHCP server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}. Value is information received via DHCP Options 3, 33 or 121.</description>

  <parameter name="DNSServers" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="256" />
    <description source="TRx">&gt;{{list}} Items represent DNS Server IPv4 Address(es) received from the DHCP server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}. Value is information received via DHCP Option 6.</description>

  <parameter name="LeaseTimeRemaining" type="int" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="NotSupported" defaultValue="0" minValue="-1" maxValue="2147483647" />
    <description source="TRx">&gt;DHCP lease time remaining in seconds. A value of -1 indicates an infinite lease.</description>

  <parameter name="DHCPServer" type="string" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="NotSupported" defaultValue="" maxLength="15" />
    <description source="TRx">The IPv4 address of the current DHCP server.</description>

  <parameter name="PassthroughEnable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the DHCP Client retrieved IP address information is configured on the referenced {{param|Interface}} object. If {{true}}, the DHCP Client retrieved information is propagated to the parameters in the referenced {{param|PassthroughDHCPPool}} object, replacing any existing configuration (including ''MinAddress'', ''MaxAddress'', ''SubnetMask'', ''IPRouters'', and ''DNSServers'').</description>

  <parameter name="PassthroughDHCPPool" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="256" />
    <description source="TRx">{{reference}}When {{param}} is set to {{empty}}, {{param|PassthroughEnable}} MUST be set to {{false}} (i.e. passthrough can not be enabled without a pool reference specified).</description>

  <parameter name="SentOptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the SentOption table.</description>

  <parameter name="ReqOptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the ReqOption table.</description>

  <parameter name="X_BROADCOM_COM_Pid" type="unsignedInt" specSource="Broadcom" profile="Unspecified" supportLevel="ReadOnly" defaultValue="0" minValue="0" maxValue="65535" hideParameterFromAcs="true" />
    <description source="BROADCOM">The pid of the dhcpv4 client is stored in this field.  A pid of 0 indicates that no dhcpv4 client is running.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Client.{i}.SentOption.{i}." shortObjectName="Dev2Dhcpv4ClientSentOptionObject" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">Each instance of this object represents a DHCP option that MUST, if enabled, be sent in DHCP client requests. All sent DHCP options MUST be listed.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this SentOption table entry.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4clientsentoption" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Tag" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="1" minValue="1" maxValue="254" />
    <description source="TRx">Option tag as defined in {{bibref|RFC2132}}.</description>

  <parameter name="Value" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="255" minLength="0" />
    <description source="TRx">A hexbinary encoded option value.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Client.{i}.ReqOption.{i}." shortObjectName="Dev2Dhcpv4ClientReqOptionObject" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="PC" supportLevel="DynamicInstances" autoOrder="true" />
  <description source="TRx">Each instance of this object represents a DHCP option that MUST, if enabled, be requested in DHCP client requests. All requested DHCP options MUST be listed.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this ReqOption table entry.</description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="1" minValue="1" maxValue="4294967295" />
    <description source="TRx">Position of the option in the DHCP client request. A value of ''1'' indicates the first entry. When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction. The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4clientreqoption" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Tag" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="W" supportLevel="ReadWrite" defaultValue="1" minValue="1" maxValue="254" />
    <description source="TRx">Option tag as defined in {{bibref|RFC2132}}.</description>

  <parameter name="Value" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4Client:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="255" minLength="0" />
    <description source="TRx">A hexbinary encoded option value.</description>

  <parameter name="X_BROADCOM_COM_Value" type="string" specSource="Broadcom" profile="Unspecified" supportLevel="ReadWrite" defaultValue="" hideParameterFromAcs="true" />
    <description source="TRx">A string option value.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server." shortObjectName="Dev2Dhcpv4ServerObject" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="P" supportLevel="Present" />
  <description source="TRx">DHCPv4 server configuration.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Enables or disables the DHCP server.</description>

  <parameter name="PoolNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Pool table.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server.Pool.{i}." shortObjectName="Dev2Dhcpv4ServerPoolObject" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="PC" supportLevel="DynamicInstances" autoOrder="true" />
  <description source="TRx">DHCP conditional serving pool table. Each instance of this object defines a DHCP conditional serving pool. Client requests are associated with pools based on criteria such as source interface, supplied DHCP options, and MAC address. Overlapping pool ranges MUST be supported. For enabled table entries, if {{param|Interface}} is not a valid reference, or {{param|MinAddress}}, {{param|MaxAddress}}, or {{param|SubnetMask}} is not a valid value, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this Pool entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this entry. Enumeration of:&#10;&#10;&#10;&#10;    Disabled&#10;&#10;    Enabled&#10;&#10;    Error_Misconfigured&#10;&#10;    Error (OPTIONAL) &#10;&#10;&#10;&#10;The Error_Misconfigured value indicates that a necessary configuration value is undefined or invalid.&#10;&#10;&#10;&#10;The Error value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4serverpool" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="NotSupported" defaultValue="1" minValue="1" />
    <description source="TRx">Position of the {{object}} entry in the order of precedence. A value of ''1'' indicates the first entry considered (highest precedence). For each DHCP request, the highest ordered entry that matches the association criteria is applied. All lower order entries are ignored. When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction. The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string.  The IP Interface associated with the ''Pool'' entry.</description>

  <parameter name="VendorClassID" type="string" specSource="TR181" profile="Device2_DHCPv4CondServing:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="255" />
    <description source="TRx">Pool association criterion. Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in {{bibref|RFC2132}}, matched according to the criterion in {{param|VendorClassIDMode}}. Case sensitive. This is a normal string, e.g. &quot;abc&quot; is represented as &quot;abc&quot; and not say &quot;616263&quot; hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed. {{empty}} indicates this criterion is not used for conditional serving.</description>

  <parameter name="VendorClassIDExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified. If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.</description>

  <parameter name="VendorClassIDMode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="Exact" validValuesArray="VendorClassIdModeValues" />
    <description source="TRx">{{param|VendorClassID}} pattern match criterion. {{enum}} For example, if {{param|VendorClassID}} is &quot;Example&quot; then an Option 60 value of &quot;Example device&quot; will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.</description>

  <parameter name="ClientID" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4CondServing:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="255" />
    <description source="TRx">Pool association criterion. A hexbinary string used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in {{bibref|RFC2132}}. The option value is binary, so an exact match is REQUIRED. {{empty}} indicates this criterion is not used for conditional serving.</description>

  <parameter name="ClientIDExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the {{param|ClientID}} entry, if specified. If {{true}}, matching packets are those that do not match the {{param|ClientID}} entry, if specified.</description>

  <parameter name="UserClassID" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4CondServing:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="255" />
    <description source="TRx">Pool association criterion. A hexbinary string used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in {{bibref|RFC3004}}. {{empty}} indicates this criterion is not used for conditional serving.</description>

  <parameter name="UserClassIDExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified. If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.</description>

  <parameter name="Chaddr" type="MACAddress" specSource="TR181" profile="Device2_DHCPv4CondServing:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="17" />
    <description source="TRx">Pool association criterion. Hardware address (MAC address) of the physical interface of the DHCP client. {{empty}} indicates this criterion is not used for conditional serving.</description>

  <parameter name="ChaddrMask" type="MACAddress" specSource="TR181" profile="Device2_DHCPv4CondServing:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="17" />
    <description source="TRx">Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|Chaddr}} is only to be done for bit positions set to one in the mask. A mask of FF:FF:FF:FF:FF:FF or {{empty}} indicates all bits of the {{param|Chaddr}} are to be used for conditional serving classification.</description>

  <parameter name="ChaddrExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the (masked) {{param|Chaddr}} entry, if specified. If {{true}}, matching packets are those that do not match the (masked) {{param|Chaddr}} entry, if specified.</description>

  <parameter name="MinAddress" type="IPAddress" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" maxLength="15" />
    <description source="TRx">Specifies first IPv4 address in the pool to be assigned by the DHCP server on the LAN interface. The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.</description>

  <parameter name="MaxAddress" type="IPAddress" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" maxLength="15" />
    <description source="TRx">Specifies last IPv4 address in the pool to be assigned by the DHCP server on the LAN interface. The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.</description>

  <parameter name="ReservedAddresses" type="string" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="NotSupported" defaultValue="" />
    <description source="TRx">{{list}} List items represent addresses marked reserved from the address allocation pool.</description>

  <parameter name="SubnetMask" type="string" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="15" />
    <description source="TRx">Specifies the client's network subnet mask. The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.</description>

  <parameter name="DNSServers" type="string" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">&gt;{{list}} List items represent DNS servers offered to DHCP clients. Support for more than three DNS Servers is OPTIONAL. The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.</description>

  <parameter name="DomainName" type="string" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" maxLength="64" />
    <description source="TRx">&gt;Sets the domain name to provide to clients on the LAN interface.</description>

  <parameter name="IPRouters" type="string" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">{{list}} List items represent addresses of routers on this subnet. Also known as default gateway. Support for more than one Router address is OPTIONAL. The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.</description>

  <parameter name="LeaseTime" type="int" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="86400" minValue="-1" maxValue="2147483647" />
    <description source="TRx">Specifies the lease time in seconds of client assigned addresses. A value of -1 indicates an infinite lease.</description>

  <parameter name="StaticAddressNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the StaticAddress table.</description>

  <parameter name="OptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Option table.</description>

  <parameter name="ClientNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" neverWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Client table.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server.Pool.{i}.StaticAddress.{i}." shortObjectName="Dev2Dhcpv4ServerPoolStaticAddressObject" specSource="TR181" profile="Unspecified" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">DHCP static address table. Entries in this table correspond to what {{bibref|RFC2131}} calls &quot;manual allocation&quot;, where a client's IP address is assigned by the network administrator, and DHCP is used simply to convey the assigned address to the client. Each instance of this object specifies a hardware address (MAC address) and an IP address within the pool. When serving from this pool, this IP address MUST, if available, be assigned to the DHCP client with this hardware address, and MUST NOT be assigned to any other client. Note that it is possible that an IP address in this table is present in one or more of the other conditional serving pools, in which case it is possible that such an address will be assigned to a different client. </description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the StaticAddress table entry. Disabling an entry does not return the IP address to the pool.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4serverpoolstaticaddr" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Chaddr" type="MACAddress" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="17" />
    <description source="TRx">Hardware address (MAC address) of the physical interface of the DHCP client.</description>

  <parameter name="Yiaddr" type="IPAddress" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="15" />
    <description source="TRx">IPv4 address to be assigned by the DHCP server to the DHCP client with the specified hardware address (MAC address).</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server.Pool.{i}.Option.{i}." shortObjectName="Dev2Dhcpv4ServerPoolOptionObject" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="PC" supportLevel="NotSupported" />
  <description source="TRx">DHCPv4 options supplied by this client, e.g. DUID (Option 1), UserClassID (Option 15) or VendorClassID (option 16).</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this Option table entry.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4serverpooloption" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Tag" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="1" minValue="1" maxValue="254" />
    <description source="TRx">Option tag as defined in {{bibref|RFC2132}}.</description>

  <parameter name="Value" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4Server:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="255" />
    <description source="TRx">A hexbinary encoded option value.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server.Pool.{i}.Client.{i}." shortObjectName="Dev2Dhcpv4ServerPoolClientObject" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="MultipleInstances" pruneWriteToConfigFile="true" />
  <description source="TRx">DHCPv4 client table.&#10;&#10;&#10;&#10;This table lists details of DHCPv4 clients that matched the filter criteria of this Pool entry.&#10;&#10;&#10;&#10;At most one entry in this table can exist with a given value for Alias, or with a given value for SourceAddress.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4serverpoolclient" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">&gt;{{datatype|expand}} Note: There is no guarantee that the {{param}} value on automatically-created {{object}} instances will be retained. This is because automatically-created {{object}} instances can be transitory.</description>

  <parameter name="Chaddr" type="string" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="17" />
    <description source="TRx">MAC address of the DHCPv4 client.</description>

  <parameter name="Active" type="boolean" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">Whether or not the DHCPv4 client is currently present on the LAN. The method of presence detection is a local matter to the CPE. The ability to list inactive DHCPv4 clients is OPTIONAL. If the CPE includes inactive DHCPv4 clients in this table, {{param}} MUST be set to {{false}} for each inactive DHCPv4 client. The length of time an inactive DHCPv4 client remains listed in this table is a local matter to the CPE.</description>

  <parameter name="IPv4AddressNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The number of entries in the IPv6Address table.</description>

  <parameter name="OptionNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The number of entries in the Option table.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server.Pool.{i}.Client.{i}.IPv4Address.{i}." shortObjectName="Dev2Dhcpv4ServerPoolClientIPv4AddressObject" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="MultipleInstances" pruneWriteToConfigFile="true" />
  <description source="TRx">IPv4 addresses assigned to this client.&#10;&#10;&#10;&#10;At most one entry in this table can exist with a given value for IPAddress.</description>

  <parameter name="IPAddress" type="string" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" defaultValue="" maxLength="15" />
    <description source="TRx">IPv4 address.</description>

  <parameter name="LeaseTimeRemaining" type="dateTime" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" />
    <description source="TRx">The time at which the DHCP lease will expire or {{null}} if not known. For an infinite lease, the parameter value MUST be 9999-12-31T23:59:59Z.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Server.Pool.{i}.Client.{i}.Option.{i}." shortObjectName="Dev2Dhcpv4ServerPoolClientOptionObject" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="MultipleInstances" pruneWriteToConfigFile="true" />
  <description source="TRx">DHCPv4 options supplied by this client, e.g. ''VendorClassID'' (Option 60), ''ClientID'' (option 61) or ''UserClassID'' (Option 77).</description>

  <parameter name="Tag" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" minValue="0" maxValue="255" />
    <description source="TRx">Option tag as defined in {{bibref|RFC2132}}.</description>

  <parameter name="Value" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4ServerClientInfo:1" requirements="R" supportLevel="ReadOnly" maxLength="255" />
    <description source="TRx">A hexbinary encoded option value.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Relay." shortObjectName="Dev2Dhcpv4RelayObject" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="P" supportLevel="Present" />
  <description source="TRx">DHCPv4 server configuration.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="ReadWrite" />
    <description source="TRx">Enables or disables the DHCP Relay Agent function.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status3eValues" />
    <description source="TRx">The status of the DHCP relay. {{enum}} The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="ForwardingNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="R" supportLevel="ReadOnly" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Forwarding table.</description>




<object name="InternetGatewayDevice.Device.DHCPv4.Relay.Forwarding.{i}." shortObjectName="Dev2Dhcpv4RelayForwardingObject" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="PC" supportLevel="DynamicInstances" autoOrder="true" />
  <description source="TRx">DHCP Relay Agent Forwarding table. For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the Forwarding entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this entry. {{enum}} The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid. The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Unspecified" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="ReadWrite" defaultValue="cpe-dhcpv4relayforwarding" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.&#10;&#10;&#10;&#10;If the CPE supports the Alias-based Addressing feature as defined in [Section 3.6.1/TR-069a4] and described in [Appendix II/TR-069a4], the following mandatory constraints MUST be enforced:&#10;&#10;&#10;&#10;    Its value MUST NOT be empty.&#10;&#10;    Its value MUST start with a letter.&#10;&#10;    If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix.&#10;&#10;    The CPE MUST NOT change the parameter value. </description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="1" minValue="1" maxValue="4294967295" />
    <description source="TRx">Position of the {{object}} entry in the order of precedence. A value of ''1'' indicates the first entry considered (highest precedence). For each DHCP request, the highest ordered entry that matches the association criteria is applied. All lower order entries are ignored. When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction. The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).</description>

  <parameter name="Interface" type="string" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">The value MUST be the path name of a row in the IP.Interface table. If the referenced object is deleted, the parameter value MUST be set to an empty string. The IP Interface associated with the ''Forwarding'' entry.</description>

  <parameter name="VendorClassID" type="string" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="255" />
    <description source="TRx">Pool association criterion. Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in {{bibref|RFC2132}}, matched according to the criterion in {{param|VendorClassIDMode}}. Case sensitive. This is a normal string, e.g. &quot;abc&quot; is represented as &quot;abc&quot; and not say &quot;616263&quot; hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed. {{empty}} indicates this criterion is not used as a relay classification criterion.</description>

  <parameter name="VendorClassIDExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified. If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.</description>

  <parameter name="VendorClassIDMode" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="Exact" validValuesArray="VendorClassIdModeValues" />
    <description source="TRx">{{param|VendorClassID}} pattern match criterion. {{enum}} For example, if {{param|VendorClassID}} is &quot;Example&quot; then an Option 60 value of &quot;Example device&quot; will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.</description>

  <parameter name="ClientID" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="255" />
    <description source="TRx">Pool association criterion. A hexbinary string used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in {{bibref|RFC2132}}. The option value is binary, so an exact match is REQUIRED. {{empty}} indicates this criterion is not used as a relay classification criterion.</description>

  <parameter name="ClientIDExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the {{param|ClientID}} entry, if specified. If {{true}}, matching packets are those that do not match the {{param|ClientID}} entry, if specified.</description>

  <parameter name="UserClassID" type="hexBinary" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="255" />
    <description source="TRx">Pool association criterion. A hexbinary string used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in {{bibref|RFC3004}}. {{empty}} indicates this criterion is not used as a relay classification criterion.</description>

  <parameter name="UserClassIDExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified. If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.</description>

  <parameter name="Chaddr" type="string" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="17" />
    <description source="TRx">Pool association criterion. Hardware address (MAC address) of the physical interface of the DHCP client. {{empty}} indicates this criterion is not used as a relay classification criterion.</description>

  <parameter name="ChaddrMask" type="string" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="17" />
    <description source="TRx">Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|Chaddr}} is only to be done for bit positions set to one in the mask. A mask of FF:FF:FF:FF:FF:FF or {{empty}} indicates all bits of the {{param|Chaddr}} are to be used for relay classification.</description>

  <parameter name="ChaddrExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, matching packets are those that match the (masked) {{param|Chaddr}} entry, if specified. If {{true}}, matching packets are those that do not match the (masked) {{param|Chaddr}} entry, if specified.</description>

  <parameter name="LocallyServed" type="boolean" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{true}}, incoming DHCP requests will be forwarded to the CPE DHCP Server. If {{false}}, incoming DHCP requests will be forwarded to the {{param|DHCPServerIPAddress}} configured for this forwarding entry.</description>

  <parameter name="DHCPServerIPAddress" type="string" specSource="TR181" profile="Device2_DHCPv4Relay:1" requirements="W" supportLevel="ReadWrite" maxLength="15" />
    <description source="TRx">IPv4 address of the DHCP server, where the request has to be sent to when there is a conditional match with this forwarding entry and {{param|LocallyServed}} is {{false}}. If {{param|LocallyServed}} is {{false}} and this parameter is not configured, then the DHCP request is dropped.</description>




<object name="InternetGatewayDevice.Device.Firewall." shortObjectName="Dev2FirewallObject" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="P" supportLevel="Present" oid="1680" />
  <description source="TRx">Firewall configuration object. The {{param|Config}} parameter enables and disables the Firewall, and can select either a predefined configuration ({{enum|High|Config}} or {{enum|Low|Config}}) or an explicitly-defined {{enum|Advanced|Config}} configuration. For an {{enum|Advanced|Config}} configuration, {{param|AdvancedLevel}} controls the currently active Firewall Level, and the Firewall Levels are defined in the {{object|Level}}, {{object|Chain}} and {{object|Chain.{i}.Rule}} tables. The Firewall rules modeled by this object operate only on the forwarding path. This means that they affect only routed traffic, and do not affect traffic that is destined for or generated by the CPE. Note that any {{object|#.NAT}} processing on the ingress packet occurs before Firewall rules are applied so, for example, the Firewall rules will see the translated destination IP address and port in a downstream packet that has passed through the NAT. See {{bibref|TR-181i2a2|Appendix VIII}} for an example {{enum|Advanced|Config}} configuration.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables the Firewall. Firewalls often implement additional Denial of Service and other vulnerability protections, such as those described in {{bibref|ICSA-Baseline}}. If a {{enum|Stateful|Type}} Firewall is enabled, then it is assumed that all implemented stateful protections are enabled, unless they are overridden by some other part of the data model.</description>

  <parameter name="Config" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="Low" validValuesArray="FirewallConfigValues" />
    <description source="TRx">How this firewall is configured. {{enum}} Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a2|Section 3.3}} MUST be adhered to.</description>

  <parameter name="AdvancedLevel" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" />
    <description source="TRx">Selects the currently active Firewall Level. {{param}} only applies when {{param|Config}} is {{enum|Advanced|Config}}.</description>

  <parameter name="Type" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadOnly" defaultValue="Stateful" validValuesArray="AdvancedFirewallTypeValues" />
    <description source="TRx">Firewall Type. Enumeration of:&#10;&#10;Stateless (The Firewall only implements stateless packet inspection) &#10;Stateful (The Firewall implements stateful packet inspection) &#10;A Stateless Firewall treats each packet individually and thus has no concept of sessions. Therefore a Stateless Firewall cannot distinguish between unsolicited downstream traffic and downstream traffic in response to outbound messages. This means that it has to accept all incoming downstream traffic. Furthermore, because a Stateless Firewall treats each packet individually, it does not provide any DoS or vulnerability protections.&#10;&#10;A Stateful Firewall maintains state about previous packets and thus supports sessions. Therefore a Stateful Firewall can distinguish between solicited and unsolicited downstream traffic. In a Stateful Firewall, explicitly configured rules only apply to unsolicited traffic, and can not cause packets received in response to an upstream request to be dropped. Furthermore, because a Stateful Firewall maintains state, it can provide DoS and vulnerability protections.&#10;&#10;A device that has a Stateless Firewall depends on the NAT to provide protection against unsolicited downstream IPv4 traffic. This is because, as noted above, a Stateless Firewall has to be configured to accept all incoming downstream traffic. For IPv6 there is no NAT, so a Stateless Firewall can not provide simple security protections against unsolicited downstream IPv6 traffic.&#10;</description>

  <parameter name="Version" type="string" specSource="TR181" profile="Device2_SimpleFirewall:1" requirements="R" supportLevel="NotSupported" maxLength="16" />
    <description source="TRx">A string identifying the firewall settings version currently used in the CPE, or {{empty}} if the firewall settings are not associated with a version.</description>

  <parameter name="LastChange" type="dateTime" specSource="TR181" profile="Device2_SimpleFirewall:1" requirements="R" supportLevel="NotSupported" />
    <description source="TRx">The time at which the firewall settings most recently changed. </description>

  <parameter name="LevelNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Level table.</description>

  <parameter name="ChainNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Chain table.</description>




<object name="InternetGatewayDevice.Device.Firewall.Level.{i}." shortObjectName="Dev2FirewallLevelObject" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="PC" supportLevel="DynamicInstances" autoOrder="true" />
  <description source="TRx">Firewall Level table. When an {{enum|Advanced|#.Config}} configuration is selected, {{param|#.AdvancedLevel}} selects the currently active entry in this table. Each {{object}} table entry references the {{object|#.Chain}} that contains the rules for this level.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="NotSupported" defaultValue="cpe-firewalllevel" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced: *Its value MUST NOT be empty. *Its value MUST start with a letter. *If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix. *The CPE MUST NOT change the parameter value. </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" />
    <description source="TRx">Human-readable name associated with this {{object}} entry.</description>

  <parameter name="Description" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" maxLength="256" />
    <description source="TRx">Human-readable description associated with this {{object}} entry.</description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="1" minValue="1" maxValue="4294967295" />
    <description source="TRx">Position of the {{object}} entry for user interface display; levels can be presented according to an increasing or decreasing level of security. When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all greater-valued {{param}} entries is incremented to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction. The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value.</description>

  <parameter name="Chain" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadOnly" defaultValue="" alwaysWriteToConfigFile="true" />
    <description source="TRx">The Chain containing Firewall Level Rules associated with this {{object}} entry. On creation of a new {{object}} entry, the device will automatically create a new {{object|#.Chain}} table entry that this {{param}} parameter will reference.</description>

  <parameter name="PortMappingEnabled" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="true" />
    <description source="TRx">Indicates whether NAT port mapping is enabled or disabled when this is the active Level. For a {{enum|Stateless|#.Type}} Firewall this can be set to {{false}} to force any port mappings to be operationally disabled (for a {{enum|Stateful|#.Type}} Firewall this is not necessary because the same effect can be achieved via Firewall rules). This parameter affects all the interfaces on which NAT is enabled. It operationally enables or disables port mapping functionality and therefore does not affect the individual {{param|##.NAT.PortMapping.{i}.Enable}} settings. Note that the current NAT status and NAT port mapping status are indicated by the {{param|##.NAT.InterfaceSetting.{i}.Status}} parameter.</description>

  <parameter name="DefaultPolicy" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="Drop" validValuesArray="FirewallDefaultPolicyValues" />
    <description source="TRx">Enable or disable logging, in a {{object|##.DeviceInfo.VendorLogFile}}, of packets not matching any of the level rules.</description>

  <parameter name="DefaultLogPolicy" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">Enable or disable logging, in a {{object|##.DeviceInfo.VendorLogFile}}, of packets not matching any of the level rules.</description>




<object name="InternetGatewayDevice.Device.Firewall.Chain.{i}." shortObjectName="Dev2FirewallChainObject" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="PC" supportLevel="DynamicInstances" />
  <description source="TRx">Firewall Chain table. Each entry contains an ordered list of {{object|Rule}} objects which can themselves reference other {{object}} instances. A hierarchy of rules can therefore be created. A given Firewall Chain's rules are all created by the same entity, as indicated by the {{param|Creator}} parameter.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this {{object}} entry.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="NotSupported" defaultValue="cpe-firewallchain" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced: *Its value MUST NOT be empty. *Its value MUST start with a letter. *If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix. *The CPE MUST NOT change the parameter value. </description>

  <parameter name="Name" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="64" />
    <description source="TRx">Human-readable name associated with this {{object}} entry.</description>

  <parameter name="Creator" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadWrite" defaultValue="ACS" validValuesArray="FirewallChainCreatorValues" alwaysWriteToConfigFile="true" />
    <description source="TRx">Creator of this {{object}} entry and of its {{object|Rule}}s. {{enum}} Note that this is the entity that originally created the {{object}} entry. The value of this parameter does not change if the {{object}} entry or one of its rules is subsequently changed by another entity.</description>

  <parameter name="RuleNumberOfEntries" type="unsignedInt" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadOnly" defaultValue="0" alwaysWriteToConfigFile="true" />
    <description source="TRx">The number of entries in the Rule table.</description>




<object name="InternetGatewayDevice.Device.Firewall.Chain.{i}.Rule.{i}." shortObjectName="Dev2FirewallChainRuleObject" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="PC" supportLevel="DynamicInstances" autoOrder="true" />
  <description source="TRx">Firewall Rule table. Each entry defines a Firewall packet selection rule. The {{param|Target}} parameter defines the action to perform for traffic matching this rule: the packet can be dropped, accepted, rejected or passed to another {{object|#}}. This table MUST NOT contain dynamic Firewall rules associated with {{enum|Stateful|##.Type}} Firewall sessions. All entries are created by the creator of the parent {{object|#}}, as indicated by its {{param|#.Creator}} parameter. {{object}} entries in a {{object|#}} with a {{param|#.Creator}} of {{enum|Defaults|#.Creator}}, {{enum|ACS|#.Creator}}, {{enum|UserInterface|#.Creator}} or (maybe) {{enum|Other|#.Creator}} are referred to as ''Static'' {{object}}s. Whether or not a {{object}} in a {{object|#}} with {{param|#.Creator}} {{enum|Other|#.Creator}} is regarded as ''Static'' is a local matter to the CPE. Some of this object's parameter descriptions refer to whether a {{object}} is ''Static'' when specifying whether or not the parameter value can be modified. For enabled table entries, if {{param|SourceInterface}} is not a valid reference and {{param|SourceAllInterfaces}} is {{false}}, or if {{param|DestInterface}} is not a valid reference and {{param|DestAllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.</description>

  <parameter name="Enable" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="false" />
    <description source="TRx">Enables or disables this {{object}} entry.</description>

  <parameter name="Status" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="R" supportLevel="ReadOnly" defaultValue="Disabled" validValuesArray="status4eValues" />
    <description source="TRx">The status of this {{object}} entry. {{enum}} The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid. The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.</description>

  <parameter name="Order" type="unsignedInt" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="1" minValue="1" maxValue="4294967295" />
    <description source="TRx">Position of the {{object}} entry for user interface display; levels can be presented according to an increasing or decreasing level of security. When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all greater-valued {{param}} entries is incremented to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction. The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value.</description>

  <parameter name="Alias" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" mayDenyActiveNotification="true" denyActiveNotification="true" supportLevel="NotSupported" defaultValue="cpe-firewallchainrule" maxLength="64" autoGenerateAlias="true" />
    <description source="TRx">A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference. If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced: *Its value MUST NOT be empty. *Its value MUST start with a letter. *If its instance object is created by the CPE, the initial value MUST start with a &quot;cpe-&quot; prefix. *The CPE MUST NOT change the parameter value. </description>

  <parameter name="Description" type="string" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" maxLength="256" />
    <description source="TRx">Human-readable name associated with this {{object}} entry.</description>

  <parameter name="Target" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="Drop" />
    <description source="TRx">Action to perform for traffic matching this {{object}} entry. {{enum}} This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="TargetChain" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="" />
    <description source="TRx">Specifies the chain to process when {{param|Target}} equals {{enum|TargetChain|Target}}. If there are no matching rules in the referenced chain, processing continues with the next rule in this chain (if any). In other words, {{enum|TargetChain|Target}} behaves like a subroutine call. {{empty}} indicates no {{param}} is specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="Log" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">Enable or disable logging, in a {{object|###.DeviceInfo.VendorLogFile}}, of packets matching this {{object}}. If the {{object}} is not ''Static'' (as explained in the object description), whether changes to this parameter persist across re-boot is a local matter to the CPE.</description>

  <parameter name="CreationDate" type="dateTime" specSource="TR181" profile="Unspecified" requirements="R" supportLevel="NotSupported" alwaysWriteToConfigFile="true" />
    <description source="TRx">Date and time when this {{object}} entry was created.</description>

  <parameter name="ExpiryDate" type="dateTime" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="9999-12-31T23:59:59Z" />
    <description source="TRx">The time at which this {{object}} entry will expire, or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z. The only value that MUST be supported is 9999-12-31T23:59:59Z (i.e. support for rules that expire is OPTIONAL). When a rule expires, the CPE MUST automatically terminate that rule and MUST automatically delete the corresponding {{object}} table entry. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description). </description>

  <parameter name="SourceInterface" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">&gt;{{object}} criterion. {{reference}} This specifies the ingress interface associated with the entry. It MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which Rules can be instantiated is a local matter to the CPE. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourceInterfaceExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the {{param|SourceInterface}} entry, if specified. If {{true}}, the rule matches all packets except those that match the {{param|SourceInterface}} entry, if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourceAllInterfaces" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">{{object}} criterion. This specifies that all ingress interfaces are associated with the entry. If {{true}}, the values of {{param|SourceInterface}} and {{param|SourceInterfaceExclude}} are ignored since all ingress interfaces are indicated. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestInterface" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="256" />
    <description source="TRx">&gt;{{object}} criterion. {{reference}} This specifies the egress interface associated with the entry. It MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which Rules can be instantiated is a local matter to the CPE. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestInterfaceExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the {{param|DestInterface}} entry, if specified. If {{true}}, the rule matches all packets except those that match the {{param|DestInterface}} entry, if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestAllInterfaces" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">{{object}} criterion. This specifies that all egress interfaces are associated with the entry. If {{true}}, the values of {{param|DestInterface}} and {{param|DestInterfaceExclude}} are ignored since all ingress interfaces are indicated. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="IPVersion" type="int" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="-1" minValue="-1" maxValue="15" />
    <description source="TRx">{{object}} criterion. IP Protocol Version (e.g. 4 for IPv4 and 6 for IPv6). A value of -1 indicates this criterion is not used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestIP" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="45" />
    <description source="TRx">[IP Address]{{object}} criterion. Destination IP address. {{empty}} indicates this criterion is not used for matching. Note that Firewall rules are applied after any {{object|###.NAT}} processing, so if NAT is enabled on the source interface this is always the translated address. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestMask" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="49" />
    <description source="TRx">[IP Prefix]Destination IP address mask, but represented as an IP routing prefix using CIDR notation {{bibref|RFC4632}} (e.g. 192.168.0.0/16 in IPv4, and 2001:db8:3210:11aa::/64 in IPv6). If not {{empty}}, only the indicated portion of the {{param|DestIP}} address is to be used for matching. {{empty}} indicates that the full {{param|DestIP}} address is to be used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestIPExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the (masked) {{param|DestIP}} entry, if specified. If {{true}}, the rule matches all packets except those that match the (masked) {{param|DestIP}} entry, if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourceIP" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="" maxLength="45" />
    <description source="TRx">[IP Address]{{object}} criterion. Source IP address. {{empty}} indicates this criterion is not used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourceMask" type="string" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="" maxLength="49" />
    <description source="TRx">[IP Prefix]Source IP address mask, but represented as an IP routing prefix using CIDR notation {{bibref|RFC4632}} (e.g. 192.168.0.0/16 in IPv4, and 2001:db8:3210:11aa::/64 in IPv6). If not {{empty}}, only the indicated portion of the {{param|SourceIP}} address is to be used for matching. {{empty}} indicates that the full {{param|SourceIP}} address is to be used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourceIPExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the (masked) {{param|SourceIP}} entry, if specified. If {{true}}, the rule matches all packets except those that match the (masked) {{param|SourceIP}} entry, if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="Protocol" type="int" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="-1" minValue="-1" maxValue="255" />
    <description source="TRx">{{object}} criterion. Protocol number. A value of -1 indicates this criterion is not used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="ProtocolExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the {{param|Protocol}} entry, if specified. If {{true}}, the rule matches all packets except those that match the {{param|Protocol}} entry, if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestPort" type="int" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="-1" minValue="-1" maxValue="65535" />
    <description source="TRx">{{object}} criterion. Destination port number. A value of -1 indicates this criterion is not used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestPortRangeMax" type="int" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="-1" minValue="-1" maxValue="65535" />
    <description source="TRx">{{object}} criterion. If specified, indicates the {{object}} criterion is to include the port range from {{param|SourcePort}} through {{param}} (inclusive). If specified, {{param}} MUST be greater than or equal to {{param|SourcePort}}. A value of -1 indicates that no port range is specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DestPortExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the {{param|SourcePort}} entry (or port range), if specified. If {{true}}, the rule matches all packets except those that match the {{param|SourcePort}} entry (or port range), if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourcePort" type="int" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="ReadWrite" defaultValue="-1" minValue="-1" maxValue="65535" />
    <description source="TRx">{{object}} criterion. Source port number. A value of -1 indicates this criterion is not used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourcePortRangeMax" type="int" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="-1" minValue="-1" maxValue="65535" />
    <description source="TRx">{{object}} criterion. If specified, indicates the {{object}} criterion is to include the port range from {{param|SourcePort}} through {{param}} (inclusive). If specified, {{param}} MUST be greater than or equal to {{param|SourcePort}}. A value of -1 indicates that no port range is specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="SourcePortExclude" type="boolean" specSource="TR181" profile="Device2_AdvancedFirewall:1" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the {{param|SourcePort}} entry (or port range), if specified. If {{true}}, the rule matches all packets except those that match the {{param|SourcePort}} entry (or port range), if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DSCP" type="int" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="-1" minValue="-1" maxValue="63" />
    <description source="TRx">{{object}} criterion. DiffServ codepoint (defined in {{bibref|RFC2474}}). If set to a Class Selector Codepoint (defined in {{bibref|RFC2474}}), all DSCP values that match the first 3 bits will be considered a valid match. A value of -1 indicates this criterion is not used for matching. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>

  <parameter name="DSCPExclude" type="boolean" specSource="TR181" profile="Unspecified" requirements="W" supportLevel="NotSupported" defaultValue="false" />
    <description source="TRx">If {{false}}, the rule matches only those packets that match the {{param|DSCP}} entry, if specified. If {{true}}, the rule matchess all packets except those that match the {{param|DSCP}} entry, if specified. This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).</description>


<vsaInfo>

<validstringarray name="AdvancedFirewallTypeValues" />
  <element>Stateless</element>
  <element>Stateful</element>

<validstringarray name="DhcpStatusValues" />
  <element>Init</element>
  <element>Selecting</element>
  <element>Requesting</element>
  <element>Rebinding</element>
  <element>Bound</element>
  <element>Renewing</element>

<validstringarray name="FirewallChainCreatorValues" />
  <element>Defaults</element>
  <element>PortMapping</element>
  <element>WANIPv6FirewallControl</element>
  <element>ACS</element>
  <element>UserInterface</element>
  <element>Other</element>

<validstringarray name="FirewallConfigValues" />
  <element>High</element>
  <element>Low</element>
  <element>Off</element>
  <element>Advanced</element>

<validstringarray name="FirewallDefaultPolicyValues" />
  <element>Drop</element>
  <element>Accept</element>
  <element>Reject</element>

<validstringarray name="FirewallRuleTargetValues" />
  <element>Drop</element>
  <element>Accept</element>
  <element>Reject</element>
  <element>Return</element>
  <element>TargetChain</element>

<validstringarray name="NatStatusValues" />
  <element>Disabled</element>
  <element>Enabled</element>
  <element>Enabled_PortMappingDisabled</element>
  <element>Error_Misconfigured</element>
  <element>Error</element>

<validstringarray name="VendorClassIdModeValues" />
  <element>Exact</element>
  <element>Prefix</element>
  <element>Suffix</element>
  <element>Substring</element>

<validstringarray name="dnsAnswerTypeValues" />
  <element>None</element>
  <element>Authoritative</element>
  <element>NonAuthoritative</element>

<validstringarray name="dnsServerOriginValues" />
  <element>DHCPv4</element>
  <element>DHCPv6</element>
  <element>RouterAdvertisement</element>
  <element>IPCP</element>
  <element>Static</element>
  <element>X_BROADCOM_COM_NAS</element>

<validstringarray name="dnsServiceDiscoveryStatusValues" />
  <element>LeaseActive</element>
  <element>GoodbyeReceived</element>
  <element>LeaseExpired</element>

<validstringarray name="ifOperStatusValues" />
  <element>Up</element>
  <element>Down</element>
  <element>Unknown</element>
  <element>Dormant</element>
  <element>NotPresent</element>
  <element>LowerLayerDown</element>
  <element>Error</element>

<validstringarray name="ipInterfaceTypeValues" />
  <element>Normal</element>
  <element>Loopback</element>
  <element>Tunnel</element>
  <element>Tunneled</element>

<validstringarray name="ipv4AddressOriginValues" />
  <element>DHCP</element>
  <element>IKEv2</element>
  <element>AutoIP</element>
  <element>IPCP</element>
  <element>Static</element>
  <element>X_BROADCOM_COM_NAS</element>

<validstringarray name="ipv4ForwardOriginValues" />
  <element>DHCPv4</element>
  <element>OSPF</element>
  <element>IPCP</element>
  <element>RIP</element>
  <element>Static</element>
  <element>X_BROADCOM_COM_NAS</element>

<validstringarray name="ipv4ServiceStatusValues" />
  <element>ServiceDown</element>
  <element>ServiceStarting</element>
  <element>ServiceUp</element>

<validstringarray name="ipv6AddrStatusValues" />
  <element>Preferred</element>
  <element>Deprecated</element>
  <element>Invalid</element>
  <element>Inaccessible </element>
  <element>Unknown</element>
  <element>Tentative</element>
  <element>Duplicate</element>
  <element>Optimistic</element>

<validstringarray name="ipv6ForwardOriginValues" />
  <element>DHCPv6</element>
  <element>OSPF</element>
  <element>RA</element>
  <element>RIPng</element>
  <element>Static</element>
  <element>X_BROADCOM_COM_NAS</element>

<validstringarray name="ipv6OriginValues" />
  <element>AutoConfigured</element>
  <element>DHCPv6</element>
  <element>IKEv2</element>
  <element>WellKnown</element>
  <element>Static</element>
  <element>X_BROADCOM_COM_NAS</element>

<validstringarray name="ipv6PrefixOriginValues" />
  <element>AutoConfigured</element>
  <element>PrefixDelegation</element>
  <element>RouterAdvertisement</element>
  <element>WellKnown</element>
  <element>Static</element>
  <element>Child</element>
  <element>X_BROADCOM_COM_NAS</element>

<validstringarray name="ipv6PrefixStaticValues" />
  <element>Static</element>
  <element>Inapplicable</element>
  <element>PrefixDelegation</element>
  <element>Child</element>

<validstringarray name="ipv6PrefixStatusValues" />
  <element>Preferred</element>
  <element>Deprecated</element>
  <element>Invalid</element>
  <element>Inaccessible</element>
  <element>Unknown</element>

<validstringarray name="ipv6ServiceStatusValues" />
  <element>ServiceDown</element>
  <element>ServiceStarting</element>
  <element>ServiceUp</element>

<validstringarray name="nslookupDiagResultValues" />
  <element>Success</element>
  <element>Error_DNSServerNotAvailable</element>
  <element>Error_HostNameNotResolved</element>
  <element>Error_Timeout</element>
  <element>Error_Other</element>

<validstringarray name="nslookupDiagStateValues" />
  <element>None</element>
  <element>Requested</element>
  <element>Complete</element>
  <element>Error_DNSServerNotResolved</element>
  <element>Error_Internal</element>
  <element>Error_Other</element>

<validstringarray name="raPriorityValues" />
  <element>Low</element>
  <element>Medium</element>
  <element>High</element>

<validstringarray name="ripSupportedModesValues" prefix="RIPMODE" />
  <element>Send</element>
  <element>Receive</element>
  <element>Both</element>

<validstringarray name="routeInfoIntfStatusValues" />
  <element>ForwardingEntryCreated</element>
  <element>NoForwardingEntry</element>
  <element>Error</element>

<validstringarray name="status3eValues" />
  <element>Disabled</element>
  <element>Enabled</element>
  <element>Error</element>

<validstringarray name="status4eValues" />
  <element>Disabled</element>
  <element>Enabled</element>
  <element>Error_Misconfigured</element>
  <element>Error</element>

<validstringarray name="tcpConnStatusValues" />
  <element>LISTEN</element>
  <element>ESTABLISHED</element>

<validstringarray name="transportProtocolValues" />
  <element>TCP</element>
  <element>UDP</element>
  <element>TCP or UDP</element>

</vsaInfo>



<profileInfo>
<profile name="Device2_Baseline:1" /> 
<profile name="Device2_Baseline:2" /> 
<profile name="Device2_Baseline:3" /> 
<profile name="Device2_Hosts:1" /> 
<profile name="Device2_Hosts:2" /> 
<profile name="Device2_QoS:1" /> 
<profile name="Device2_QoS:2" /> 
<profile name="Device2_Routing:1" /> 
<profile name="Device2_Routing:2" /> 
<profile name="Device2_IPv6Routing:1" /> 
<profile name="Device2_DNSRelay:1" /> 
<profile name="Device2_DNSServiceDiscovery:1" /> 
<profile name="Device2_NSLookupDiag:1" /> 
<profile name="Device2_NAT:1" /> 
<profile name="Device2_DHCPv4Client:1" /> 
<profile name="Device2_DHCPv4Server:1" /> 
<profile name="Device2_DHCPv4CondServing:1" /> 
<profile name="Device2_DHCPv4Relay:1" /> 
<profile name="Device2_DHCPv4ServerClientInfo:1" /> 
<profile name="Device2_SimpleFirewall:1" /> 
<profile name="Device2_AdvancedFirewall:1" /> 
<profile name="Device2_IPInterface:1" /> 
<profile name="Device2_IPInterface:2" /> 
<profile name="Device2_IPv6Interface:1" /> 
<profile name="X_BROADCOM_COM_DEV2_IPv6:1" /> 
<profile name="X_BROADCOM_COM_GponWAN:1" /> 
<profile name="X_BROADCOM_COM_IGMP:1" /> 
<profile name="X_BROADCOM_COM_MLD:1" /> 
<profile name="Unspecified" /> 
</profileInfo>


</xmlMandatorySingleRootNode>
