#include "6756.dtsi"
#include "../bcm_voice.dtsi"

/ {
    model = "RT_AXE7800";
	memory_controller {
		memcfg = <(BP_DDR_TYPE_DDR4		| \
			/* CUSTOM speed 1026MHz */
			BP_DDR_SPEED_CUSTOM_1		| \
			BP_DDR_TOTAL_SIZE_512MB		| \
			BP_DDR_DEVICE_WIDTH_16		| \
			BP_DDR_TOTAL_WIDTH_16BIT	| \
			BP_DDR_TEMP_EXTENDED_ASR	| \
			BP_DDR_6756_DEFAULT)>;
	};
#if 0
	buttons {
		compatible = "brcm,buttons";
		reset_button {
			ext_irq = <&bca_extintr 9 BCA_GPIO_ACTIVE_LOW (BCA_EXTINTR_TYPE_LOW_LEVEL | BCA_EXTINTR_TYPE_SENSE_EDGE)>;
			press {
				print = "Button Press -- Hold for 5s to do restore to default";
			};
			hold {
				rst_to_dflt = <5>;
			};
			release {
				reset = <0>;
			};	
		};
		ses_button {
			ext_irq = <&bca_extintr 4 BCA_GPIO_ACTIVE_LOW (BCA_EXTINTR_TYPE_LOW_LEVEL | BCA_EXTINTR_TYPE_SENSE_EDGE)>;
			release {
				ses_short_period = <0>;
				ses_long_period = <3>;
			};
		};
	};
#endif
	switch_sf2_ext:0 {
	};

};

&sysport {
    ethsw_ext = <&switch_sf2_ext>;
};

&mdio_sf2 {
	phy_ge:8 {
		status = "okay";
	};

	phy_m2m:m2m {
		compatible = "brcm,bcaphy";
		phy-type = "MAC2MAC";
		reg = <1>;
		status = "okay";
		phy-extswitch;
	};

	/* PHYs on external SF2 switch */
	sf2_gphy0:0 {
		compatible = "brcm,bcaphy";
		phy-type = "EGPHY";
		reg = <0>;
		status = "okay";
	};
	sf2_gphy1:1 {
		compatible = "brcm,bcaphy";
		phy-type = "EGPHY";
		reg = <1>;
		status = "okay";
	};
	sf2_gphy2:2 {
		compatible = "brcm,bcaphy";
		phy-type = "EGPHY";
		reg = <2>;
		status = "okay";
	};

	phy_cascade0:cascade0 {
		phy-type = "GPY211";
		reg = <25>;
		status = "okay";
		phy-external;
	};
	phy_serdes0:serdes0 {
		phy-handle = <&phy_cascade0>;
		status = "okay";
	};
};

&switch_sf2_ext {				/* linux/uboot: external sf2 */
	unit = <1>;
	sw-type = "SF2_SW";

	compatible = "brcm,bcmbca-extsw";
	reg-names ="parent-rgmii-ctrl",
	           "parent-gpio-pad-ctrl";
	reg = <0x804800ec 0x44>,
	      <0xff800500 0x78>;
	switch-reset = <&gpioc 10 GPIO_ACTIVE_LOW>;

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		sf2_port0@0 {
			phy-handle = <&sf2_gphy0>;
			reg = <0>;
			mac-type = "SF2MAC";
			phy-mode = "gmii";
			gmii-direct;
			status = "okay";
		};
		sf2_port1@1 {
			phy-handle = <&sf2_gphy1>;
			reg = <1>;
			mac-type = "SF2MAC";
			phy-mode = "gmii";
			gmii-direct;
			status = "okay";
		};
		sf2_port2@2 {
			phy-handle = <&sf2_gphy2>;
			reg = <2>;
			mac-type = "SF2MAC";
			phy-mode = "gmii";
			gmii-direct;
			status = "okay";
		};
		sf2_port8@8 {
			management;		/* sf2_ext.p8 <--> root.p1 */
			reg = <8>;
			mac-type = "SF2MAC";
			shrink-ipg;
			phy-mode = "gmii";
			gmii-direct;
			status = "okay";
		};
	};
};

&switch0 {					/* linux/uboot: internal sf2 */
	pinctrl-names = "default", "rgmii"; 
	pinctrl-0 = <&a_rgmii_mdc_pin_68 &a_rgmii_mdio_pin_69 &rgmii_pins>; 
	pinctrl-1 = <&rgmii_pins>; 

	ports {
		port0@0 {
			phy-handle = <&phy_ge>;
			status = "okay";
			network-leds = <&led0>;
			label = "eth1";
		};
		port1@1 {
			phy-handle = <&phy_m2m>;
			mii-pinctrl-state = "rgmii";
			phy-mode = "rgmii";
			rgmii-3p3v;
			rx-delay;
			tx-delay;
			link = <&switch_sf2_ext>;	/* root.p1 <--> sf2_ext.p8 */
			shrink-ipg;
			status = "okay";
		};
		port5@5 {
			phy-handle = <&phy_serdes0>;
			status = "okay";
			label = "eth0";
		};
	};
};

&usb_ctrl {
	pinctrl-names="default";
	pinctrl-0 = <&usb0_pwr_pins>;
	pwron-bias-pull-up;
	status = "okay";
	xhci-enable;
};

&usb0_xhci {
	status = "okay";
};

&usb0_ehci {
	status = "okay";
};

&usb0_ohci {
	status = "okay";
};

&legacy_leds {
	wl0-led = <&led5>;
	wl1-led = <&led4>;
};

&led_ctrl {
	/* P4_LINKACT */
	led0:port_0-led-1 {
		active_low;
		link = <LED_SPEED_GBE>;
		activity = <LED_SPEED_GBE>;
		pinctrl-0=<&a_per_led_03_pin_3>;
		status = "okay";
	};

	/* P4_LINKACT_GPIO */
	led1:led_gpio_3 {
		compatible = "brcm,gpio-led";
		software_led;
		pin = <3>;
		active_low;
	};

	/* P4_LINKACT_R */
	led2:led_gpio_5 {
		compatible = "brcm,gpio-led";
		software_led;
		pin = <5>;
		active_low;
	};

	/* P5_LINKACT_R */
	led3:led_gpio_31 {
		compatible = "brcm,gpio-led";
		software_led;
		pin = <31>;
		active_low;
		init_high;
	};

	/* WLAN_6G_ACT */
	led4:led_gpio_7 {
		compatible = "brcm,gpio-led";
		software_led;
		pin = <7>;
		active_high;
		init_low;
	};

	/* WLAN_2G_ACT */
	led5:led_gpio_36 {
		compatible = "brcm,gpio-led";
		software_led;
		pin = <36>;
		active_high;
		init_low;
	};

	/* GPIO_29: POWER */
	led6:led_gpio_29 {
		compatible = "brcm,gpio-led";
		software_led;
		pin = <29>;
		active_low;
		init_high;
	};
};

/* For spi slave */
&pincontroller {
	pinctrl-names = "default";
	pinctrl-0 = <&spis_clk_pin_18 &spis_ss_b_pin_19 &spis_miso_pin_20 &spis_mosi_pin_21>;
};
