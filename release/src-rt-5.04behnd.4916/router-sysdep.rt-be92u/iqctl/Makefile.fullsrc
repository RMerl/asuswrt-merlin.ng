#
# Makefile for Packet Flow Cache Control Utility.
# Program Executable: iqctl, iq
# Set custom variables in this first section
#
EXE = iqctl
OBJS = iqctl.o iqctl_cmds.o
LIBS = -liqctl

PROGRAM_NAME_ALT:=iq

all dynamic install: sanity_check $(EXE) generic_exe_install
	ln -sf $(EXE) $(INSTALL_DIR)/bin/$(PROGRAM_NAME_ALT)

clean: generic_clean
	rm -f $(OBJS)
	rm -f $(INSTALL_DIR)/bin/$(EXE)
	rm -f $(INSTALL_DIR)/bin/$(PROGRAM_NAME_ALT)

binaryonly_dist_clean: clean generic_binaryonly_dist_clean
	rm -f Makefile.fullsrc


#
# Set our CommEngine directory (by splitting the pwd into two words
# at /userspace and taking the first word only).
# Then include the common defines under CommEngine.
#
# CURR_DIR := $(shell pwd)
# BUILD_DIR:=$(subst /userspace, /userspace,$(CURR_DIR))
# BUILD_DIR:=$(word 1, $(BUILD_DIR))

BUILD_DIR:=$(HND_SRC)

include $(BUILD_DIR)/make.common

#
# Private apps and libs are allowed to include header files from the
# private and public directories.
#
# WARNING: Do not modify this section unless you understand the
# license implications of what you are doing.
#
ALLOWED_INCLUDE_PATHS := -I.\
                         -I$(BUILD_DIR)/userspace/public/include  \
                         -I$(BUILD_DIR)/userspace/public/include/$(OALDIR) \
                         -I$(BUILD_DIR)/userspace/private/include  \
                         -I$(BUILD_DIR)/userspace/private/include/$(OALDIR) \
                         -I$(INC_BRCMDRIVER_PUB_PATH)/$(BRCM_BOARD) \
                         -I$(INC_BRCMDRIVER_PRIV_PATH)/$(BRCM_BOARD) \
                         -I$(INC_BRCMSHARED_PUB_PATH)/$(BRCM_BOARD) \
                         -I$(INC_BRCMSHARED_PRIV_PATH)/$(BRCM_BOARD)


#
# Private apps and libs are allowed to link with libraries from the
# private and public directories.
#
# WARNING: Do not modify this section unless you understand the
# license implications of what you are doing.
#
ALLOWED_LIB_DIRS := /lib:/lib/private:/lib/public


#
# Implicit rule will make the .c into a .o
# Implicit rule is $(CC) -c $(CPPFLAGS) $(CFLAGS)
# See Section 10.2 of Gnu Make manual
# 
$(EXE): $(OBJS)
	$(CC) $(BCM_LD_FLAGS) -o $@ $(OBJS) $(CMS_RPATH_OPTION) $(CMS_LIB_PATH) $(LIBS)


#
# Not clear if this static build option is even supported anymore.
#
ifeq ($(strip $(BUILD_IQCTL)), static)
CFLAGS += -DBUILD_STATIC
endif

static: $(PROGRAM_NAME).a

$(PROGRAM_NAME).a: $(PROGRAM_FILES)
	$(AR) rcs $(PROGRAM_NAME).a $^


#
# Include the rule for making dependency files.
# The '-' in front of the second include suppresses
# error messages when make cannot find the .d files.
# It will just regenerate them.
# See Section 4.14 of Gnu Make.
#

include $(BUILD_DIR)/make.deprules

-include $(OBJS:.o=.d)
