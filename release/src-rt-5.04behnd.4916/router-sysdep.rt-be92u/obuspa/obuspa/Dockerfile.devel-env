#
# file Dockerfile.devel-env
#
# Developer docker image with extras tools to compile and remote debugging
#
# Based on obuspa:build-env stage build from Dockerfile.
#
# Execution lines:
# 1) Create the build environment image
# > docker build -f Dockerfile -t obuspa:build-env --target build-env .
# 2) Create the development image
# > docker build -f Dockerfile.devel-env -t obuspa:devel-env --target devel-env .
#
FROM obuspa:build-env AS devel-env

# Install tools and dependencies for remote dev
RUN apt-get update && apt-get -y install \
        build-essential \
        gcc \
        g++ \
        clang \
        cmake \
        rsync \
        tar \
        python3 \
        ninja-build \
        dos2unix \
        gdb \
        gdb-multiarch \
        openssh-server \
    && apt-get clean

# Set-up SSH for remote debug
EXPOSE 22/tcp
RUN useradd -m user && yes password | passwd user
RUN service ssh start
CMD ["/usr/sbin/sshd","-D"]

FROM devel-env AS devel-runner

ENV MAKE_JOBS=8
ENV OBUSPA_ARGS="-v4"

# Copy in all of the code
# Then compile, as root.
COPY . /obuspa/
RUN cd /obuspa/ && \
    cmake -B build_folder -S . && \
    cmake --build build_folder -j${MAKE_JOBS} && \
    cmake --install build_folder

# Then delete the code
# that's no longer needed
RUN rm -rf /obuspa

# Run obuspa with args expanded
CMD obuspa ${OBUSPA_ARGS}
