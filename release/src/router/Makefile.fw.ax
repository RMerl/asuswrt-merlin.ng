#
# Broadcom Linux Router WL firmware Makefile
#
# Copyright (C) 2020, Broadcom. All Rights Reserved.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
# OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#
# <<Broadcom-WL-IPTag/Open:>>
#
# $Id: $
#

PCIEFD_EMBED_HEADER_TEMPLATE	:= $(SRCBASE_DHD)/shared/rtecdc_router.h.in
PCIEFD_EMBED_HEADER		:= $(SRCBASE_DHD)/shared/rtecdc_router.h
PCIEFD_IMAGE_DIR		:= $(SRCBASE_DHD)/dongle/bin

# All firmware targets must be defined here
ifeq ($(BUILD_43684C0),y)
    PCIEFD_TARGETS_LIST		:= 43684c0
else
    PCIEFD_TARGETS_LIST		:= 43684b0
endif
ifneq ($(CONFIG_STBAP),y)
#ifneq ($(CONFIG_AIRIQ),)
#PCIEFD_TARGETS_LIST            += 4363c0
#endif
endif # CONFIG_STBAP
#PCIEFD_TARGETS_LIST		+= 43602a1
#PCIEFD_TARGETS_LIST		+= 43602a3

#ifeq ($(CONFIG_DHDAP_RAM_BUILD),y)
#        PCIEFD_TARGETS_LIST	+= 4366c0_ram
#else
#        PCIEFD_TARGETS_LIST	+= 4366c0
#endif

STBTARGET := ""
ifeq ($(CONFIG_STBAP),y)
STBTARGET := "-stb-hdmaaddr64"
endif # CONFIG_STBAP

# obj-pciefd expands to e.g. '43684b0-obj 4363c0-obj 43602a3-obj 4366c0-obj'
obj-pciefd			:= $(patsubst %,%-obj,$(PCIEFD_TARGETS_LIST))
clean-pciefd			:= $(patsubst %,%-clean,$(PCIEFD_TARGETS_LIST))
version-pciefd			:= $(patsubst %,%-version,$(PCIEFD_TARGETS_LIST))
ifeq ($(CONFIG_STBAP),y)
install-pciefd			:= $(patsubst %,%,$(PCIEFD_TARGETS_LIST))
endif # CONFIG_STBAP

# ---------------------
# 43684b0 target
FW_43684b0_SRCBASE		:= $(abspath $(SRCBASE)/../../43684/src)
FW_43684b0_CHIPID		:= 43684b0
FW_43684b0_BUILD_PREFIX		:= $(FW_43684b0_CHIPID)-ram
FW_43684b0_MAKE_PATH		:= $(FW_43684b0_SRCBASE)/dongle/make/wl
FW_43684b0_BUILD_PATH		:= $(FW_43684b0_SRCBASE)/../build/dongle/$(FW_43684b0_BUILD_PREFIX)
FW_43684b0_OS_PATH		:= $(FW_43684b0_SRCBASE)/../components/threadx
ifeq ($(USE_GCC_8_2),1)
FW_43684b0_COMPILER		:= arm-buildroot-linux-gnueabi
else
FW_43684b0_COMPILER		:= arm-none-eabi
endif

fw_options :=
ifeq ($(CONFIG_STBAP),y)
	fw_options := $(fw_options)_stb
else
	ifeq ($(CONFIG_AIRIQ),y)
		ifneq ($(WLTEST),1)
			fw_options := $(fw_options)_airiq
		endif # WLTEST
	endif # CONFIG_AIRIQ
endif # CONFIG_STBAP

ifeq ($(WLTEST),1)
	FW_43684b0_TARGET	?= config_pcie_fdap_mfgtest$(fw_options)
else
	FW_43684b0_TARGET	?= config_pcie_fdap_release$(fw_options)
endif

# ---------------------
# 43684c0 target
FW_43684c0_SRCBASE		:= $(abspath $(SRCBASE)/../../43684/src)
FW_43684c0_CHIPID		:= 43684c0
FW_43684c0_BUILD_PREFIX		:= $(FW_43684c0_CHIPID)-ram
FW_43684c0_MAKE_PATH		:= $(FW_43684c0_SRCBASE)/dongle/make/wl
FW_43684c0_BUILD_PATH		:= $(FW_43684c0_SRCBASE)/../build/dongle/$(FW_43684c0_BUILD_PREFIX)
FW_43684c0_OS_PATH		:= $(FW_43684c0_SRCBASE)/../components/threadx
ifeq ($(USE_GCC_8_2),1)
FW_43684c0_COMPILER		:= arm-buildroot-linux-gnueabi
else
FW_43684c0_COMPILER		:= arm-none-eabi
endif

fw_options :=
ifeq ($(CONFIG_STBAP),y)
	fw_options := $(fw_options)_stb
else
	ifeq ($(CONFIG_AIRIQ),y)
		ifneq ($(WLTEST),1)
			fw_options := $(fw_options)_airiq
		endif # WLTEST
	endif # CONFIG_AIRIQ
endif # CONFIG_STBAP

ifeq ($(WLTEST),1)
	FW_43684c0_TARGET	?= config_pcie_fdap_mfgtest$(fw_options)
else
	FW_43684c0_TARGET	?= config_pcie_fdap_release$(fw_options)
endif

# ---------------------
# 43602a1-roml target
FW_43602a1_SRCBASE		:= $(abspath $(SRCBASE)/../../43602/src)
FW_43602a1_CHIPID		:= 43602a1
FW_43602a1_BUILD_PREFIX		:= $(FW_43602a1_CHIPID)-roml
FW_43602a1_MAKE_PATH		:= $(FW_43602a1_SRCBASE)/dongle/rte/wl
FW_43602a1_BUILD_PATH		:= $(FW_43602a1_MAKE_PATH)/builds/$(FW_43602a1_BUILD_PREFIX)
FW_43602a1_OS_PATH		:= $(FW_43602a1_SRCBASE)/hndrte
FW_43602a1_COMPILER		:= arm-none-eabi

ifeq ($(WLTEST),1)
    FW_43602a1_TARGET		:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-ringer-dmaindex16
else
        FW_43602a1_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-ringer-dmaindex16-bssload-dhdhdr
endif

# ---------------------
# 43602a3-roml target
FW_43602a3_SRCBASE		:= $(abspath $(SRCBASE)/../../43602/src)
FW_43602a3_CHIPID		:= 43602a3
FW_43602a3_BUILD_PREFIX		:= $(FW_43602a3_CHIPID)-roml
FW_43602a3_MAKE_PATH		:= $(FW_43602a3_SRCBASE)/dongle/rte/wl
FW_43602a3_BUILD_PATH		:= $(FW_43602a3_MAKE_PATH)/builds/$(FW_43602a3_BUILD_PREFIX)
FW_43602a3_OS_PATH		:= $(FW_43602a3_SRCBASE)/hndrte
FW_43602a3_COMPILER		:= arm-none-eabi

ifeq ($(WLTEST),1)
    FW_43602a3_TARGET		:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-ringer-dmaindex16-assoc_lt-fbt-sae
else
ifneq ($(CONFIG_STBAP),y)
        FW_43602a3_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-ringer-dmaindex16-bssload-wnm-splitassoc-dbwsw-stamon-acksupr-authrmf-dhdhdr-assoc_lt-fbt-sae
else
        FW_43602a3_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-ringer-dmaindex16-bssload-wnm-splitassoc-dbwsw-stamon-acksupr-authrmf-assoc_lt-fbt-sae
endif # CONFIG_STBAP
endif

# ---------------------
# 4366c0_ram target  - Built from 43684/src (Kudu)
FW_4366c0_ram_SRCBASE		:= $(abspath $(SRCBASE)/../../43684/src)
FW_4366c0_ram_CHIPID		:= 4366c0
FW_4366c0_ram_BUILD_PREFIX	:= $(FW_4366c0_ram_CHIPID)-ram
FW_4366c0_ram_MAKE_PATH		:= $(FW_4366c0_ram_SRCBASE)/dongle/make/wl
FW_4366c0_ram_BUILD_PATH	:= $(FW_4366c0_ram_SRCBASE)/../build/dongle/$(FW_4366c0_ram_BUILD_PREFIX)
FW_4366c0_ram_OS_PATH		:= $(FW_4366c0_ram_SRCBASE)/../components/threadx
FW_4366c0_ram_COMPILER		:= arm-none-eabi
ifeq ($(WLTEST),1)
    FW_4366c0_ram_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-dmaindex16-proptxstatus-11nprop-chanim-assert-vasip-cfp-acwi$(STBTARGET)
else
        FW_4366c0_ram_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-proptxstatus-11nprop-ringer-dmaindex16-bgdfs-chanim-assert-vasip-cfp-acwi$(STBTARGET)
endif

# ---------------------
# 4366c0-roml target
FW_4366c0_SRCBASE		:= $(abspath $(SRCBASE)/../../4365/src)
FW_4366c0_CHIPID		:= 4366c0
FW_4366c0_BUILD_PREFIX		:= $(FW_4366c0_CHIPID)-roml
FW_4366c0_MAKE_PATH		:= $(FW_4366c0_SRCBASE)/dongle/make/wl
FW_4366c0_BUILD_PATH		:= $(FW_4366c0_SRCBASE)/../build/dongle/$(FW_4366c0_BUILD_PREFIX)
FW_4366c0_OS_PATH		:= $(FW_4366c0_SRCBASE)/../components/threadx
FW_4366c0_COMPILER		:= arm-none-eabi

ifeq ($(WLTEST),1)
    FW_4366c0_TARGET		:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-dbgam-dbgams-ringer-dmaindex16-bgdfs-hostpmac-murx-splitassoc-hostmemucode-dyn160-fbt-assoc_lt-ccamesh-mbo-sae$(STBTARGET)
else
ifneq ($(CONFIG_STBAP),y)
        FW_4366c0_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-wnm-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-dbwsw-ringer-dmaindex16-bgdfs-stamon-hostpmac-murx-splitassoc-hostmemucode-dyn160-dhdhdr-fbt-htxhdr-amsdufrag-assoc_lt-ccamesh-mbo-sae
else
        FW_4366c0_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-wnm-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-dbwsw-ringer-dmaindex16-bgdfs-stamon-hostpmac-murx-splitassoc-dyn160-fbt-assoc_lt-ccamesh-mbo-sae$(STBTARGET)
endif # CONFIG_STBAP
endif

# ---------------------
# 4363c0-roml target
FW_4363c0_SRCBASE		:= $(abspath $(SRCBASE)/../../4365/src)
FW_4363c0_CHIPID		:= 4363c0
FW_4363c0_BUILD_PREFIX		:= $(FW_4363c0_CHIPID)-roml
FW_4363c0_MAKE_PATH		:= $(FW_4363c0_SRCBASE)/dongle/make/wl
FW_4363c0_BUILD_PATH		:= $(FW_4363c0_SRCBASE)/../build/dongle/$(FW_4363c0_BUILD_PREFIX)
FW_4363c0_OS_PATH		:= $(FW_4363c0_SRCBASE)/../components/threadx
FW_4363c0_COMPILER		:= arm-none-eabi

ifeq ($(WLTEST),1)
    FW_4363c0_TARGET		:= pcie-ag-splitrx-fdap-mbss-mfgtest-seqcmds-phydbg-phydump-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-dbgam-dbgams-ringer-dmaindex16-bgdfs-hostpmac-splitassoc-hostmemucode-fbt-assoc_lt-airiq-mbo
else
        FW_4363c0_TARGET	:= pcie-ag-splitrx-fdap-mbss-mfp-wnm-osen-wl11k-wl11u-txbf-pktctx-amsdutx-ampduretry-chkd2hdma-proptxstatus-11nprop-obss-dbwsw-ringer-dmaindex16-bgdfs-stamon-hostpmac-splitassoc-hostmemucode-dhdhdr-fbt-htxhdr-amsdufrag-assoc_lt-airiq-mbo
endif

# ---------------------
# All rules start here
.PHONY: $(obj-pciefd)

# target specific override to remove all CFLAGS that are inherited from router Make
$(obj-pciefd): CFLAGS=

# obj-pciefd expands to e.g. '43684b0-obj 43684c0-obj 4363c0-obj 43602a3-obj 4366c0-obj'.
# The below rule is executed for each of these targets, so e.g. for '43684b0-obj'.
# On each invocation of this rule, it builds one dongle firmware image and
# copies it into a DHD directory. This rule does *not* build the DHD itself.
$(obj-pciefd):
	@# R_CHIP expands to e.g. '43684b0'
	@# FW_$(R_CHIP)_OS_PATH expands to e.g. '.../43684/components/threadx'
	@#
	$(eval R_CHIP := $(patsubst %-obj,%,$@))
	$(eval COMPILER := $(FW_$(R_CHIP)_COMPILER))
	@# The following snippet will generate a file named '.tcchked' in the respective firmware build directory using the phony target tcchk as in
	@#   'make ... -C .../43684/src/dongle/make/wl 43684b0-ram/config_pcie_fdap_internal/tcchk'
	@#
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ] && [ -d $(FW_$(R_CHIP)_OS_PATH) ]; then \
	if [ ! -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/.tcchked ]; then \
		if [ "$(findstring threadx,$(FW_$(R_CHIP)_OS_PATH))" = "threadx" ]; then \
			$(MAKE) CLM_BLOBS="$(R_CLM_BLOBS)" CROSS_COMPILE=$(COMPILER) -C $(FW_$(R_CHIP)_MAKE_PATH) $(FW_$(R_CHIP)_BUILD_PREFIX)/$(FW_$(R_CHIP)_TARGET)/tcchk TCPATHCHK=0; \
		else \
			install -d $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET); \
			touch $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/.tcchked; \
		fi \
	fi \
	fi

	@# FW_$(R_CHIP)_SRCBASE expands to e.g. '.../43684/src'
	@# FW_$(R_CHIP)_TARGET expands to e.g. 'config_pcie_fdap_internal'
	@# PCIEFD_IMAGE_DIR expands to e.g. '.../sys/src/dongle/bin'
	@# PCIEFD_EMBED_HEADER expands to e.g. '.../sys/src/shared/rtecdc_router.h'
	@# SRCBASE_DHD expands to e.g. '.../sys/src'
	@# FW_$(R_CHIP)_BUILD_PATH expands to e.g. '.../43684/build/dongle/43684b0-ram'

	@# The following snippet builds the firmware for a single chip
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ]; then \
	if [ -d $(FW_$(R_CHIP)_OS_PATH) ] && [ -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/.tcchked ]; then \
		if [ -d $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt ]; then \
			if [ ! -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/tx_thread_initialize.o ]; then \
				cp -rpf $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt/* $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET); \
			fi \
		fi && \
		if [ -f $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt/avs.o ]; then \
			cp -u $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt/avs.o $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET); \
		fi && \
		$(MAKE) CROSS_COMPILE=$(COMPILER) -C $(FW_$(R_CHIP)_MAKE_PATH) $(FW_$(R_CHIP)_BUILD_PREFIX)/$(FW_$(R_CHIP)_TARGET) && \
		if [ -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/rtecdc_$(FW_$(R_CHIP)_CHIPID).h ]; then \
			mkdir -p $(PCIEFD_IMAGE_DIR)/$(FW_$(R_CHIP)_CHIPID) && \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/rtecdc.bin $(PCIEFD_IMAGE_DIR)/$(FW_$(R_CHIP)_CHIPID) && \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/rtecdc_$(FW_$(R_CHIP)_CHIPID).h $(SRCBASE_DHD)/shared/ && \
			echo "#include <rtecdc_$(FW_$(R_CHIP)_CHIPID).h>" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID) && \
			echo "#define DLIMAGE_$(FW_$(R_CHIP)_CHIPID)" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID); \
		fi && \
		if [ -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data.c ]; then \
			if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src ]; then \
				cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data.c $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src/wlc_clm_data.c.GEN; \
			else \
				cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data.c $(FW_$(R_CHIP)_SRCBASE)/../components/clm-api/src/wlc_clm_data.c.GEN; \
			fi \
		fi && \
		if [ -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_inc.c ]; then \
			if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src ]; then \
				cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_inc.c $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src/wlc_clm_data_inc.c.GEN; \
			else \
				cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_inc.c $(FW_$(R_CHIP)_SRCBASE)/../components/clm-api/src/wlc_clm_data_inc.c.GEN; \
			fi \
		fi && \
		if [ -e $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_$(R_CHIP)_inc.c ]; then \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/wlc_clm_data_$(R_CHIP)_inc.c $(FW_$(R_CHIP)_SRCBASE)/wl/clm/src/wlc_clm_data_$(R_CHIP)_inc.c.GEN; \
		fi && \
		if [ ! -d $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt ]; then \
			(cd $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET) && find * \( -name "tx_*.*" -o -name "txe_*.*" \) | cpio -pdm $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt); \
		fi && \
		if [ -f $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/avs.o ]; then \
			cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/avs.o $(FW_$(R_CHIP)_BUILD_PATH)/.prebuilt; \
		fi \
		else \
		if [ -e $(SRCBASE_DHD)/shared/rtecdc_$(FW_$(R_CHIP)_CHIPID).h ]; then \
			echo "#include <rtecdc_$(FW_$(R_CHIP)_CHIPID).h>" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID) && \
			echo "#define DLIMAGE_$(FW_$(R_CHIP)_CHIPID)" >> $(PCIEFD_EMBED_HEADER).tmp.$(FW_$(R_CHIP)_CHIPID); \
		fi \
	fi \
	fi

.PHONY: $(clean-pciefd)

$(clean-pciefd): CFLAGS=

# $(clean-pciefd) expands to e.g. '43684b0-clean 4363c0-clean 43602a3-clean 4366c0-clean'
$(clean-pciefd):
	$(eval R_CHIP := $(patsubst %-clean,%,$@))
	@# FW_$(R_CHIP)_MAKE_PATH expands to e.g. '.../43684/src/dongle/make/wl'
	@# FW_$(R_CHIP)_BUILD_PREFIX expands to e.g. '43684b0-ram'
	@# FW_$(R_CHIP)_TARGET expands to e.g. 'config_pcie_fdap_internal'
	@# below snippet executes e.g. 'make ... -C 43684/src/dongle/make/wl 43684b0-ram/config_pcie_fdap_internal/clean'
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ]; then \
		if [ -d $(FW_$(R_CHIP)_OS_PATH) ]; then \
			$(MAKE) CROSS_COMPILE=$(COMPILER) -C $(FW_$(R_CHIP)_MAKE_PATH) $(FW_$(R_CHIP)_BUILD_PREFIX)/$(FW_$(R_CHIP)_TARGET)/clean; \
			$(MAKE) -C $(FW_$(R_CHIP)_SRCBASE)/include ; \
		fi \
	fi

.PHONY: $(version-pciefd)

$(version-pciefd): CFLAGS=
$(version-pciefd):
	$(eval R_CHIP := $(patsubst %-version,%,$@))
	@if [ -d $(FW_$(R_CHIP)_SRCBASE)/wl/sys ]; then \
		if [ -d $(FW_$(R_CHIP)_OS_PATH) ]; then \
			$(MAKE) -C $(FW_$(R_CHIP)_SRCBASE)/include REUSE_VERSION=1; \
		fi \
	fi

pciefd-cleangen:
	@if [ -d $(FW_$(lastword $(PCIEFD_TARGETS_LIST))_SRCBASE)/wl/sys ]; then \
		$(RM) -rf  $(PCIEFD_IMAGE_DIR)/*.bin; \
	fi

ifeq ($(ALREADY_HAVE_RTECDC),)
pciefd: pciefd-cleangen $(obj-pciefd)
	@# PCIEFD_EMBED_HEADER expands to '.../dhd/src/shared/rtecdc_router.h'
	@#for i in $(wildcard $(PCIEFD_EMBED_HEADER).tmp.*) ; do \
	#	cat $${i} >> $(PCIEFD_EMBED_HEADER); \
	#	$(RM) -f $${i}; \
        #done
	@$(RM) $(PCIEFD_EMBED_HEADER)
	@$(RM) $(PCIEFD_EMBED_HEADER).tmp.*
	@cp $(PCIEFD_EMBED_HEADER_TEMPLATE) $(PCIEFD_EMBED_HEADER)
	@echo "#include <rtecdc_$(FW_$(R_CHIP)_CHIPID).h>" >> $(PCIEFD_EMBED_HEADER)
	@echo "#define DLIMAGE_$(FW_$(R_CHIP)_CHIPID)" >> $(PCIEFD_EMBED_HEADER)
else
pciefd:
	@echo "Copy $(ALREADY_HAVE_RTECDC) to $(PCIEFD_IMAGE_DIR)"
	@rm -rf $(PCIEFD_IMAGE_DIR)/*.bin
	cp -rp $(ALREADY_HAVE_RTECDC) $(PCIEFD_IMAGE_DIR)
endif

pciefd-clean: pciefd-cleangen $(clean-pciefd)

ifeq ($(CONFIG_STBAP),y)
pciefd-install:$(install-pciefd)
$(install-pciefd): CFLAGS=
$(install-pciefd):
	@echo In pciefd-install PCIEFD_TARGETS_LIST = $(PCIEFD_TARGETS_LIST)
	$(eval R_CHIP := $(patsubst %-obj,%,$@))
	@echo In pciefd-install R_CHIP= $(R_CHIP)
	install -d $(TARGETDIR)/lib/firmware/brcm
	cp $(FW_$(R_CHIP)_BUILD_PATH)/$(FW_$(R_CHIP)_TARGET)/rtecdc.bin \
		$(TARGETDIR)/lib/firmware/brcm/bcm$(R_CHIP)-firmware.bin;
else
pciefd-install:
	# Nothing to be done here
	@true
endif # CONFIG_STBAP

pciefd-version: $(version-pciefd)

.PHONY: pciefd pciefd-clean pciefd-install pciefd-version pciefd-cleangen
