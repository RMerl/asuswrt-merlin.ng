.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_MAXFILESIZE 3 "September 26, 2023" "ibcurl 8.4.0" libcurl

.SH NAME
CURLOPT_MAXFILESIZE \- maximum file size allowed to download
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_MAXFILESIZE, long size);
.fi
.SH DESCRIPTION
Pass a long as parameter. This specifies the maximum accepted \fIsize\fP (in
bytes) of a file to download. If the file requested is found larger than this
value, the transfer is aborted and \fICURLE_FILESIZE_EXCEEDED\fP is returned.

The file size is not always known prior to the download start, and for such
transfers this option has no effect - even if the file transfer eventually
ends up being larger than this given limit.

If you want a limit above 2GB, use \fICURLOPT_MAXFILESIZE_LARGE(3)\fP.

Since 8.4.0, this option also stops ongoing transfers if they reach this
threshold.
.SH DEFAULT
None
.SH PROTOCOLS
FTP, HTTP and MQTT
.SH EXAMPLE
.nf
CURL *curl = curl_easy_init();
if(curl) {
  CURLcode ret;
  curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
  /* refuse to download if larger than 1000 bytes! */
  curl_easy_setopt(curl, CURLOPT_MAXFILESIZE, 1000L);
  ret = curl_easy_perform(curl);
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CURLE_OK
.SH "SEE ALSO"
.BR CURLOPT_MAX_RECV_SPEED_LARGE (3),
.BR CURLOPT_MAXFILESIZE_LARGE (3)
