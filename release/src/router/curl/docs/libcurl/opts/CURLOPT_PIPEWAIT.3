.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_PIPEWAIT 3 "September 26, 2023" "ibcurl 8.4.0" libcurl

.SH NAME
CURLOPT_PIPEWAIT \- wait for multiplexing
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_PIPEWAIT, long wait);
.fi
.SH DESCRIPTION
Set \fIwait\fP to 1L to tell libcurl to prefer to wait for a connection to
confirm or deny that it can do multiplexing before continuing.

When about to perform a new transfer that allows multiplexing, libcurl checks
for existing connections to use. If no such connection exists it immediately
continues and creates a fresh new connection to use.

By setting this option to 1 - and having \fICURLMOPT_PIPELINING(3)\fP enabled
for the multi handle this transfer is associated with - libcurl instead waits
for the connection to reveal if it is possible to multiplex on before it
continues. This enables libcurl to much better keep the number of connections
to a minimum when using multiplexing protocols.

With this option set, libcurl prefers to wait and reuse an existing connection
for multiplexing rather than the opposite: prefer to open a new connection
rather than waiting.

The waiting time is as long as it takes for the connection to get up and for
libcurl to get the necessary response back that informs it about its protocol
and support level.
.SH DEFAULT
0 (off)
.SH PROTOCOLS
HTTP(S)
.SH EXAMPLE
.nf
CURL *curl = curl_easy_init();
if(curl) {
  curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
  curl_easy_setopt(curl, CURLOPT_PIPEWAIT, 1L);

  /* now add this easy handle to the multi handle */
}
.fi
.SH AVAILABILITY
Added in 7.43.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CURLMOPT_MAX_HOST_CONNECTIONS (3),
.BR CURLMOPT_PIPELINING (3),
.BR CURLOPT_FORBID_REUSE (3),
.BR CURLOPT_FRESH_CONNECT (3)
