.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) 2022 - 2022, Max Dymond, <max.dymond@microsoft.com>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_PREREQFUNCTION 3 "May 17, 2022" "libcurl 7.84.0" "curl_easy_setopt options"

.SH NAME
CURLOPT_PREREQFUNCTION \- user callback called when a connection has been
established, but before a request has been made.
.SH SYNOPSIS
.nf
#include <curl/curl.h>

/* These are the return codes for the pre-request callback. */
#define CURL_PREREQFUNC_OK 0
#define CURL_PREREQFUNC_ABORT 1 /* fail the entire transfer */

int prereq_callback(void *clientp,
                    char *conn_primary_ip,
                    char *conn_local_ip,
                    int conn_primary_port,
                    int conn_local_port);

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_PREREQFUNCTION, prereq_callback);
.SH DESCRIPTION
Pass a pointer to your callback function, which should match the prototype
shown above.

This function gets called by libcurl after a connection has been established
or a connection has been reused (including any SSL handshaking), but before any
request is actually made on the connection. For example, for HTTP, this
callback is called once a connection has been established to the server, but
before a GET/HEAD/POST/etc request has been sent.

This function may be called multiple times if redirections are enabled and are
being followed (see \fICURLOPT_FOLLOWLOCATION(3)\fP).

The callback function must return \fICURL_PREREQFUNC_OK\fP on success, or
\fICURL_PREREQFUNC_ABORT\fP to cause the transfer to fail.

This function is passed the following arguments:
.IP conn_primary_ip
A nul-terminated pointer to a C string containing the primary IP of the remote
server established with this connection. For FTP, this is the IP for the
control connection. IPv6 addresses are represented without surrounding
brackets.
.IP conn_local_ip
A nul-terminated pointer to a C string containing the originating IP for this
connection. IPv6 addresses are represented without surrounding brackets.
.IP conn_primary_port
The primary port number on the remote server established with this connection.
For FTP, this is the port for the control connection. This can be a TCP or a
UDP port number dependending on the protocol.
.IP conn_local_port
The originating port number for this connection. This can be a TCP or a UDP
port number dependending on the protocol.
.IP clientp
The pointer you set with \fICURLOPT_PREREQDATA(3)\fP.
.SH DEFAULT
By default, this is NULL and unused.
.SH PROTOCOLS
ALL
.SH EXAMPLE
.nf
static int prereq_callback(void *clientp,
                           char *conn_primary_ip,
                           char *conn_local_ip,
                           int conn_primary_port,
                           int conn_local_port)
{
  printf("Connection made to %s:%s\\n", conn_primary_ip, conn_primary_port);
  return CURL_PREREQFUNC_OK;
}

{
  struct data prereq_data;
  curl_easy_setopt(CURL *handle, CURLOPT_PREREQFUNCTION, prereq_callback);
  curl_easy_setopt(CURL *handle, CURLOPT_PREREQDATA, &prereq_data);
}
.fi
.SH AVAILABILITY
Added in 7.80.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CURLOPT_PREREQDATA "(3) "
