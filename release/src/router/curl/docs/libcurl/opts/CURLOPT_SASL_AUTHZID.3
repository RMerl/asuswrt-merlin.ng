.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLOPT_SASL_AUTHZID 3 "September 26, 2023" "ibcurl 8.4.0" libcurl

.SH NAME
CURLOPT_SASL_AUTHZID \- authorization identity (identity to act as)
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SASL_AUTHZID, char *authzid);
.fi
.SH DESCRIPTION
Pass a char * as parameter, which should be pointing to the null-terminated
authorization identity (\fIauthzid\fP) for the transfer. Only applicable to
the PLAIN SASL authentication mechanism where it is optional.

When not specified only the authentication identity (\fIauthcid\fP) as
specified by the username is sent to the server, along with the password. The
server derives a \fIauthzid\fP from the \fIauthcid\fP when not provided, which
it then uses internally.

When the \fIauthzid\fP is specified, the use of which is server dependent, it
can be used to access another user's inbox, that the user has been granted
access to, or a shared mailbox for example.
.SH DEFAULT
blank
.SH PROTOCOLS
IMAP, LDAP, POP3 and SMTP
.SH EXAMPLE
.nf
CURL *curl = curl_easy_init();
if(curl) {
  curl_easy_setopt(curl, CURLOPT_URL, "imap://example.com/");
  curl_easy_setopt(curl, CURLOPT_USERNAME, "Kurt");
  curl_easy_setopt(curl, CURLOPT_PASSWORD, "xipj3plmq");
  curl_easy_setopt(curl, CURLOPT_SASL_AUTHZID, "Ursel");
  ret = curl_easy_perform(curl);
  curl_easy_cleanup(curl);
}
.fi
.SH AVAILABILITY
Added in 7.66.0. Support for OpenLDAP added in 7.82.0.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CURLOPT_PASSWORD (3),
.BR CURLOPT_USERNAME (3),
.BR CURLOPT_USERPWD (3)
