.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.TH CURLSHOPT_UNLOCKFUNC 3 "September 27, 2023" "ibcurl 8.4.0" libcurl

.SH NAME
CURLSHOPT_UNLOCKFUNC - mutex unlock callback
.SH SYNOPSIS
.nf
#include <curl/curl.h>

void unlockcb(CURL *handle, curl_lock_data data, void *clientp);

CURLSHcode curl_share_setopt(CURLSH *share, CURLSHOPT_UNLOCKFUNC, unlockcb);
.fi
.SH DESCRIPTION
Set a mutex unlock callback for the share object. There is a corresponding
\fICURLSHOPT_LOCKFUNC(3)\fP callback called when the mutex is first locked.

The \fIunlockcb\fP argument must be a pointer to a function matching the
prototype shown above. The arguments to the callback are:

\fIhandle\fP is the currently active easy handle in use when the share object
is released.

The \fIdata\fP argument tells what kind of data libcurl wants to unlock. Make
sure that the callback uses a different lock for each kind of data.

\fIclientp\fP is the private pointer you set with \fICURLSHOPT_USERDATA(3)\fP.
This pointer is not used by libcurl itself.
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
  CURLSHcode sh;
  share = curl_share_init();
  sh = curl_share_setopt(share, CURLSHOPT_UNLOCKFUNC, mutex_unlock);
  if(sh)
    printf("Error: %s\\n", curl_share_strerror(sh));
.fi
.SH AVAILABILITY
Added in 7.10
.SH RETURN VALUE
CURLSHE_OK (zero) means that the option was set properly, non-zero means an
error occurred. See \fIlibcurl-errors(3)\fP for the full list with
descriptions.
.SH "SEE ALSO"
.BR curl_share_cleanup (3),
.BR curl_share_init (3),
.BR curl_share_setopt (3),
.BR CURLSHOPT_LOCKFUNC (3)
