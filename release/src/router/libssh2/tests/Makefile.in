# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) The libssh2 project and its contributors.
# SPDX-License-Identifier: BSD-3-Clause
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# Get DOCKER_TESTS, DOCKER_TESTS_STATIC, STANDALONE_TESTS, STANDALONE_TESTS_STATOC, SSHD_TESTS,
# librunner_la_SOURCES defines and *_LDFLAGS for statically linked tests.
@HAVE_LIB_STATIC_TRUE@am__append_1 = $(DOCKER_TESTS_STATIC)
@HAVE_LIB_STATIC_TRUE@am__append_2 = $(STANDALONE_TESTS_STATIC)
TESTS = mansyntax.sh $(am__EXEEXT_8) $(am__EXEEXT_6) $(am__append_4) \
	$(am__append_6)
@RUN_DOCKER_TESTS_TRUE@am__append_3 = $(DOCKER_TESTS)
@RUN_SSHD_TESTS_TRUE@@SSHD_TRUE@am__append_4 = test_sshd.test
@RUN_SSHD_TESTS_TRUE@@SSHD_TRUE@am__append_5 = SSHD="$(SSHD)"
@RUN_DOCKER_TESTS_TRUE@am__append_6 = test_read_algos.test
check_PROGRAMS = $(am__EXEEXT_3) $(am__EXEEXT_6) $(am__EXEEXT_7)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/libssh2_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test_auth_keyboard_info_request$(EXEEXT) \
	test_hostkey$(EXEEXT)
@HAVE_LIB_STATIC_TRUE@am__EXEEXT_2 = $(am__EXEEXT_1)
am__EXEEXT_3 = test_aa_warmup$(EXEEXT) test_agent_forward_ok$(EXEEXT) \
	test_auth_keyboard_fail$(EXEEXT) \
	test_auth_keyboard_ok$(EXEEXT) \
	test_auth_password_fail_password$(EXEEXT) \
	test_auth_password_fail_username$(EXEEXT) \
	test_auth_password_ok$(EXEEXT) test_auth_pubkey_fail$(EXEEXT) \
	test_auth_pubkey_ok_dsa$(EXEEXT) \
	test_auth_pubkey_ok_ecdsa$(EXEEXT) \
	test_auth_pubkey_ok_ecdsa_signed$(EXEEXT) \
	test_auth_pubkey_ok_ed25519$(EXEEXT) \
	test_auth_pubkey_ok_ed25519_encrypted$(EXEEXT) \
	test_auth_pubkey_ok_ed25519_mem$(EXEEXT) \
	test_auth_pubkey_ok_rsa$(EXEEXT) \
	test_auth_pubkey_ok_rsa_aes256gcm$(EXEEXT) \
	test_auth_pubkey_ok_rsa_encrypted$(EXEEXT) \
	test_auth_pubkey_ok_rsa_openssh$(EXEEXT) \
	test_auth_pubkey_ok_rsa_signed$(EXEEXT) \
	test_auth_pubkey_ok_rsa_sha2_256_signed$(EXEEXT) \
	test_hostkey_hash$(EXEEXT) test_read$(EXEEXT) $(am__EXEEXT_2)
am__EXEEXT_4 = test_simple$(EXEEXT)
@HAVE_LIB_STATIC_TRUE@am__EXEEXT_5 = $(am__EXEEXT_4)
am__EXEEXT_6 = $(am__EXEEXT_5)
am__EXEEXT_7 = test_ssh2$(EXEEXT) test_auth_pubkey_ok_ed25519$(EXEEXT)
librunner_la_LIBADD =
am_librunner_la_OBJECTS = runner.lo session_fixture.lo \
	openssh_fixture.lo
librunner_la_OBJECTS = $(am_librunner_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
test_aa_warmup_SOURCES = test_aa_warmup.c
test_aa_warmup_OBJECTS = test_aa_warmup.$(OBJEXT)
test_aa_warmup_LDADD = $(LDADD)
test_aa_warmup_DEPENDENCIES = librunner.la ../src/libssh2.la
test_agent_forward_ok_SOURCES = test_agent_forward_ok.c
test_agent_forward_ok_OBJECTS = test_agent_forward_ok.$(OBJEXT)
test_agent_forward_ok_LDADD = $(LDADD)
test_agent_forward_ok_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_keyboard_fail_SOURCES = test_auth_keyboard_fail.c
test_auth_keyboard_fail_OBJECTS = test_auth_keyboard_fail.$(OBJEXT)
test_auth_keyboard_fail_LDADD = $(LDADD)
test_auth_keyboard_fail_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_keyboard_info_request_SOURCES =  \
	test_auth_keyboard_info_request.c
test_auth_keyboard_info_request_OBJECTS =  \
	test_auth_keyboard_info_request.$(OBJEXT)
test_auth_keyboard_info_request_LDADD = $(LDADD)
test_auth_keyboard_info_request_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_keyboard_info_request_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(test_auth_keyboard_info_request_LDFLAGS) $(LDFLAGS) -o $@
test_auth_keyboard_ok_SOURCES = test_auth_keyboard_ok.c
test_auth_keyboard_ok_OBJECTS = test_auth_keyboard_ok.$(OBJEXT)
test_auth_keyboard_ok_LDADD = $(LDADD)
test_auth_keyboard_ok_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_password_fail_password_SOURCES =  \
	test_auth_password_fail_password.c
test_auth_password_fail_password_OBJECTS =  \
	test_auth_password_fail_password.$(OBJEXT)
test_auth_password_fail_password_LDADD = $(LDADD)
test_auth_password_fail_password_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_password_fail_username_SOURCES =  \
	test_auth_password_fail_username.c
test_auth_password_fail_username_OBJECTS =  \
	test_auth_password_fail_username.$(OBJEXT)
test_auth_password_fail_username_LDADD = $(LDADD)
test_auth_password_fail_username_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_password_ok_SOURCES = test_auth_password_ok.c
test_auth_password_ok_OBJECTS = test_auth_password_ok.$(OBJEXT)
test_auth_password_ok_LDADD = $(LDADD)
test_auth_password_ok_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_pubkey_fail_SOURCES = test_auth_pubkey_fail.c
test_auth_pubkey_fail_OBJECTS = test_auth_pubkey_fail.$(OBJEXT)
test_auth_pubkey_fail_LDADD = $(LDADD)
test_auth_pubkey_fail_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_pubkey_ok_dsa_SOURCES = test_auth_pubkey_ok_dsa.c
test_auth_pubkey_ok_dsa_OBJECTS = test_auth_pubkey_ok_dsa.$(OBJEXT)
test_auth_pubkey_ok_dsa_LDADD = $(LDADD)
test_auth_pubkey_ok_dsa_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_pubkey_ok_ecdsa_SOURCES = test_auth_pubkey_ok_ecdsa.c
test_auth_pubkey_ok_ecdsa_OBJECTS =  \
	test_auth_pubkey_ok_ecdsa.$(OBJEXT)
test_auth_pubkey_ok_ecdsa_LDADD = $(LDADD)
test_auth_pubkey_ok_ecdsa_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_ecdsa_signed_SOURCES =  \
	test_auth_pubkey_ok_ecdsa_signed.c
test_auth_pubkey_ok_ecdsa_signed_OBJECTS =  \
	test_auth_pubkey_ok_ecdsa_signed.$(OBJEXT)
test_auth_pubkey_ok_ecdsa_signed_LDADD = $(LDADD)
test_auth_pubkey_ok_ecdsa_signed_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_ed25519_SOURCES = test_auth_pubkey_ok_ed25519.c
test_auth_pubkey_ok_ed25519_OBJECTS =  \
	test_auth_pubkey_ok_ed25519.$(OBJEXT)
test_auth_pubkey_ok_ed25519_LDADD = $(LDADD)
test_auth_pubkey_ok_ed25519_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_ed25519_encrypted_SOURCES =  \
	test_auth_pubkey_ok_ed25519_encrypted.c
test_auth_pubkey_ok_ed25519_encrypted_OBJECTS =  \
	test_auth_pubkey_ok_ed25519_encrypted.$(OBJEXT)
test_auth_pubkey_ok_ed25519_encrypted_LDADD = $(LDADD)
test_auth_pubkey_ok_ed25519_encrypted_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_ed25519_mem_SOURCES =  \
	test_auth_pubkey_ok_ed25519_mem.c
test_auth_pubkey_ok_ed25519_mem_OBJECTS =  \
	test_auth_pubkey_ok_ed25519_mem.$(OBJEXT)
test_auth_pubkey_ok_ed25519_mem_LDADD = $(LDADD)
test_auth_pubkey_ok_ed25519_mem_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_rsa_SOURCES = test_auth_pubkey_ok_rsa.c
test_auth_pubkey_ok_rsa_OBJECTS = test_auth_pubkey_ok_rsa.$(OBJEXT)
test_auth_pubkey_ok_rsa_LDADD = $(LDADD)
test_auth_pubkey_ok_rsa_DEPENDENCIES = librunner.la ../src/libssh2.la
test_auth_pubkey_ok_rsa_aes256gcm_SOURCES =  \
	test_auth_pubkey_ok_rsa_aes256gcm.c
test_auth_pubkey_ok_rsa_aes256gcm_OBJECTS =  \
	test_auth_pubkey_ok_rsa_aes256gcm.$(OBJEXT)
test_auth_pubkey_ok_rsa_aes256gcm_LDADD = $(LDADD)
test_auth_pubkey_ok_rsa_aes256gcm_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_rsa_encrypted_SOURCES =  \
	test_auth_pubkey_ok_rsa_encrypted.c
test_auth_pubkey_ok_rsa_encrypted_OBJECTS =  \
	test_auth_pubkey_ok_rsa_encrypted.$(OBJEXT)
test_auth_pubkey_ok_rsa_encrypted_LDADD = $(LDADD)
test_auth_pubkey_ok_rsa_encrypted_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_rsa_openssh_SOURCES =  \
	test_auth_pubkey_ok_rsa_openssh.c
test_auth_pubkey_ok_rsa_openssh_OBJECTS =  \
	test_auth_pubkey_ok_rsa_openssh.$(OBJEXT)
test_auth_pubkey_ok_rsa_openssh_LDADD = $(LDADD)
test_auth_pubkey_ok_rsa_openssh_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_rsa_sha2_256_signed_SOURCES =  \
	test_auth_pubkey_ok_rsa_sha2_256_signed.c
test_auth_pubkey_ok_rsa_sha2_256_signed_OBJECTS =  \
	test_auth_pubkey_ok_rsa_sha2_256_signed.$(OBJEXT)
test_auth_pubkey_ok_rsa_sha2_256_signed_LDADD = $(LDADD)
test_auth_pubkey_ok_rsa_sha2_256_signed_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_auth_pubkey_ok_rsa_signed_SOURCES =  \
	test_auth_pubkey_ok_rsa_signed.c
test_auth_pubkey_ok_rsa_signed_OBJECTS =  \
	test_auth_pubkey_ok_rsa_signed.$(OBJEXT)
test_auth_pubkey_ok_rsa_signed_LDADD = $(LDADD)
test_auth_pubkey_ok_rsa_signed_DEPENDENCIES = librunner.la \
	../src/libssh2.la
test_hostkey_SOURCES = test_hostkey.c
test_hostkey_OBJECTS = test_hostkey.$(OBJEXT)
test_hostkey_LDADD = $(LDADD)
test_hostkey_DEPENDENCIES = librunner.la ../src/libssh2.la
test_hostkey_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(test_hostkey_LDFLAGS) $(LDFLAGS) -o $@
test_hostkey_hash_SOURCES = test_hostkey_hash.c
test_hostkey_hash_OBJECTS = test_hostkey_hash.$(OBJEXT)
test_hostkey_hash_LDADD = $(LDADD)
test_hostkey_hash_DEPENDENCIES = librunner.la ../src/libssh2.la
test_read_SOURCES = test_read.c
test_read_OBJECTS = test_read.$(OBJEXT)
test_read_LDADD = $(LDADD)
test_read_DEPENDENCIES = librunner.la ../src/libssh2.la
test_simple_SOURCES = test_simple.c
test_simple_OBJECTS = test_simple.$(OBJEXT)
test_simple_LDADD = $(LDADD)
test_simple_DEPENDENCIES = librunner.la ../src/libssh2.la
test_simple_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(test_simple_LDFLAGS) $(LDFLAGS) -o $@
test_ssh2_SOURCES = test_ssh2.c
test_ssh2_OBJECTS = test_ssh2.$(OBJEXT)
test_ssh2_LDADD = $(LDADD)
test_ssh2_DEPENDENCIES = librunner.la ../src/libssh2.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/openssh_fixture.Plo \
	./$(DEPDIR)/runner.Plo ./$(DEPDIR)/session_fixture.Plo \
	./$(DEPDIR)/test_aa_warmup.Po \
	./$(DEPDIR)/test_agent_forward_ok.Po \
	./$(DEPDIR)/test_auth_keyboard_fail.Po \
	./$(DEPDIR)/test_auth_keyboard_info_request.Po \
	./$(DEPDIR)/test_auth_keyboard_ok.Po \
	./$(DEPDIR)/test_auth_password_fail_password.Po \
	./$(DEPDIR)/test_auth_password_fail_username.Po \
	./$(DEPDIR)/test_auth_password_ok.Po \
	./$(DEPDIR)/test_auth_pubkey_fail.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_dsa.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_ecdsa.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_ecdsa_signed.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_ed25519.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_ed25519_encrypted.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_ed25519_mem.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_rsa.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_rsa_aes256gcm.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_rsa_encrypted.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_rsa_openssh.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_rsa_sha2_256_signed.Po \
	./$(DEPDIR)/test_auth_pubkey_ok_rsa_signed.Po \
	./$(DEPDIR)/test_hostkey.Po ./$(DEPDIR)/test_hostkey_hash.Po \
	./$(DEPDIR)/test_read.Po ./$(DEPDIR)/test_simple.Po \
	./$(DEPDIR)/test_ssh2.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(librunner_la_SOURCES) test_aa_warmup.c \
	test_agent_forward_ok.c test_auth_keyboard_fail.c \
	test_auth_keyboard_info_request.c test_auth_keyboard_ok.c \
	test_auth_password_fail_password.c \
	test_auth_password_fail_username.c test_auth_password_ok.c \
	test_auth_pubkey_fail.c test_auth_pubkey_ok_dsa.c \
	test_auth_pubkey_ok_ecdsa.c test_auth_pubkey_ok_ecdsa_signed.c \
	test_auth_pubkey_ok_ed25519.c \
	test_auth_pubkey_ok_ed25519_encrypted.c \
	test_auth_pubkey_ok_ed25519_mem.c test_auth_pubkey_ok_rsa.c \
	test_auth_pubkey_ok_rsa_aes256gcm.c \
	test_auth_pubkey_ok_rsa_encrypted.c \
	test_auth_pubkey_ok_rsa_openssh.c \
	test_auth_pubkey_ok_rsa_sha2_256_signed.c \
	test_auth_pubkey_ok_rsa_signed.c test_hostkey.c \
	test_hostkey_hash.c test_read.c test_simple.c test_ssh2.c
DIST_SOURCES = $(librunner_la_SOURCES) test_aa_warmup.c \
	test_agent_forward_ok.c test_auth_keyboard_fail.c \
	test_auth_keyboard_info_request.c test_auth_keyboard_ok.c \
	test_auth_password_fail_password.c \
	test_auth_password_fail_username.c test_auth_password_ok.c \
	test_auth_pubkey_fail.c test_auth_pubkey_ok_dsa.c \
	test_auth_pubkey_ok_ecdsa.c test_auth_pubkey_ok_ecdsa_signed.c \
	test_auth_pubkey_ok_ed25519.c \
	test_auth_pubkey_ok_ed25519_encrypted.c \
	test_auth_pubkey_ok_ed25519_mem.c test_auth_pubkey_ok_rsa.c \
	test_auth_pubkey_ok_rsa_aes256gcm.c \
	test_auth_pubkey_ok_rsa_encrypted.c \
	test_auth_pubkey_ok_rsa_openssh.c \
	test_auth_pubkey_ok_rsa_sha2_256_signed.c \
	test_auth_pubkey_ok_rsa_signed.c test_hostkey.c \
	test_hostkey_hash.c test_read.c test_simple.c test_ssh2.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
@RUN_DOCKER_TESTS_TRUE@am__EXEEXT_8 = $(am__EXEEXT_3)
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.inc \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FILECMD = @FILECMD@
GREP = @GREP@
HAVE_LIBBCRYPT = @HAVE_LIBBCRYPT@
HAVE_LIBGCRYPT = @HAVE_LIBGCRYPT@
HAVE_LIBMBEDCRYPTO = @HAVE_LIBMBEDCRYPTO@
HAVE_LIBSSL = @HAVE_LIBSSL@
HAVE_LIBWOLFSSL = @HAVE_LIBWOLFSSL@
HAVE_LIBZ = @HAVE_LIBZ@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBBCRYPT = @LIBBCRYPT@
LIBBCRYPT_PREFIX = @LIBBCRYPT_PREFIX@
LIBGCRYPT = @LIBGCRYPT@
LIBGCRYPT_PREFIX = @LIBGCRYPT_PREFIX@
LIBMBEDCRYPTO = @LIBMBEDCRYPTO@
LIBMBEDCRYPTO_PREFIX = @LIBMBEDCRYPTO_PREFIX@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSSH2_CFLAG_EXTRAS = @LIBSSH2_CFLAG_EXTRAS@
LIBSSH2_PC_LIBS = @LIBSSH2_PC_LIBS@
LIBSSH2_PC_LIBS_PRIVATE = @LIBSSH2_PC_LIBS_PRIVATE@
LIBSSH2_PC_REQUIRES = @LIBSSH2_PC_REQUIRES@
LIBSSH2_PC_REQUIRES_PRIVATE = @LIBSSH2_PC_REQUIRES_PRIVATE@
LIBSSH2_VERSION = @LIBSSH2_VERSION@
LIBSSL = @LIBSSL@
LIBSSL_PREFIX = @LIBSSL_PREFIX@
LIBTOOL = @LIBTOOL@
LIBWOLFSSL = @LIBWOLFSSL@
LIBWOLFSSL_PREFIX = @LIBWOLFSSL_PREFIX@
LIBZ = @LIBZ@
LIBZ_PREFIX = @LIBZ_PREFIX@
LIB_FUZZING_ENGINE = @LIB_FUZZING_ENGINE@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBBCRYPT = @LTLIBBCRYPT@
LTLIBGCRYPT = @LTLIBGCRYPT@
LTLIBMBEDCRYPTO = @LTLIBMBEDCRYPTO@
LTLIBOBJS = @LTLIBOBJS@
LTLIBSSL = @LTLIBSSL@
LTLIBWOLFSSL = @LTLIBWOLFSSL@
LTLIBZ = @LTLIBZ@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RC = @RC@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSHD = @SSHD@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Copyright (C) The libssh2 project and its contributors.
# SPDX-License-Identifier: BSD-3-Clause
SUBDIRS = ossfuzz
AM_CPPFLAGS = -I$(top_builddir)/src -I$(top_srcdir)/src -I$(top_srcdir)/include

# This might hold -Werror
AM_CFLAGS = @LIBSSH2_CFLAG_EXTRAS@

# Keep this list sorted
#
# NOTE: test_auth_keyboard_info_request does not use the network, but when
#       run as Windows standalone test, it intermittently fails on GHA with:
#         `Terminate batch job (Y/N)?`
DOCKER_TESTS = test_aa_warmup test_agent_forward_ok \
	test_auth_keyboard_fail test_auth_keyboard_ok \
	test_auth_password_fail_password \
	test_auth_password_fail_username test_auth_password_ok \
	test_auth_pubkey_fail test_auth_pubkey_ok_dsa \
	test_auth_pubkey_ok_ecdsa test_auth_pubkey_ok_ecdsa_signed \
	test_auth_pubkey_ok_ed25519 \
	test_auth_pubkey_ok_ed25519_encrypted \
	test_auth_pubkey_ok_ed25519_mem test_auth_pubkey_ok_rsa \
	test_auth_pubkey_ok_rsa_aes256gcm \
	test_auth_pubkey_ok_rsa_encrypted \
	test_auth_pubkey_ok_rsa_openssh test_auth_pubkey_ok_rsa_signed \
	test_auth_pubkey_ok_rsa_sha2_256_signed test_hostkey_hash \
	test_read $(am__append_1)
STANDALONE_TESTS = $(am__append_2)
SSHD_TESTS = \
  test_ssh2 \
  test_auth_pubkey_ok_ed25519


# Programs of the above that use internal libssh2 functions so they need
# to be statically linked against libssh2
DOCKER_TESTS_STATIC = \
  test_auth_keyboard_info_request \
  test_hostkey

STANDALONE_TESTS_STATIC = \
  test_simple


# Copy of the above for Makefile.am.
# Is there a way to reuse the lists above?
test_auth_keyboard_info_request_LDFLAGS = -static
test_hostkey_LDFLAGS = -static
test_simple_LDFLAGS = -static
librunner_la_SOURCES = \
  runner.c runner.h \
  session_fixture.c session_fixture.h \
  openssh_fixture.c openssh_fixture.h

EXTRA_DIST = \
  CMakeLists.txt \
  key_dsa \
  key_dsa.pub \
  key_dsa_wrong \
  key_dsa_wrong.pub \
  key_ecdsa \
  key_ecdsa.pub \
  key_ecdsa_signed \
  key_ecdsa_signed-cert.pub \
  key_ecdsa_signed.pub \
  key_ed25519 \
  key_ed25519.pub \
  key_ed25519_encrypted \
  key_ed25519_encrypted.pub \
  key_rsa \
  key_rsa.pub \
  key_rsa_aes256gcm \
  key_rsa_aes256gcm.pub \
  key_rsa_encrypted \
  key_rsa_encrypted.pub \
  key_rsa_openssh \
  key_rsa_openssh.pub \
  key_rsa_signed \
  key_rsa_signed-cert.pub \
  key_rsa_signed.pub \
  key_rsa_sha2_256_signed \
  key_rsa_sha2_256_signed-cert.pub \
  key_rsa_sha2_256_signed.pub \
  mansyntax.sh \
  openssh_server/Dockerfile \
  openssh_server/authorized_keys \
  openssh_server/ca_ecdsa \
  openssh_server/ca_ecdsa.pub \
  openssh_server/ca_rsa \
  openssh_server/ca_rsa.pub \
  openssh_server/ca_user_keys.pub \
  openssh_server/ssh_host_ecdsa_key \
  openssh_server/ssh_host_ed25519_key \
  openssh_server/ssh_host_rsa_key \
  openssh_server/sshd_config \
  test_read_algos.test \
  test_read_algos.txt \
  test_sshd.test


# Some tests rely on the 'srcdir' env. Set by autotools automatically.
TESTS_ENVIRONMENT = EXEEXT=$(EXEEXT) $(am__append_5)

# TAP tests
TEST_EXTENSIONS = .test
# 'TEST' in 'TEST_LOG_DRIVER' is the test extension in uppercase.
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/tap-driver.sh

# Internal library used by tests

# This must be last in the list so it resolves symbols in previous libraries
LDADD = librunner.la ../src/libssh2.la
check_LTLIBRARIES = librunner.la
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/Makefile.inc $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

librunner.la: $(librunner_la_OBJECTS) $(librunner_la_DEPENDENCIES) $(EXTRA_librunner_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(librunner_la_OBJECTS) $(librunner_la_LIBADD) $(LIBS)

test_aa_warmup$(EXEEXT): $(test_aa_warmup_OBJECTS) $(test_aa_warmup_DEPENDENCIES) $(EXTRA_test_aa_warmup_DEPENDENCIES) 
	@rm -f test_aa_warmup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_aa_warmup_OBJECTS) $(test_aa_warmup_LDADD) $(LIBS)

test_agent_forward_ok$(EXEEXT): $(test_agent_forward_ok_OBJECTS) $(test_agent_forward_ok_DEPENDENCIES) $(EXTRA_test_agent_forward_ok_DEPENDENCIES) 
	@rm -f test_agent_forward_ok$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_agent_forward_ok_OBJECTS) $(test_agent_forward_ok_LDADD) $(LIBS)

test_auth_keyboard_fail$(EXEEXT): $(test_auth_keyboard_fail_OBJECTS) $(test_auth_keyboard_fail_DEPENDENCIES) $(EXTRA_test_auth_keyboard_fail_DEPENDENCIES) 
	@rm -f test_auth_keyboard_fail$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_keyboard_fail_OBJECTS) $(test_auth_keyboard_fail_LDADD) $(LIBS)

test_auth_keyboard_info_request$(EXEEXT): $(test_auth_keyboard_info_request_OBJECTS) $(test_auth_keyboard_info_request_DEPENDENCIES) $(EXTRA_test_auth_keyboard_info_request_DEPENDENCIES) 
	@rm -f test_auth_keyboard_info_request$(EXEEXT)
	$(AM_V_CCLD)$(test_auth_keyboard_info_request_LINK) $(test_auth_keyboard_info_request_OBJECTS) $(test_auth_keyboard_info_request_LDADD) $(LIBS)

test_auth_keyboard_ok$(EXEEXT): $(test_auth_keyboard_ok_OBJECTS) $(test_auth_keyboard_ok_DEPENDENCIES) $(EXTRA_test_auth_keyboard_ok_DEPENDENCIES) 
	@rm -f test_auth_keyboard_ok$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_keyboard_ok_OBJECTS) $(test_auth_keyboard_ok_LDADD) $(LIBS)

test_auth_password_fail_password$(EXEEXT): $(test_auth_password_fail_password_OBJECTS) $(test_auth_password_fail_password_DEPENDENCIES) $(EXTRA_test_auth_password_fail_password_DEPENDENCIES) 
	@rm -f test_auth_password_fail_password$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_password_fail_password_OBJECTS) $(test_auth_password_fail_password_LDADD) $(LIBS)

test_auth_password_fail_username$(EXEEXT): $(test_auth_password_fail_username_OBJECTS) $(test_auth_password_fail_username_DEPENDENCIES) $(EXTRA_test_auth_password_fail_username_DEPENDENCIES) 
	@rm -f test_auth_password_fail_username$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_password_fail_username_OBJECTS) $(test_auth_password_fail_username_LDADD) $(LIBS)

test_auth_password_ok$(EXEEXT): $(test_auth_password_ok_OBJECTS) $(test_auth_password_ok_DEPENDENCIES) $(EXTRA_test_auth_password_ok_DEPENDENCIES) 
	@rm -f test_auth_password_ok$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_password_ok_OBJECTS) $(test_auth_password_ok_LDADD) $(LIBS)

test_auth_pubkey_fail$(EXEEXT): $(test_auth_pubkey_fail_OBJECTS) $(test_auth_pubkey_fail_DEPENDENCIES) $(EXTRA_test_auth_pubkey_fail_DEPENDENCIES) 
	@rm -f test_auth_pubkey_fail$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_fail_OBJECTS) $(test_auth_pubkey_fail_LDADD) $(LIBS)

test_auth_pubkey_ok_dsa$(EXEEXT): $(test_auth_pubkey_ok_dsa_OBJECTS) $(test_auth_pubkey_ok_dsa_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_dsa_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_dsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_dsa_OBJECTS) $(test_auth_pubkey_ok_dsa_LDADD) $(LIBS)

test_auth_pubkey_ok_ecdsa$(EXEEXT): $(test_auth_pubkey_ok_ecdsa_OBJECTS) $(test_auth_pubkey_ok_ecdsa_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_ecdsa_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_ecdsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_ecdsa_OBJECTS) $(test_auth_pubkey_ok_ecdsa_LDADD) $(LIBS)

test_auth_pubkey_ok_ecdsa_signed$(EXEEXT): $(test_auth_pubkey_ok_ecdsa_signed_OBJECTS) $(test_auth_pubkey_ok_ecdsa_signed_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_ecdsa_signed_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_ecdsa_signed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_ecdsa_signed_OBJECTS) $(test_auth_pubkey_ok_ecdsa_signed_LDADD) $(LIBS)

test_auth_pubkey_ok_ed25519$(EXEEXT): $(test_auth_pubkey_ok_ed25519_OBJECTS) $(test_auth_pubkey_ok_ed25519_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_ed25519_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_ed25519$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_ed25519_OBJECTS) $(test_auth_pubkey_ok_ed25519_LDADD) $(LIBS)

test_auth_pubkey_ok_ed25519_encrypted$(EXEEXT): $(test_auth_pubkey_ok_ed25519_encrypted_OBJECTS) $(test_auth_pubkey_ok_ed25519_encrypted_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_ed25519_encrypted_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_ed25519_encrypted$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_ed25519_encrypted_OBJECTS) $(test_auth_pubkey_ok_ed25519_encrypted_LDADD) $(LIBS)

test_auth_pubkey_ok_ed25519_mem$(EXEEXT): $(test_auth_pubkey_ok_ed25519_mem_OBJECTS) $(test_auth_pubkey_ok_ed25519_mem_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_ed25519_mem_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_ed25519_mem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_ed25519_mem_OBJECTS) $(test_auth_pubkey_ok_ed25519_mem_LDADD) $(LIBS)

test_auth_pubkey_ok_rsa$(EXEEXT): $(test_auth_pubkey_ok_rsa_OBJECTS) $(test_auth_pubkey_ok_rsa_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_rsa_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_rsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_rsa_OBJECTS) $(test_auth_pubkey_ok_rsa_LDADD) $(LIBS)

test_auth_pubkey_ok_rsa_aes256gcm$(EXEEXT): $(test_auth_pubkey_ok_rsa_aes256gcm_OBJECTS) $(test_auth_pubkey_ok_rsa_aes256gcm_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_rsa_aes256gcm_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_rsa_aes256gcm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_rsa_aes256gcm_OBJECTS) $(test_auth_pubkey_ok_rsa_aes256gcm_LDADD) $(LIBS)

test_auth_pubkey_ok_rsa_encrypted$(EXEEXT): $(test_auth_pubkey_ok_rsa_encrypted_OBJECTS) $(test_auth_pubkey_ok_rsa_encrypted_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_rsa_encrypted_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_rsa_encrypted$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_rsa_encrypted_OBJECTS) $(test_auth_pubkey_ok_rsa_encrypted_LDADD) $(LIBS)

test_auth_pubkey_ok_rsa_openssh$(EXEEXT): $(test_auth_pubkey_ok_rsa_openssh_OBJECTS) $(test_auth_pubkey_ok_rsa_openssh_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_rsa_openssh_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_rsa_openssh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_rsa_openssh_OBJECTS) $(test_auth_pubkey_ok_rsa_openssh_LDADD) $(LIBS)

test_auth_pubkey_ok_rsa_sha2_256_signed$(EXEEXT): $(test_auth_pubkey_ok_rsa_sha2_256_signed_OBJECTS) $(test_auth_pubkey_ok_rsa_sha2_256_signed_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_rsa_sha2_256_signed_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_rsa_sha2_256_signed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_rsa_sha2_256_signed_OBJECTS) $(test_auth_pubkey_ok_rsa_sha2_256_signed_LDADD) $(LIBS)

test_auth_pubkey_ok_rsa_signed$(EXEEXT): $(test_auth_pubkey_ok_rsa_signed_OBJECTS) $(test_auth_pubkey_ok_rsa_signed_DEPENDENCIES) $(EXTRA_test_auth_pubkey_ok_rsa_signed_DEPENDENCIES) 
	@rm -f test_auth_pubkey_ok_rsa_signed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_auth_pubkey_ok_rsa_signed_OBJECTS) $(test_auth_pubkey_ok_rsa_signed_LDADD) $(LIBS)

test_hostkey$(EXEEXT): $(test_hostkey_OBJECTS) $(test_hostkey_DEPENDENCIES) $(EXTRA_test_hostkey_DEPENDENCIES) 
	@rm -f test_hostkey$(EXEEXT)
	$(AM_V_CCLD)$(test_hostkey_LINK) $(test_hostkey_OBJECTS) $(test_hostkey_LDADD) $(LIBS)

test_hostkey_hash$(EXEEXT): $(test_hostkey_hash_OBJECTS) $(test_hostkey_hash_DEPENDENCIES) $(EXTRA_test_hostkey_hash_DEPENDENCIES) 
	@rm -f test_hostkey_hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_hostkey_hash_OBJECTS) $(test_hostkey_hash_LDADD) $(LIBS)

test_read$(EXEEXT): $(test_read_OBJECTS) $(test_read_DEPENDENCIES) $(EXTRA_test_read_DEPENDENCIES) 
	@rm -f test_read$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_read_OBJECTS) $(test_read_LDADD) $(LIBS)

test_simple$(EXEEXT): $(test_simple_OBJECTS) $(test_simple_DEPENDENCIES) $(EXTRA_test_simple_DEPENDENCIES) 
	@rm -f test_simple$(EXEEXT)
	$(AM_V_CCLD)$(test_simple_LINK) $(test_simple_OBJECTS) $(test_simple_LDADD) $(LIBS)

test_ssh2$(EXEEXT): $(test_ssh2_OBJECTS) $(test_ssh2_DEPENDENCIES) $(EXTRA_test_ssh2_DEPENDENCIES) 
	@rm -f test_ssh2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_ssh2_OBJECTS) $(test_ssh2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openssh_fixture.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/runner.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/session_fixture.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_aa_warmup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_agent_forward_ok.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_keyboard_fail.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_keyboard_info_request.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_keyboard_ok.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_password_fail_password.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_password_fail_username.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_password_ok.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_fail.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_dsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_ecdsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_ecdsa_signed.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_ed25519.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_ed25519_encrypted.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_ed25519_mem.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_rsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_rsa_aes256gcm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_rsa_encrypted.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_rsa_openssh.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_rsa_sha2_256_signed.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_auth_pubkey_ok_rsa_signed.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_hostkey.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_hostkey_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_read.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_simple.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ssh2.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_LTLIBRARIES)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_LTLIBRARIES)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
mansyntax.sh.log: mansyntax.sh
	@p='mansyntax.sh'; \
	b='mansyntax.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_aa_warmup.log: test_aa_warmup$(EXEEXT)
	@p='test_aa_warmup$(EXEEXT)'; \
	b='test_aa_warmup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_agent_forward_ok.log: test_agent_forward_ok$(EXEEXT)
	@p='test_agent_forward_ok$(EXEEXT)'; \
	b='test_agent_forward_ok'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_keyboard_fail.log: test_auth_keyboard_fail$(EXEEXT)
	@p='test_auth_keyboard_fail$(EXEEXT)'; \
	b='test_auth_keyboard_fail'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_keyboard_ok.log: test_auth_keyboard_ok$(EXEEXT)
	@p='test_auth_keyboard_ok$(EXEEXT)'; \
	b='test_auth_keyboard_ok'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_password_fail_password.log: test_auth_password_fail_password$(EXEEXT)
	@p='test_auth_password_fail_password$(EXEEXT)'; \
	b='test_auth_password_fail_password'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_password_fail_username.log: test_auth_password_fail_username$(EXEEXT)
	@p='test_auth_password_fail_username$(EXEEXT)'; \
	b='test_auth_password_fail_username'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_password_ok.log: test_auth_password_ok$(EXEEXT)
	@p='test_auth_password_ok$(EXEEXT)'; \
	b='test_auth_password_ok'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_fail.log: test_auth_pubkey_fail$(EXEEXT)
	@p='test_auth_pubkey_fail$(EXEEXT)'; \
	b='test_auth_pubkey_fail'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_dsa.log: test_auth_pubkey_ok_dsa$(EXEEXT)
	@p='test_auth_pubkey_ok_dsa$(EXEEXT)'; \
	b='test_auth_pubkey_ok_dsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_ecdsa.log: test_auth_pubkey_ok_ecdsa$(EXEEXT)
	@p='test_auth_pubkey_ok_ecdsa$(EXEEXT)'; \
	b='test_auth_pubkey_ok_ecdsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_ecdsa_signed.log: test_auth_pubkey_ok_ecdsa_signed$(EXEEXT)
	@p='test_auth_pubkey_ok_ecdsa_signed$(EXEEXT)'; \
	b='test_auth_pubkey_ok_ecdsa_signed'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_ed25519.log: test_auth_pubkey_ok_ed25519$(EXEEXT)
	@p='test_auth_pubkey_ok_ed25519$(EXEEXT)'; \
	b='test_auth_pubkey_ok_ed25519'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_ed25519_encrypted.log: test_auth_pubkey_ok_ed25519_encrypted$(EXEEXT)
	@p='test_auth_pubkey_ok_ed25519_encrypted$(EXEEXT)'; \
	b='test_auth_pubkey_ok_ed25519_encrypted'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_ed25519_mem.log: test_auth_pubkey_ok_ed25519_mem$(EXEEXT)
	@p='test_auth_pubkey_ok_ed25519_mem$(EXEEXT)'; \
	b='test_auth_pubkey_ok_ed25519_mem'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_rsa.log: test_auth_pubkey_ok_rsa$(EXEEXT)
	@p='test_auth_pubkey_ok_rsa$(EXEEXT)'; \
	b='test_auth_pubkey_ok_rsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_rsa_aes256gcm.log: test_auth_pubkey_ok_rsa_aes256gcm$(EXEEXT)
	@p='test_auth_pubkey_ok_rsa_aes256gcm$(EXEEXT)'; \
	b='test_auth_pubkey_ok_rsa_aes256gcm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_rsa_encrypted.log: test_auth_pubkey_ok_rsa_encrypted$(EXEEXT)
	@p='test_auth_pubkey_ok_rsa_encrypted$(EXEEXT)'; \
	b='test_auth_pubkey_ok_rsa_encrypted'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_rsa_openssh.log: test_auth_pubkey_ok_rsa_openssh$(EXEEXT)
	@p='test_auth_pubkey_ok_rsa_openssh$(EXEEXT)'; \
	b='test_auth_pubkey_ok_rsa_openssh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_rsa_signed.log: test_auth_pubkey_ok_rsa_signed$(EXEEXT)
	@p='test_auth_pubkey_ok_rsa_signed$(EXEEXT)'; \
	b='test_auth_pubkey_ok_rsa_signed'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_pubkey_ok_rsa_sha2_256_signed.log: test_auth_pubkey_ok_rsa_sha2_256_signed$(EXEEXT)
	@p='test_auth_pubkey_ok_rsa_sha2_256_signed$(EXEEXT)'; \
	b='test_auth_pubkey_ok_rsa_sha2_256_signed'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_hostkey_hash.log: test_hostkey_hash$(EXEEXT)
	@p='test_hostkey_hash$(EXEEXT)'; \
	b='test_hostkey_hash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_read.log: test_read$(EXEEXT)
	@p='test_read$(EXEEXT)'; \
	b='test_read'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_auth_keyboard_info_request.log: test_auth_keyboard_info_request$(EXEEXT)
	@p='test_auth_keyboard_info_request$(EXEEXT)'; \
	b='test_auth_keyboard_info_request'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_hostkey.log: test_hostkey$(EXEEXT)
	@p='test_hostkey$(EXEEXT)'; \
	b='test_hostkey'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_simple.log: test_simple$(EXEEXT)
	@p='test_simple$(EXEEXT)'; \
	b='test_simple'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_LTLIBRARIES)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/openssh_fixture.Plo
	-rm -f ./$(DEPDIR)/runner.Plo
	-rm -f ./$(DEPDIR)/session_fixture.Plo
	-rm -f ./$(DEPDIR)/test_aa_warmup.Po
	-rm -f ./$(DEPDIR)/test_agent_forward_ok.Po
	-rm -f ./$(DEPDIR)/test_auth_keyboard_fail.Po
	-rm -f ./$(DEPDIR)/test_auth_keyboard_info_request.Po
	-rm -f ./$(DEPDIR)/test_auth_keyboard_ok.Po
	-rm -f ./$(DEPDIR)/test_auth_password_fail_password.Po
	-rm -f ./$(DEPDIR)/test_auth_password_fail_username.Po
	-rm -f ./$(DEPDIR)/test_auth_password_ok.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_fail.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_dsa.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ecdsa.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ecdsa_signed.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ed25519.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ed25519_encrypted.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ed25519_mem.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_aes256gcm.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_encrypted.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_openssh.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_sha2_256_signed.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_signed.Po
	-rm -f ./$(DEPDIR)/test_hostkey.Po
	-rm -f ./$(DEPDIR)/test_hostkey_hash.Po
	-rm -f ./$(DEPDIR)/test_read.Po
	-rm -f ./$(DEPDIR)/test_simple.Po
	-rm -f ./$(DEPDIR)/test_ssh2.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/openssh_fixture.Plo
	-rm -f ./$(DEPDIR)/runner.Plo
	-rm -f ./$(DEPDIR)/session_fixture.Plo
	-rm -f ./$(DEPDIR)/test_aa_warmup.Po
	-rm -f ./$(DEPDIR)/test_agent_forward_ok.Po
	-rm -f ./$(DEPDIR)/test_auth_keyboard_fail.Po
	-rm -f ./$(DEPDIR)/test_auth_keyboard_info_request.Po
	-rm -f ./$(DEPDIR)/test_auth_keyboard_ok.Po
	-rm -f ./$(DEPDIR)/test_auth_password_fail_password.Po
	-rm -f ./$(DEPDIR)/test_auth_password_fail_username.Po
	-rm -f ./$(DEPDIR)/test_auth_password_ok.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_fail.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_dsa.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ecdsa.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ecdsa_signed.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ed25519.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ed25519_encrypted.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_ed25519_mem.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_aes256gcm.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_encrypted.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_openssh.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_sha2_256_signed.Po
	-rm -f ./$(DEPDIR)/test_auth_pubkey_ok_rsa_signed.Po
	-rm -f ./$(DEPDIR)/test_hostkey.Po
	-rm -f ./$(DEPDIR)/test_hostkey_hash.Po
	-rm -f ./$(DEPDIR)/test_read.Po
	-rm -f ./$(DEPDIR)/test_simple.Po
	-rm -f ./$(DEPDIR)/test_ssh2.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
