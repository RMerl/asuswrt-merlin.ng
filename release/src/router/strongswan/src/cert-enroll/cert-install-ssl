#!/bin/bash
# Install the generated key, host certificate and associated CA certificates
# as credentials for a TLS-protected client-server connection.
#
# Copyright (C) 2023 Andreas Steffen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
set -e

##############################################################################
# Set local paths
#

# Path to the SSL credentials directory
SSL_DIR="/etc/ssl/$USER_GROUP"

##############################################################################
# Create a credentials directory with given user group settings
#
mkdir -p $SSL_DIR
chgrp $USER_GROUP $SSL_DIR
chmod g+s $SSL_DIR
cp $CERTDIR/{$HOSTKEY,$HOSTCERT} $SSL_DIR
chmod g+r $SSL_DIR/$HOSTKEY

cat $CERTDIR/{$ROOTCA,$SUBCA} > $SSL_DIR/trusted.pem
if [ -s $CERTDIR/old/$ROOTCA ]
then
  cat $CERTDIR/old/$ROOTCA >> $SSL_DIR/trusted.pem
fi
if [ -s $CERTDIR/old/$SUBCA ]
then
  cat $CERTDIR/old/$SUBCA  >> $SSL_DIR/trusted.pem
fi

##############################################################################
# Restart the systemd service if it is active
#

if /usr/bin/systemctl -q is-active $SERVICE
then
  /usr/bin/systemctl restart $SERVICE
fi
exit 0
