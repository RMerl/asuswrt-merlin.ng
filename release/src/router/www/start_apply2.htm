<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta HTTP-EQUIV="Pragma" CONTENT="no-cache">
<meta HTTP-EQUIV="Expires" CONTENT="-1">
<link rel="shortcut icon" href="images/favicon.png">
<link rel="icon" href="images/favicon.png">
<script type="text/javascript">
var page_modified = 0;
var restart_time = 0;

var rc_support = '<% nvram_get("rc_support"); %>'; 
var dsl_support = (rc_support.search("dsl") == -1) ? false : true;
var current_page = '<% get_parameter("current_page"); %>';
var next_page = '<% get_parameter("next_page"); %>';
var action_script = '<% get_parameter("action_script"); %>';
var action_mode = '<% get_parameter("action_mode"); %>';
var action_wait = '<% get_parameter("action_wait"); %>';
var group_id = '<% get_parameter("group_id"); %>';
var getflag = '<% get_parameter("flag"); %>';

/* debug
console.log("====== " + document.referrer + " ======");
console.log("current_page:" + current_page);
console.log("next_page:" + next_page);
console.log("action_script:" + action_script);
console.log("action_mode:" + action_mode);
console.log("action_wait:" + action_wait);
console.log("group_id:" + group_id);
console.log("getflag:" + getflag);
 */
var htmlEnDeCode = (function() {
	var charToEntityRegex,
		entityToCharRegex,
		charToEntity,
		entityToChar;

	function resetCharacterEntities() {
		charToEntity = {};
		entityToChar = {};
		// add the default set
		addCharacterEntities({
			'&amp;'	 :   '&',
			'&gt;'	  :   '>',
			'&lt;'	  :   '<',
			'&quot;'	:   '"',
			'&#39;'	 :   "'"
		});
	}

	function addCharacterEntities(newEntities) {
		var charKeys = [],
			entityKeys = [],
			key, echar;
		for (key in newEntities) {
			echar = newEntities[key];
			entityToChar[key] = echar;
			charToEntity[echar] = key;
			charKeys.push(echar);
			entityKeys.push(key);
		}
		charToEntityRegex = new RegExp('(' + charKeys.join('|') + ')', 'g');
		entityToCharRegex = new RegExp('(' + entityKeys.join('|') + '|&#[0-9]{1,5};' + ')', 'g');
	}

	function htmlEncode(value){
		var htmlEncodeReplaceFn = function(match, capture) {
			return charToEntity[capture];
		};

		return (!value) ? value : String(value).replace(charToEntityRegex, htmlEncodeReplaceFn);
	}

	function htmlDecode(value) {
		var htmlDecodeReplaceFn = function(match, capture) {
			return (capture in entityToChar) ? entityToChar[capture] : String.fromCharCode(parseInt(capture.substr(2), 10));
		};

		return (!value) ? value : String(value).replace(entityToCharRegex, htmlDecodeReplaceFn);
	}

	resetCharacterEntities();

	return {
		htmlEncode: htmlEncode,
		htmlDecode: htmlDecode
	};
})();

if(typeof isSwMode != "function"){
	var isSwMode = function(mode){
		var ui_sw_mode = [<% get_operation_mode(); %>][0];
		mode = mode.toLowerCase();
		return ui_sw_mode == mode;
	}
}
if(typeof isSupport != "function"){
	function isSupport(_ptn){
		let ui_support = [<% get_ui_support(); %>][0];
		return (ui_support[_ptn]) ? ui_support[_ptn] : 0;
	}
}
if(typeof isSmartConnectBand != "function"){
	function isSmartConnectBand(band){
		const smart_connect_version = isSupport("smart_connect_v2") ? "v2" : isSupport("smart_connect") || isSupport("bandstr") ? "v1" : "";
		const bandName = ["2G", "5G1", "5G2", "6G1", "6G2"];
		if(band == `2g1`) band = `2G`;
		band = band.toUpperCase();

		if(get_wl_unit_by_band(band) == "") return false;
		const smart_connect_x = '<% nvram_get("smart_connect_x"); %>';

		if(smart_connect_x == 0) return false;

		if(smart_connect_version == "v1"){
			if(smart_connect_x == 1){
				return true;
			}
			else if(smart_connect_x == 2){
				if(band == "5G1" || band == "5G2") return true;
			}
			else if(smart_connect_x == 3){
				if(band == "2G" || band == "5G1") return true;
			}
		}

		if(smart_connect_version == "v2"){
			if(band == "6G") band = "6G1";
			if(band == "5G") band = "5G1";

			const zerosArray = Array(5).fill("0");
			let smart_connect_selif_x = '<% nvram_get("smart_connect_selif_x"); %>';
			let smart_connect_selif_band = parseInt(smart_connect_selif_x).toString(2).split("").reverse();
			let smart_connect_band = smart_connect_selif_band.concat(zerosArray.slice(smart_connect_selif_band.length));
			let result = false;

			for(let i = 0; i < bandName.length; i++){
				if(bandName[i] == band){
					result = smart_connect_band[i] == "1";
					break;
				}
			}

			return result;
		}

		return false;
	}
}
if(typeof get_wl_unit_by_band != "function"){
	function get_wl_unit_by_band(_band){
		if(_band == undefined) return "";

		_band = (_band).toString().toUpperCase();
		const wlnband_list = `<% nvram_get("wlnband_list"); %>`.toUpperCase().split("&#60");

		const bandMap = {
			"2G": "2G1",
			"5G": "5G1",
			"6G": "6G1"
		};

		_band = bandMap[_band] || _band;

		return findWLUnit(wlnband_list, _band).toString();

		function findWLUnit(array, band) {
			const idx = $.inArray(band, array);
			return idx !== -1 ? idx : '';
		}
	}
}

function started_validating(){
}

function done_validating(action){
	parent.done_validating(action, group_id);
}

function started_committing(){
}

function done_committing(){
	page_modified = 1;
}

function no_changes_and_no_committing(){
}

function invalid_variable_value(variable, bad_value, message){
}

function restart_needed_time(second){
	restart_time = second;
}

function delay_redirect(next_url){
	document.redirectForm.action = next_url;
	document.redirectForm.target = "";
	document.redirectForm.submit();
}

function top_delay_redirect(next_url){
	document.redirectForm.action = next_url;
	document.redirectForm.target = "_parent";
	document.redirectForm.submit();
}

var makeRequest = {
	_notSuccessCount: 0,
	_notSupportXML: false,

	start: function(url, callBackSuccess, callBackError){
		var xmlHttp;
		if(window.XMLHttpRequest)
			xmlHttp = new XMLHttpRequest();
		else if(window.ActiveXObject)
			xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
		else{
			makeRequest._notSupportXML = true;
			alert("Your browser does not support XMLHTTP.");
			return false;
		}

		xmlHttp.onreadystatechange = function(){
			if(xmlHttp.readyState == 4){
				if(xmlHttp.status == 200){
					callBackSuccess(xmlHttp);
				}
				else{
					makeRequest._notSuccessCount++;
					callBackError();
				}	
	 		}
		}

		xmlHttp.open('GET', url, true);
		xmlHttp.send(null);
	}
};

function showWlHint(updateFlag){
	if(!isSwMode("RT") && !isSwMode('ap')) return false;

	var wl_nband_title = (function(){
		const wlnband_list = `<% nvram_get("wlnband_list"); %>`.split("&#60");
		const titleArr = [];
		const bandCounts = {};
		for (const band of wlnband_list) {
			let bandType = band.substring(0, 2);
			if (band.startsWith('60g')) {
				bandType = '60g';
			}
			bandCounts[bandType] = (bandCounts[bandType] || 0) + 1;
		}
		for (const band of wlnband_list) {
			let bandType = band.substring(0, 2);
			if (band.startsWith('60g')) {
				bandType = '60g';
			}
			const bandNumber = band.substring(bandType.length);
			let frequency = '';
			let unit = 'GHz';
			if (bandType === '2g') {
				frequency = '2.4 ';
			} else if (bandType === '5g' || bandType === '6g' || bandType === '60g') {
				frequency = bandType.substring(0, bandType.length - 1) + ' ';
			}
			if (frequency !== '') {
				titleArr.push(bandCounts[bandType] > 1 ? `${frequency}${unit}-${bandNumber}` : `${frequency}${unit}`);
			}
		}
		return titleArr;
	})();

	var genWlObj = (function(){
		const smart_connect_version = isSupport("smart_connect_v2") ? "v2" : isSupport("smart_connect") || isSupport("bandstr") ? "v1" : "";
		var smart_connect_nvram = '<% nvram_get("smart_connect_x"); %>';
		var wlObj = [];
		var odmpid = '<% nvram_get("odmpid"); %>';
		const wlUnit = function(_band, _ssid, _key, _band_name){
			this.band = _band;
			this.ssid = _ssid;
			this.key = _key;
			this.band_name = _band_name;
		}
		if(isSupport("sdn_mainfh")){
			const apmSSIDArray = [
				"",
				decodeURIComponent('<% nvram_char_to_ascii("", "apm1_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm2_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm3_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm4_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm5_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm6_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm7_ssid"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm8_ssid"); %>')
			];
			const apmSecArray = [
				"",
				decodeURIComponent('<% nvram_char_to_ascii("", "apm1_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm2_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm3_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm4_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm5_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm6_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm7_security"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm8_security"); %>')
			];
			const apmDutListArray = [
				"",
				decodeURIComponent('<% nvram_char_to_ascii("", "apm1_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm2_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm3_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm4_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm5_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm6_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm7_dut_list"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "apm8_dut_list"); %>')
			];
			const bands_bit_mapping = [
				{ bit: 1, band: "2G", text: "2.4 GHz" },
				{ bit: 2, band: "5G", text: "5 GHz" },
				{ bit: 4, band: "5G1", text: "5 GHz-1" },
				{ bit: 8, band: "5G2", text: "5 GHz-2" },
				{ bit: 16, band: "6G", text: "6 GHz" },
				{ bit: 32, band: "6G1", text: "6 GHz-1" },
				{ bit: 64, band: "6G2", text: "6 GHz-2" },
			];
			const dut_support_bands = (()=>{
				let result = [];
				if(isSupport("noWiFi")){
					return result;
				}
				if(get_wl_unit_by_band("2G") != ""){
					result = result.concat(bands_bit_mapping.find(el => el.bit === 1));
				}
				if(get_wl_unit_by_band("5G2") != ""){
					result = result.concat(bands_bit_mapping.filter(el => [4, 8].includes(el.bit)));
				}
				else if(get_wl_unit_by_band("5G") != ""){
					result = result.concat(bands_bit_mapping.find(el => el.bit === 2));
				}
				if(get_wl_unit_by_band("6G2") != ""){
					result = result.concat(bands_bit_mapping.filter(el => [32, 64].includes(el.bit)));
				}
				else if(get_wl_unit_by_band("6G") != ""){
					result = result.concat(bands_bit_mapping.find(el => el.bit === 16));
				}
				return result;
			})();
			const mainFH = decodeURIComponent('<% nvram_char_to_ascii("", "sdn_rl"); %>').split("<").filter(item => item.includes("MAINFH"));
			mainFH.forEach(item=>{
				if(item != ""){
					const apmIdx = item.split(">")[5];
					const apm_ssid = apmSSIDArray[apmIdx];
					const apm_psk = (()=>{
						if(apmSecArray[apmIdx] != undefined && apmSecArray[apmIdx] != ""){
							return apmSecArray[apmIdx].split(">")[3];
						}
						else{
							return "";
						}
					})();
					const apm_band_bitwise = (()=>{
						if(apmDutListArray[apmIdx] != undefined && apmDutListArray[apmIdx] != ""){
							let band_bitwise = 0;
							const dut_list_arr = apmDutListArray[apmIdx].split("<");
							for(let i = 0; i < dut_list_arr.length; i++){
								if(dut_list_arr[i] != ""){
									const dut_info_arr = dut_list_arr[i].split(">");
									band_bitwise = isNaN(parseInt(dut_info_arr[1])) ? 0 : parseInt(dut_info_arr[1]);
									break;
								}
							}
							return band_bitwise;
						}
						else{
							return 0;
						}
					})();
					const apm_band_info = (()=>{
						let band_info = {"band":[], "band_name":[]};
						bands_bit_mapping.forEach(({ bit, band, text}) => {
							if((apm_band_bitwise & bit) && check_support_band_bit(bit)){
								band_info.band.push(text);
								band_info.band_name.push(band);
							}
						});
						return band_info;
					})();
					wlObj.push(
						new wlUnit(
							apm_band_info.band.toString(),
							apm_ssid,
							apm_psk,
							apm_band_info.band_name[0]
						)
					);
				}
			});
			function check_support_band_bit(_band_bitwise){
				return (dut_support_bands.find(wifi_option => wifi_option.bit & _band_bitwise)) ? true : false;
			}
		}
		else{
			const wl_len = wl_nband_title.length;
			var ssid_nvram = [
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl0_ssid"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl1_ssid"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl2_ssid"); %>'))
			];
			if(wl_len >= 4)
				ssid_nvram.push(htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl3_ssid"); %>')));

			var auth_nvram = [
				decodeURIComponent('<% nvram_char_to_ascii("", "wl0_auth_mode_x"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "wl1_auth_mode_x"); %>'),
				decodeURIComponent('<% nvram_char_to_ascii("", "wl2_auth_mode_x"); %>')
			];
			if(wl_len >= 4)
				auth_nvram.push(decodeURIComponent('<% nvram_char_to_ascii("", "wl3_auth_mode_x"); %>'));

			var key_nvram = [
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl0_wpa_psk"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl1_wpa_psk"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl2_wpa_psk"); %>'))
			];
			if(wl_len >= 4)
				key_nvram.push(htmlEnDeCode.htmlEncode(decodeURIComponent('<% nvram_char_to_ascii("", "wl3_wpa_psk"); %>')));

			var ssid_param = [
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl0_ssid"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl1_ssid"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl2_ssid"); %>'))
			];
			if(wl_len >= 4)
				ssid_param.push(htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl3_ssid"); %>')));

			var auth_param = [
				decodeURIComponent('<% get_ascii_parameter("wl0_auth_mode_x"); %>'),
				decodeURIComponent('<% get_ascii_parameter("wl1_auth_mode_x"); %>'),
				decodeURIComponent('<% get_ascii_parameter("wl2_auth_mode_x"); %>')
			];
			if(wl_len >= 4)
				auth_param.push(decodeURIComponent('<% get_ascii_parameter("wl3_auth_mode_x"); %>'));

			var key_param = [
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl0_wpa_psk"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl1_wpa_psk"); %>')),
				htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl2_wpa_psk"); %>'))
			];
			if(wl_len >= 4)
				key_param.push(htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl3_wpa_psk"); %>')));

			var applyParam = {
				unit: decodeURIComponent('<% get_ascii_parameter("wl_unit"); %>'),
				ssid: htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl_ssid"); %>')),
				auth: decodeURIComponent('<% get_ascii_parameter("wl_auth_mode_x"); %>'),
				key: htmlEnDeCode.htmlEncode(decodeURIComponent('<% get_ascii_parameter("wl_wpa_psk"); %>')),
				smartConnect: decodeURIComponent('<% get_ascii_parameter("smart_connect_x"); %>')
			}

			// original profile
			for(var i=0; i<wl_nband_title.length; i++){
				wlObj.push(
					new wlUnit(
						wl_nband_title[i],
						ssid_nvram[i],
						(auth_nvram[i] == "open") ? "" : key_nvram[i],
						(()=>{
							let bandName = "";
							if(wl_nband_title[i].indexOf("2.4") != -1){
								bandName = "2G";
							}
							else{
								bandName = wl_nband_title[i].replace(`GHz`,`G`).replace(/\s+/g, '');
								bandName = (wl_nband_title[i].indexOf(`-`) != -1) ? (bandName.replace(`-`,``)) : (bandName + "1");
							}
							return bandName;
						})()
					)
				);
			}

			if(applyParam.ssid != ""){
				// handle wl
				wlObj[applyParam.unit].ssid = applyParam.ssid;
				wlObj[applyParam.unit].key = (applyParam.auth == "open") ? "" : applyParam.key;
			}
			else{
				// handle wlX
				for(var i=0; i<wlObj.length; i++){
					if(ssid_param[i] != ""){
						wlObj[i].ssid = ssid_param[i];
						wlObj[i].key = (auth_param[i] == "open") ? "" : key_param[i];
					}
				}
			}
			wlObj.sort((a,b) => (a.band > b.band) ? 1 : ((b.band > a.band) ? -1 : 0));

			let wlObj_tmp = [];
			let smartconnect_info = false;
			wlObj.forEach((item)=>{
				if(isSmartConnectBand(item.band_name)){
					if(!smartconnect_info){
						let sc_band = JSON.parse(JSON.stringify(item));
						sc_band.band = `<#smart_connect#>`;
						wlObj_tmp.push(sc_band);
						smartconnect_info = true;
					}
				}
				else{
					wlObj_tmp.push(item);
				}
			});

			wlObj = wlObj_tmp;
		}
		return wlObj;
	})();

	(function(wlObj){
		if(wlObj.length == 0 || typeof wlObj == "undefined") return false;

		var wlHintCss = "";
		wlHintCss += "<style type='text/css'>"
		// Desktop style sheet
		wlHintCss += "#wlHint{";
		wlHintCss += "font-family: Arial;";
		wlHintCss += "background:url(/images/New_ui/login_bg.png) #283437 no-repeat;";
		wlHintCss += "background-size: 1280px 1076px;";
		wlHintCss += "z-index:9999;";
		wlHintCss += "position:absolute;";
		wlHintCss += "left:0;";
		wlHintCss += "top:0;";
		wlHintCss += "width:100%;";
		wlHintCss += "height:100%;";
		wlHintCss += "background-position: center 0%;";
		wlHintCss += "margin: 0px;";
		wlHintCss += "}.prod_madelName{";
		wlHintCss += "font-size: 26pt;";
		wlHintCss += ((top.webWrapper) ? "color:#000;" : "color:#fff;");
		wlHintCss += "margin-top: 10px;";
		wlHintCss += "}.nologin{";
		wlHintCss += "word-break: break-all;";
		wlHintCss += "margin:10px 0px 0px 78px;";
		wlHintCss += "background-color:rgba(255,255,255,0.2);";
		wlHintCss += "padding:20px;";
		wlHintCss += "line-height:36px;";
		wlHintCss += "border-radius: 5px;";
		wlHintCss += "width: 480px;";
		wlHintCss += "border: 0;";
		wlHintCss += ((top.webWrapper) ? "color:#000;" : "color:#fff;");
		wlHintCss += "font-size:16pt;";
		wlHintCss += "}.div_table{";
		wlHintCss += "display:table;";
		wlHintCss += "}.div_tr{";
		wlHintCss += "display:table-row;";
		wlHintCss += "}.div_td{";
		wlHintCss += "display:table-cell;";
		wlHintCss += "}.title_gap{";
		wlHintCss += "margin:20px 0px 0px 78px;";
		wlHintCss += "width: 480px;";
		wlHintCss += "font-size: 16pt;";
		wlHintCss += ((top.webWrapper) ? "color:#000;" : "color:#fff;");
		wlHintCss += "}.main_field_gap{";
		wlHintCss += "margin:100px auto 0;";
		wlHintCss += "}b{color:#00BBFF;";
		wlHintCss += "}.title_name{";
		wlHintCss += "font-size: 40pt;";
		wlHintCss += ((top.webWrapper) ? "color:#181818;" : "color:#93d2d9;");
		wlHintCss += "}.img_gap{";
		wlHintCss += "padding-right:30px;";
		wlHintCss += "vertical-align:middle;";
		wlHintCss += "}.yellow{";
		wlHintCss += "color:#FC0;";
		wlHintCss += "}.login_img{";
		wlHintCss += "width:43px;";
		wlHintCss += "height:43px;";
		wlHintCss += "background-image: url('images/New_ui/icon_titleName.png');";
		wlHintCss += "background-repeat: no-repeat;}";
		// Mobile style sheet
		wlHintCss += "@media screen and (max-width: 1000px){";
		if(top.location.pathname.search("QIS") != -1){
			wlHintCss += "#wlHint{background:url('/images/qis/pattern3-3_10_A15.png'),url('/images/qis/pattern3_05_4.png'),url('/images/qis/mainimage_img4.png') #1D1E1F no-repeat;";
			wlHintCss += "background-size:auto;}b{color:#279FD9;}";
		}
		wlHintCss += ".prod_madelName{";
		wlHintCss += "font-size: 13pt;";
		wlHintCss += "}.nologin{";
		wlHintCss += "margin-left:10px;";
		wlHintCss += "padding:10px;";
		wlHintCss += "line-height:18pt;";
		wlHintCss += "width: 100%;";
		wlHintCss += "font-size:14px;";
		wlHintCss += "}.main_field_gap{";
		wlHintCss += "width:82%;";
		wlHintCss += "margin:10px 0 0 15px;";
		wlHintCss += "}.title_name{";
		wlHintCss += "font-size:20pt;";
		wlHintCss += "margin-left:15px;";
		wlHintCss += "}.login_img{";
		wlHintCss += "background-size: 75%;";
		wlHintCss += "}.img_gap{";
		wlHintCss += "padding-right:0;";
		wlHintCss += "vertical-align:middle;";
		wlHintCss += "}.title_gap{";
		wlHintCss += "margin:15px 0px 0px 15px;";
		wlHintCss += "width: 100%;";
		wlHintCss += "font-size: 12pt;";
		wlHintCss += "}}";
		wlHintCss += "</style>";

		var wlHintJs = '<script>setInterval(function(){var a;if(window.XMLHttpRequest)a=new XMLHttpRequest;else{if(!window.ActiveXObject)return!1;a=new ActiveXObject("Microsoft.XMLHTTP")}a.onreadystatechange=function(){4==a.readyState&&200==a.status&&(top.location.href="/")},a.open("GET","/httpd_check.xml",!0),a.send(null)},';
		wlHintJs += (action_script == "reboot")?restart_time*1000:"5000";
		wlHintJs += ');<\x2Fscript>';

		var wlHintHtml = '';
		wlHintHtml += '<meta content="telephone=no" name="format-detection"><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=yes">';
		wlHintHtml += '<div id="wlHint">';
		wlHintHtml += '<div class="div_table main_field_gap">';
		wlHintHtml += '<div class="div_tr">';
		wlHintHtml += '<div class="prod_madelName"><div class="title_name"><div class="div_td img_gap"><div class="login_img"></div></div><div class="div_td"><#Web_Title2#></div></div></div>';
		wlHintHtml += '<div id="login_filed">';
		wlHintHtml += "<div class='p1 title_gap'><#DrSurf_sweet_advise1#></div>";

		if(typeof updateFlag != "undefined") wlHintHtml += "<div class='p1 title_gap yellow'>Firmware upgrade is done.</div>";

		for(var i=0; i<wlObj.length; i++){
			wlHintHtml += '<div class="p1 title_gap">'+ wlObj[i].band +'</div>';
			wlHintHtml += '<div class="nologin">';
			wlHintHtml += '<#QIS_finish_wireless_item1#>: <b>';
			wlHintHtml += wlObj[i].ssid + '</b><br>';
			wlHintHtml += '<#Network_key#>: <b>';
			wlHintHtml += (wlObj[i].key == "") ? "Open System" : wlObj[i].key;
			wlHintHtml += '</b></div>';
		}
		wlHintHtml += '</div></div></div></div>';
		top.document.write(wlHintCss + wlHintJs + wlHintHtml);
	})(genWlObj);
}

function showdr_advise(setting){
	var getXMLAndRedirect = function(){
		if(makeRequest._notSupportXML){
			if(getflag !== ""){
				parent.location.href = "/QIS_wizard.htm?flag=finish";
			}

			if(current_page.length > 0){
				parent.location.href = current_page;
			}
		}

		makeRequest.start('/httpd_check.xml', function(xhr){
			if(xhr.responseText.search("Main_Login.asp") !== -1) top.location.href = "/";

			var httpds = xhr.responseXML.getElementsByTagName("httpd");
			if (httpds !== null && httpds[0] !== null) {
				var redirectPage = current_page;
				if(redirectPage.length > 0) {
					if (getflag !== "") {
						redirectPage = next_page + "?flag=" + getflag;
					}

					setTimeout(function(){
						parent.location.href = redirectPage;
					}, 1000);
				}
			}
		}, getXMLAndRedirect);
	};

	if(parent.parent.document.forms[0].current_page.value == "/QIS_wizard.htm"
			&& parent.parent.document.forms[0].sw_mode.value == "3"){
		parent.parent.document.getElementById('drword').innerHTML = "<#DrSurf_sweet_advise1#><br/><br/>";
		setTimeout("parent.parent.document.getElementById('drword').innerHTML = \"<#DrSurf_sweet_advise3#><br/><br/>\"", 10000);
		setTimeout(getXMLAndRedirect, restart_time*1000);
	}
	else if(setting == "finish"){
		parent.parent.document.getElementById('drword').innerHTML = "<#DrSurf_sweet_advise1#><br/><br/>";
		getXMLAndRedirect();
	}
	else{
		parent.parent.document.getElementById('drword').innerHTML = "<#DrSurf_sweet_advise1#><br/><br/>";
		parent.parent.document.getElementById('wireless_client_detect').style.display = "";
		parent.parent.document.getElementById('alertImg').style.display = "none";
		if(typeof parent.detect_LANStatus == 'function')
			setTimeout("parent.detect_LANStatus('finish');", restart_time*1000);
		else{
			setTimeout(getXMLAndRedirect, restart_time*1000);
		}
	}
}

function qis_delay_redirect(next_url){
	parent.parent.document.redirectForm.action = next_url;
	parent.parent.document.redirectForm.target = "contentM";
	parent.parent.document.redirectForm.submit();
}

function afterLiveUpdate(){
	if(parent.parent.liveUpdateFinish == true){
		parent.location.href = '/qis/QIS_finish.htm';
	}
	else{
		setTimeout(function(){afterLiveUpdate();}, 500);
	}	
}

function initial(){
	var doDetect = function(){
		setInterval(function(){var a;if(window.XMLHttpRequest)a=new XMLHttpRequest;else{if(!window.ActiveXObject)return!1;a=new ActiveXObject("Microsoft.XMLHTTP")}a.onreadystatechange=function(){4==a.readyState&&200==a.status&&(top.location.href="/")},a.open("GET","/httpd_check.xml",!0),a.send(null)},3e3);
	}

	var isWLclient = function () {  //detect login client is by wireless or wired
		<% login_state_hook(); %>
		var wireless = [<% wl_auth_list(); %>];	// [[MAC, associated, authorized], ...]
		if(wireless[0] == undefined)
			return false;

		if(wireless.length > 0) {
			for(var i = 0; i < wireless.length; i += 1) {
				if(wireless[i][0].toUpperCase() == login_mac_str().toUpperCase()) {
					return true;  //wireless
				}
			}
		}

		return false; //wired
	};

	if(getflag == "finishQIS"){
		if(isWLclient()){
			if(action_script == "reboot" || action_script.search("restart_wireless") != -1 || action_script.search("restart_dsl_wireless") != -1 
				|| action_script.search("restart_subnet") != -1){
				showWlHint();
				return;
			}
		}
		
		if(dsl_support){
			if(action_script.search("restart_dsl_wireless") != -1){
			setTimeout(parent.startLiveUpdate, 40000);
			setTimeout("parent.parent.document.getElementById('btn_gotoindex').style.visibility = 'visible';", 40000);
			}
		}

		if(action_script.search("restart_subnet") !== -1 || action_script == "reboot"){
			setTimeout(doDetect, restart_time*1000);
		}

		return;
	}	
	
	if(getflag == "liveUpdate"){
		setTimeout(function(){
			parent.parent.detect_firmware();
			afterLiveUpdate();
		}, restart_time*1000);
	}
	else if(getflag == "upgrading"){
		parent.progressBar = 0;
		parent.showLoadingUpdate();
	}
	else if(getflag == "sitesurvey"){
		parent.setTimeout("update_site_info();", 1000);
	}
	else if(getflag == "wlcconnect"){
		parent.retValHandler.errCount = 0;
		parent.parent.document.getElementById("LoadingBar").style.visibility = "visible";
		parent.parent.document.getElementById("LoadingBar").style.display = "";
		parent.parent.showLoadingBar(90);
		setTimeout("parent.retValHandler.doQuery();", 75000);		
	}
	else if(getflag == "next"){
		parent.redirect_index();
	}
	else if(getflag == "pppoe_failed"){
		top.pppoe_failed_flag = true;
		setTimeout("parent.location.href='/qis/QIS_internet_account.htm';", restart_time*1000);
	}	
	else if(action_script == "saveNvram"){
		if(getflag == "finish"){
			if(parent.document.getElementById("hidden_frame")){
				setTimeout("parent.location.href='/qis/QIS_finish.htm';", restart_time*1000);
			}
			else{
				parent.parent.showLoading(restart_time, "waiting");
				setTimeout("showdr_advise('finish');", (restart_time+1)*1000);
			}
		}
		else
			return;
	}
	else if(getflag == "background"){
		return;
	}
	else if(page_modified == 1){
		if(isWLclient()){
			if(action_script.search("restart_wireless") != -1 || action_script.search("restart_all") != -1  || action_script.search("reboot") != -1){
				showWlHint();
				return;
			}
			else if(getflag == "finish"){
				if(parent.document.getElementById("hidden_frame")){
					setTimeout("parent.location.href='/qis/QIS_finish.htm';", restart_time*1000);  // Get
				}
				else{
					parent.parent.showLoading(restart_time, "waiting");
					setTimeout("showdr_advise('finish');", (restart_time+1)*1000);
				}
			}

			if(current_page.indexOf(parent.ABS_INDEXPAGE) >= 0){
				parent.showLoading(restart_time, "waiting");
			}
		}
		else if(getflag == "finish"){
			if(parent.document.getElementById("hidden_frame")){
				setTimeout("parent.location.href='/qis/QIS_finish.htm';", restart_time*1000);  // Get
			}
			else{
				parent.parent.showLoading(restart_time, "waiting");
				setTimeout("showdr_advise('finish');", (restart_time+1)*1000);
			}
		} 
		else if(getflag == "adv_ap_mode"){
			/*if(parent.findasus_support){
				parent.parent.document.getElementById('drword').innerHTML = "<#OP_AP_hint#>";
			}else{*/
				parent.parent.document.getElementById('drword').innerHTML = "<#Main_alert_proceeding_desc3#>.<#LANConfig_ChangedLANIP#>";
			//}
			setTimeout("parent.parent.hideLoading();	",15000);
			setTimeout("parent.parent.dr_advise();",15000);
		}
		else{
			parent.parent.showLoading(restart_time);
			if(navigator.userAgent.indexOf("Safari") >= 0){
				if(document.redirectForm.flag.value != "")
					next_page += "?flag=" + document.redirectForm.flag.value;
				setTimeout("parent.parent.location.href='"+next_page+"';", restart_time*1000);
			}
			else
				setTimeout("top_delay_redirect('"+next_page+"');", restart_time*1000);
		}
	}
	else if(action_script == "reboot" || action_script.search("restart_subnet") !== -1){
		parent.showLoading(restart_time);
		setTimeout("top_delay_redirect('"+next_page+"');", restart_time*1000);
	}
	else{
		if(next_page == "/qis/QIS_finish.htm"){
			if(navigator.userAgent.indexOf("Opera")  >= 0)
				setTimeout("qis_delay_redirect('/qis/QIS_finish.htm');", restart_time*1000);
			else	
				setTimeout("top_delay_redirect('"+next_page+"');", restart_time*1000);
		}
		else if(next_page == "/QIS_wizard.htm"){
			if(navigator.userAgent.indexOf("Opera")  >= 0)
				setTimeout("qis_delay_redirect('/qis/QIS_finish.htm');", restart_time*1000);
			else	
				setTimeout("top_delay_redirect('"+next_page+"');", restart_time*1000);
		}
		else{
			parent.parent.location.href = next_page;
		}
	}
}
</script>
</head>

<body onload="initial();">
<form method="post" name="redirectForm" action="" target="">
<input type="hidden" name="flag" value='<% get_parameter("flag"); %>'>
</form>

<% update_variables(); %>
<% convert_asus_variables(); %>
<% asus_nvram_commit(); %>
<% notify_services(); %>

</body>
</html>
